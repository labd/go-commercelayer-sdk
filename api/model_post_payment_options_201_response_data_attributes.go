/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the POSTPaymentOptions201ResponseDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &POSTPaymentOptions201ResponseDataAttributes{}

// POSTPaymentOptions201ResponseDataAttributes struct for POSTPaymentOptions201ResponseDataAttributes
type POSTPaymentOptions201ResponseDataAttributes struct {
	// The payment option's name. Wehn blank is inherited by payment source type.
	Name interface{} `json:"name,omitempty"`
	// The payment source type. One of 'adyen_payments', 'axerve_payments', 'braintree_payments', 'checkout_com_payments', 'credit_cards', 'external_payments', 'klarna_payments', 'paypal_payments', 'satispay_payments', 'stripe_payments', or 'wire_transfers'.
	PaymentSourceType interface{} `json:"payment_source_type"`
	// The payment options data to be added to the payment source payload. Check payment specific API for more details.
	Data interface{} `json:"data"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference interface{} `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code.
	ReferenceOrigin interface{} `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata interface{} `json:"metadata,omitempty"`
}

// NewPOSTPaymentOptions201ResponseDataAttributes instantiates a new POSTPaymentOptions201ResponseDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPOSTPaymentOptions201ResponseDataAttributes(paymentSourceType interface{}, data interface{}) *POSTPaymentOptions201ResponseDataAttributes {
	this := POSTPaymentOptions201ResponseDataAttributes{}
	this.PaymentSourceType = paymentSourceType
	this.Data = data
	return &this
}

// NewPOSTPaymentOptions201ResponseDataAttributesWithDefaults instantiates a new POSTPaymentOptions201ResponseDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPOSTPaymentOptions201ResponseDataAttributesWithDefaults() *POSTPaymentOptions201ResponseDataAttributes {
	this := POSTPaymentOptions201ResponseDataAttributes{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *POSTPaymentOptions201ResponseDataAttributes) GetName() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTPaymentOptions201ResponseDataAttributes) GetNameOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return &o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *POSTPaymentOptions201ResponseDataAttributes) HasName() bool {
	if o != nil && IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given interface{} and assigns it to the Name field.
func (o *POSTPaymentOptions201ResponseDataAttributes) SetName(v interface{}) {
	o.Name = v
}

// GetPaymentSourceType returns the PaymentSourceType field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *POSTPaymentOptions201ResponseDataAttributes) GetPaymentSourceType() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.PaymentSourceType
}

// GetPaymentSourceTypeOk returns a tuple with the PaymentSourceType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTPaymentOptions201ResponseDataAttributes) GetPaymentSourceTypeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.PaymentSourceType) {
		return nil, false
	}
	return &o.PaymentSourceType, true
}

// SetPaymentSourceType sets field value
func (o *POSTPaymentOptions201ResponseDataAttributes) SetPaymentSourceType(v interface{}) {
	o.PaymentSourceType = v
}

// GetData returns the Data field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *POSTPaymentOptions201ResponseDataAttributes) GetData() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTPaymentOptions201ResponseDataAttributes) GetDataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *POSTPaymentOptions201ResponseDataAttributes) SetData(v interface{}) {
	o.Data = v
}

// GetReference returns the Reference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *POSTPaymentOptions201ResponseDataAttributes) GetReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTPaymentOptions201ResponseDataAttributes) GetReferenceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return &o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *POSTPaymentOptions201ResponseDataAttributes) HasReference() bool {
	if o != nil && IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given interface{} and assigns it to the Reference field.
func (o *POSTPaymentOptions201ResponseDataAttributes) SetReference(v interface{}) {
	o.Reference = v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *POSTPaymentOptions201ResponseDataAttributes) GetReferenceOrigin() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTPaymentOptions201ResponseDataAttributes) GetReferenceOriginOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReferenceOrigin) {
		return nil, false
	}
	return &o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *POSTPaymentOptions201ResponseDataAttributes) HasReferenceOrigin() bool {
	if o != nil && IsNil(o.ReferenceOrigin) {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given interface{} and assigns it to the ReferenceOrigin field.
func (o *POSTPaymentOptions201ResponseDataAttributes) SetReferenceOrigin(v interface{}) {
	o.ReferenceOrigin = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *POSTPaymentOptions201ResponseDataAttributes) GetMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *POSTPaymentOptions201ResponseDataAttributes) GetMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *POSTPaymentOptions201ResponseDataAttributes) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given interface{} and assigns it to the Metadata field.
func (o *POSTPaymentOptions201ResponseDataAttributes) SetMetadata(v interface{}) {
	o.Metadata = v
}

func (o POSTPaymentOptions201ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o POSTPaymentOptions201ResponseDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.PaymentSourceType != nil {
		toSerialize["payment_source_type"] = o.PaymentSourceType
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullablePOSTPaymentOptions201ResponseDataAttributes struct {
	value *POSTPaymentOptions201ResponseDataAttributes
	isSet bool
}

func (v NullablePOSTPaymentOptions201ResponseDataAttributes) Get() *POSTPaymentOptions201ResponseDataAttributes {
	return v.value
}

func (v *NullablePOSTPaymentOptions201ResponseDataAttributes) Set(val *POSTPaymentOptions201ResponseDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePOSTPaymentOptions201ResponseDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePOSTPaymentOptions201ResponseDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePOSTPaymentOptions201ResponseDataAttributes(val *POSTPaymentOptions201ResponseDataAttributes) *NullablePOSTPaymentOptions201ResponseDataAttributes {
	return &NullablePOSTPaymentOptions201ResponseDataAttributes{value: val, isSet: true}
}

func (v NullablePOSTPaymentOptions201ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePOSTPaymentOptions201ResponseDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
