/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the LineItemUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LineItemUpdate{}

// LineItemUpdate struct for LineItemUpdate
type LineItemUpdate struct {
	Data LineItemUpdateData `json:"data"`
}

// NewLineItemUpdate instantiates a new LineItemUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLineItemUpdate(data LineItemUpdateData) *LineItemUpdate {
	this := LineItemUpdate{}
	this.Data = data
	return &this
}

// NewLineItemUpdateWithDefaults instantiates a new LineItemUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLineItemUpdateWithDefaults() *LineItemUpdate {
	this := LineItemUpdate{}
	return &this
}

// GetData returns the Data field value
func (o *LineItemUpdate) GetData() LineItemUpdateData {
	if o == nil {
		var ret LineItemUpdateData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *LineItemUpdate) GetDataOk() (*LineItemUpdateData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *LineItemUpdate) SetData(v LineItemUpdateData) {
	o.Data = v
}

func (o LineItemUpdate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LineItemUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullableLineItemUpdate struct {
	value *LineItemUpdate
	isSet bool
}

func (v NullableLineItemUpdate) Get() *LineItemUpdate {
	return v.value
}

func (v *NullableLineItemUpdate) Set(val *LineItemUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableLineItemUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableLineItemUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLineItemUpdate(val *LineItemUpdate) *NullableLineItemUpdate {
	return &NullableLineItemUpdate{value: val, isSet: true}
}

func (v NullableLineItemUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLineItemUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
