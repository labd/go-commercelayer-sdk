/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the StockItemDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StockItemDataRelationships{}

// StockItemDataRelationships struct for StockItemDataRelationships
type StockItemDataRelationships struct {
	StockLocation     *DeliveryLeadTimeDataRelationshipsStockLocation `json:"stock_location,omitempty"`
	Sku               *BundleDataRelationshipsSkus                    `json:"sku,omitempty"`
	ReservedStock     *StockItemDataRelationshipsReservedStock        `json:"reserved_stock,omitempty"`
	StockReservations *LineItemDataRelationshipsStockReservations     `json:"stock_reservations,omitempty"`
	Attachments       *AuthorizationDataRelationshipsAttachments      `json:"attachments,omitempty"`
	Versions          *AddressDataRelationshipsVersions               `json:"versions,omitempty"`
}

// NewStockItemDataRelationships instantiates a new StockItemDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStockItemDataRelationships() *StockItemDataRelationships {
	this := StockItemDataRelationships{}
	return &this
}

// NewStockItemDataRelationshipsWithDefaults instantiates a new StockItemDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStockItemDataRelationshipsWithDefaults() *StockItemDataRelationships {
	this := StockItemDataRelationships{}
	return &this
}

// GetStockLocation returns the StockLocation field value if set, zero value otherwise.
func (o *StockItemDataRelationships) GetStockLocation() DeliveryLeadTimeDataRelationshipsStockLocation {
	if o == nil || IsNil(o.StockLocation) {
		var ret DeliveryLeadTimeDataRelationshipsStockLocation
		return ret
	}
	return *o.StockLocation
}

// GetStockLocationOk returns a tuple with the StockLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockItemDataRelationships) GetStockLocationOk() (*DeliveryLeadTimeDataRelationshipsStockLocation, bool) {
	if o == nil || IsNil(o.StockLocation) {
		return nil, false
	}
	return o.StockLocation, true
}

// HasStockLocation returns a boolean if a field has been set.
func (o *StockItemDataRelationships) HasStockLocation() bool {
	if o != nil && !IsNil(o.StockLocation) {
		return true
	}

	return false
}

// SetStockLocation gets a reference to the given DeliveryLeadTimeDataRelationshipsStockLocation and assigns it to the StockLocation field.
func (o *StockItemDataRelationships) SetStockLocation(v DeliveryLeadTimeDataRelationshipsStockLocation) {
	o.StockLocation = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *StockItemDataRelationships) GetSku() BundleDataRelationshipsSkus {
	if o == nil || IsNil(o.Sku) {
		var ret BundleDataRelationshipsSkus
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockItemDataRelationships) GetSkuOk() (*BundleDataRelationshipsSkus, bool) {
	if o == nil || IsNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *StockItemDataRelationships) HasSku() bool {
	if o != nil && !IsNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given BundleDataRelationshipsSkus and assigns it to the Sku field.
func (o *StockItemDataRelationships) SetSku(v BundleDataRelationshipsSkus) {
	o.Sku = &v
}

// GetReservedStock returns the ReservedStock field value if set, zero value otherwise.
func (o *StockItemDataRelationships) GetReservedStock() StockItemDataRelationshipsReservedStock {
	if o == nil || IsNil(o.ReservedStock) {
		var ret StockItemDataRelationshipsReservedStock
		return ret
	}
	return *o.ReservedStock
}

// GetReservedStockOk returns a tuple with the ReservedStock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockItemDataRelationships) GetReservedStockOk() (*StockItemDataRelationshipsReservedStock, bool) {
	if o == nil || IsNil(o.ReservedStock) {
		return nil, false
	}
	return o.ReservedStock, true
}

// HasReservedStock returns a boolean if a field has been set.
func (o *StockItemDataRelationships) HasReservedStock() bool {
	if o != nil && !IsNil(o.ReservedStock) {
		return true
	}

	return false
}

// SetReservedStock gets a reference to the given StockItemDataRelationshipsReservedStock and assigns it to the ReservedStock field.
func (o *StockItemDataRelationships) SetReservedStock(v StockItemDataRelationshipsReservedStock) {
	o.ReservedStock = &v
}

// GetStockReservations returns the StockReservations field value if set, zero value otherwise.
func (o *StockItemDataRelationships) GetStockReservations() LineItemDataRelationshipsStockReservations {
	if o == nil || IsNil(o.StockReservations) {
		var ret LineItemDataRelationshipsStockReservations
		return ret
	}
	return *o.StockReservations
}

// GetStockReservationsOk returns a tuple with the StockReservations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockItemDataRelationships) GetStockReservationsOk() (*LineItemDataRelationshipsStockReservations, bool) {
	if o == nil || IsNil(o.StockReservations) {
		return nil, false
	}
	return o.StockReservations, true
}

// HasStockReservations returns a boolean if a field has been set.
func (o *StockItemDataRelationships) HasStockReservations() bool {
	if o != nil && !IsNil(o.StockReservations) {
		return true
	}

	return false
}

// SetStockReservations gets a reference to the given LineItemDataRelationshipsStockReservations and assigns it to the StockReservations field.
func (o *StockItemDataRelationships) SetStockReservations(v LineItemDataRelationshipsStockReservations) {
	o.StockReservations = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *StockItemDataRelationships) GetAttachments() AuthorizationDataRelationshipsAttachments {
	if o == nil || IsNil(o.Attachments) {
		var ret AuthorizationDataRelationshipsAttachments
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockItemDataRelationships) GetAttachmentsOk() (*AuthorizationDataRelationshipsAttachments, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *StockItemDataRelationships) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given AuthorizationDataRelationshipsAttachments and assigns it to the Attachments field.
func (o *StockItemDataRelationships) SetAttachments(v AuthorizationDataRelationshipsAttachments) {
	o.Attachments = &v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *StockItemDataRelationships) GetVersions() AddressDataRelationshipsVersions {
	if o == nil || IsNil(o.Versions) {
		var ret AddressDataRelationshipsVersions
		return ret
	}
	return *o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StockItemDataRelationships) GetVersionsOk() (*AddressDataRelationshipsVersions, bool) {
	if o == nil || IsNil(o.Versions) {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *StockItemDataRelationships) HasVersions() bool {
	if o != nil && !IsNil(o.Versions) {
		return true
	}

	return false
}

// SetVersions gets a reference to the given AddressDataRelationshipsVersions and assigns it to the Versions field.
func (o *StockItemDataRelationships) SetVersions(v AddressDataRelationshipsVersions) {
	o.Versions = &v
}

func (o StockItemDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StockItemDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StockLocation) {
		toSerialize["stock_location"] = o.StockLocation
	}
	if !IsNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	if !IsNil(o.ReservedStock) {
		toSerialize["reserved_stock"] = o.ReservedStock
	}
	if !IsNil(o.StockReservations) {
		toSerialize["stock_reservations"] = o.StockReservations
	}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.Versions) {
		toSerialize["versions"] = o.Versions
	}
	return toSerialize, nil
}

type NullableStockItemDataRelationships struct {
	value *StockItemDataRelationships
	isSet bool
}

func (v NullableStockItemDataRelationships) Get() *StockItemDataRelationships {
	return v.value
}

func (v *NullableStockItemDataRelationships) Set(val *StockItemDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableStockItemDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableStockItemDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStockItemDataRelationships(val *StockItemDataRelationships) *NullableStockItemDataRelationships {
	return &NullableStockItemDataRelationships{value: val, isSet: true}
}

func (v NullableStockItemDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStockItemDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
