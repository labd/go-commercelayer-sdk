/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes{}

// GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes struct for GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes
type GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes struct {
	// The tax calculator's internal name.
	Name interface{} `json:"name,omitempty"`
	// The tax calculator's type.
	Type interface{} `json:"type,omitempty"`
	// Time at which the resource was created.
	CreatedAt interface{} `json:"created_at,omitempty"`
	// Time at which the resource was last updated.
	UpdatedAt interface{} `json:"updated_at,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference interface{} `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code.
	ReferenceOrigin interface{} `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata interface{} `json:"metadata,omitempty"`
	// The URL to the service that will compute the taxes.
	TaxCalculatorUrl interface{} `json:"tax_calculator_url,omitempty"`
	// The circuit breaker state, by default it is 'closed'. It can become 'open' once the number of consecutive failures overlaps the specified threshold, in such case no further calls to the failing callback are made.
	CircuitState interface{} `json:"circuit_state,omitempty"`
	// The number of consecutive failures recorded by the circuit breaker associated to this resource, will be reset on first successful call to callback.
	CircuitFailureCount interface{} `json:"circuit_failure_count,omitempty"`
	// The shared secret used to sign the external request payload.
	SharedSecret interface{} `json:"shared_secret,omitempty"`
}

// NewGETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes instantiates a new GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes() *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes {
	this := GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes{}
	return &this
}

// NewGETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributesWithDefaults instantiates a new GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributesWithDefaults() *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes {
	this := GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetName() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetNameOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return &o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) HasName() bool {
	if o != nil && IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given interface{} and assigns it to the Name field.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) SetName(v interface{}) {
	o.Name = v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetType() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetTypeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return &o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) HasType() bool {
	if o != nil && IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given interface{} and assigns it to the Type field.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) SetType(v interface{}) {
	o.Type = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetCreatedAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetCreatedAtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return &o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) HasCreatedAt() bool {
	if o != nil && IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given interface{} and assigns it to the CreatedAt field.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) SetCreatedAt(v interface{}) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetUpdatedAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetUpdatedAtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) HasUpdatedAt() bool {
	if o != nil && IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given interface{} and assigns it to the UpdatedAt field.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) SetUpdatedAt(v interface{}) {
	o.UpdatedAt = v
}

// GetReference returns the Reference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetReferenceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return &o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) HasReference() bool {
	if o != nil && IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given interface{} and assigns it to the Reference field.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) SetReference(v interface{}) {
	o.Reference = v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetReferenceOrigin() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetReferenceOriginOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReferenceOrigin) {
		return nil, false
	}
	return &o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) HasReferenceOrigin() bool {
	if o != nil && IsNil(o.ReferenceOrigin) {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given interface{} and assigns it to the ReferenceOrigin field.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) SetReferenceOrigin(v interface{}) {
	o.ReferenceOrigin = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given interface{} and assigns it to the Metadata field.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) SetMetadata(v interface{}) {
	o.Metadata = v
}

// GetTaxCalculatorUrl returns the TaxCalculatorUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetTaxCalculatorUrl() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.TaxCalculatorUrl
}

// GetTaxCalculatorUrlOk returns a tuple with the TaxCalculatorUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetTaxCalculatorUrlOk() (*interface{}, bool) {
	if o == nil || IsNil(o.TaxCalculatorUrl) {
		return nil, false
	}
	return &o.TaxCalculatorUrl, true
}

// HasTaxCalculatorUrl returns a boolean if a field has been set.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) HasTaxCalculatorUrl() bool {
	if o != nil && IsNil(o.TaxCalculatorUrl) {
		return true
	}

	return false
}

// SetTaxCalculatorUrl gets a reference to the given interface{} and assigns it to the TaxCalculatorUrl field.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) SetTaxCalculatorUrl(v interface{}) {
	o.TaxCalculatorUrl = v
}

// GetCircuitState returns the CircuitState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetCircuitState() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CircuitState
}

// GetCircuitStateOk returns a tuple with the CircuitState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetCircuitStateOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CircuitState) {
		return nil, false
	}
	return &o.CircuitState, true
}

// HasCircuitState returns a boolean if a field has been set.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) HasCircuitState() bool {
	if o != nil && IsNil(o.CircuitState) {
		return true
	}

	return false
}

// SetCircuitState gets a reference to the given interface{} and assigns it to the CircuitState field.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) SetCircuitState(v interface{}) {
	o.CircuitState = v
}

// GetCircuitFailureCount returns the CircuitFailureCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetCircuitFailureCount() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CircuitFailureCount
}

// GetCircuitFailureCountOk returns a tuple with the CircuitFailureCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetCircuitFailureCountOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CircuitFailureCount) {
		return nil, false
	}
	return &o.CircuitFailureCount, true
}

// HasCircuitFailureCount returns a boolean if a field has been set.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) HasCircuitFailureCount() bool {
	if o != nil && IsNil(o.CircuitFailureCount) {
		return true
	}

	return false
}

// SetCircuitFailureCount gets a reference to the given interface{} and assigns it to the CircuitFailureCount field.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) SetCircuitFailureCount(v interface{}) {
	o.CircuitFailureCount = v
}

// GetSharedSecret returns the SharedSecret field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetSharedSecret() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.SharedSecret
}

// GetSharedSecretOk returns a tuple with the SharedSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) GetSharedSecretOk() (*interface{}, bool) {
	if o == nil || IsNil(o.SharedSecret) {
		return nil, false
	}
	return &o.SharedSecret, true
}

// HasSharedSecret returns a boolean if a field has been set.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) HasSharedSecret() bool {
	if o != nil && IsNil(o.SharedSecret) {
		return true
	}

	return false
}

// SetSharedSecret gets a reference to the given interface{} and assigns it to the SharedSecret field.
func (o *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) SetSharedSecret(v interface{}) {
	o.SharedSecret = v
}

func (o GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.TaxCalculatorUrl != nil {
		toSerialize["tax_calculator_url"] = o.TaxCalculatorUrl
	}
	if o.CircuitState != nil {
		toSerialize["circuit_state"] = o.CircuitState
	}
	if o.CircuitFailureCount != nil {
		toSerialize["circuit_failure_count"] = o.CircuitFailureCount
	}
	if o.SharedSecret != nil {
		toSerialize["shared_secret"] = o.SharedSecret
	}
	return toSerialize, nil
}

type NullableGETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes struct {
	value *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes
	isSet bool
}

func (v NullableGETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) Get() *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes {
	return v.value
}

func (v *NullableGETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) Set(val *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableGETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableGETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes(val *GETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) *NullableGETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes {
	return &NullableGETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes{value: val, isSet: true}
}

func (v NullableGETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGETExternalTaxCalculatorsExternalTaxCalculatorId200ResponseDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
