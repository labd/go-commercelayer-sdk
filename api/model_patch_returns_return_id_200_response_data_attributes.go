/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PATCHReturnsReturnId200ResponseDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PATCHReturnsReturnId200ResponseDataAttributes{}

// PATCHReturnsReturnId200ResponseDataAttributes struct for PATCHReturnsReturnId200ResponseDataAttributes
type PATCHReturnsReturnId200ResponseDataAttributes struct {
	// Send this attribute if you want to activate this return.
	Request interface{} `json:"_request,omitempty"`
	// Send this attribute if you want to mark this return as approved.
	Approve interface{} `json:"_approve,omitempty"`
	// Send this attribute if you want to mark this return as cancelled.
	Cancel interface{} `json:"_cancel,omitempty"`
	// Send this attribute if you want to mark this return as shipped.
	Ship interface{} `json:"_ship,omitempty"`
	// Send this attribute if you want to mark this return as rejected.
	Reject interface{} `json:"_reject,omitempty"`
	// Send this attribute if you want to mark this return as received.
	Receive interface{} `json:"_receive,omitempty"`
	// Send this attribute if you want to restock all of the return line items.
	Restock interface{} `json:"_restock,omitempty"`
	// Send this attribute if you want to archive the return.
	Archive interface{} `json:"_archive,omitempty"`
	// Send this attribute if you want to unarchive the return.
	Unarchive interface{} `json:"_unarchive,omitempty"`
	// Send this attribute if you want to create a refund for this return.
	Refund interface{} `json:"_refund,omitempty"`
	// Send this attribute as a value in cents to specify the amount to be refunded.
	RefundAmountCents interface{} `json:"_refund_amount_cents,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference interface{} `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code.
	ReferenceOrigin interface{} `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata interface{} `json:"metadata,omitempty"`
}

// NewPATCHReturnsReturnId200ResponseDataAttributes instantiates a new PATCHReturnsReturnId200ResponseDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPATCHReturnsReturnId200ResponseDataAttributes() *PATCHReturnsReturnId200ResponseDataAttributes {
	this := PATCHReturnsReturnId200ResponseDataAttributes{}
	return &this
}

// NewPATCHReturnsReturnId200ResponseDataAttributesWithDefaults instantiates a new PATCHReturnsReturnId200ResponseDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPATCHReturnsReturnId200ResponseDataAttributesWithDefaults() *PATCHReturnsReturnId200ResponseDataAttributes {
	this := PATCHReturnsReturnId200ResponseDataAttributes{}
	return &this
}

// GetRequest returns the Request field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetRequest() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetRequestOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Request) {
		return nil, false
	}
	return &o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasRequest() bool {
	if o != nil && IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given interface{} and assigns it to the Request field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetRequest(v interface{}) {
	o.Request = v
}

// GetApprove returns the Approve field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetApprove() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Approve
}

// GetApproveOk returns a tuple with the Approve field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetApproveOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Approve) {
		return nil, false
	}
	return &o.Approve, true
}

// HasApprove returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasApprove() bool {
	if o != nil && IsNil(o.Approve) {
		return true
	}

	return false
}

// SetApprove gets a reference to the given interface{} and assigns it to the Approve field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetApprove(v interface{}) {
	o.Approve = v
}

// GetCancel returns the Cancel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetCancel() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Cancel
}

// GetCancelOk returns a tuple with the Cancel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetCancelOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Cancel) {
		return nil, false
	}
	return &o.Cancel, true
}

// HasCancel returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasCancel() bool {
	if o != nil && IsNil(o.Cancel) {
		return true
	}

	return false
}

// SetCancel gets a reference to the given interface{} and assigns it to the Cancel field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetCancel(v interface{}) {
	o.Cancel = v
}

// GetShip returns the Ship field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetShip() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Ship
}

// GetShipOk returns a tuple with the Ship field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetShipOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Ship) {
		return nil, false
	}
	return &o.Ship, true
}

// HasShip returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasShip() bool {
	if o != nil && IsNil(o.Ship) {
		return true
	}

	return false
}

// SetShip gets a reference to the given interface{} and assigns it to the Ship field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetShip(v interface{}) {
	o.Ship = v
}

// GetReject returns the Reject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetReject() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Reject
}

// GetRejectOk returns a tuple with the Reject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetRejectOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Reject) {
		return nil, false
	}
	return &o.Reject, true
}

// HasReject returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasReject() bool {
	if o != nil && IsNil(o.Reject) {
		return true
	}

	return false
}

// SetReject gets a reference to the given interface{} and assigns it to the Reject field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetReject(v interface{}) {
	o.Reject = v
}

// GetReceive returns the Receive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetReceive() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Receive
}

// GetReceiveOk returns a tuple with the Receive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetReceiveOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Receive) {
		return nil, false
	}
	return &o.Receive, true
}

// HasReceive returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasReceive() bool {
	if o != nil && IsNil(o.Receive) {
		return true
	}

	return false
}

// SetReceive gets a reference to the given interface{} and assigns it to the Receive field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetReceive(v interface{}) {
	o.Receive = v
}

// GetRestock returns the Restock field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetRestock() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Restock
}

// GetRestockOk returns a tuple with the Restock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetRestockOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Restock) {
		return nil, false
	}
	return &o.Restock, true
}

// HasRestock returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasRestock() bool {
	if o != nil && IsNil(o.Restock) {
		return true
	}

	return false
}

// SetRestock gets a reference to the given interface{} and assigns it to the Restock field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetRestock(v interface{}) {
	o.Restock = v
}

// GetArchive returns the Archive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetArchive() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Archive
}

// GetArchiveOk returns a tuple with the Archive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetArchiveOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Archive) {
		return nil, false
	}
	return &o.Archive, true
}

// HasArchive returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasArchive() bool {
	if o != nil && IsNil(o.Archive) {
		return true
	}

	return false
}

// SetArchive gets a reference to the given interface{} and assigns it to the Archive field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetArchive(v interface{}) {
	o.Archive = v
}

// GetUnarchive returns the Unarchive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetUnarchive() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Unarchive
}

// GetUnarchiveOk returns a tuple with the Unarchive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetUnarchiveOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Unarchive) {
		return nil, false
	}
	return &o.Unarchive, true
}

// HasUnarchive returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasUnarchive() bool {
	if o != nil && IsNil(o.Unarchive) {
		return true
	}

	return false
}

// SetUnarchive gets a reference to the given interface{} and assigns it to the Unarchive field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetUnarchive(v interface{}) {
	o.Unarchive = v
}

// GetRefund returns the Refund field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetRefund() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Refund
}

// GetRefundOk returns a tuple with the Refund field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetRefundOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Refund) {
		return nil, false
	}
	return &o.Refund, true
}

// HasRefund returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasRefund() bool {
	if o != nil && IsNil(o.Refund) {
		return true
	}

	return false
}

// SetRefund gets a reference to the given interface{} and assigns it to the Refund field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetRefund(v interface{}) {
	o.Refund = v
}

// GetRefundAmountCents returns the RefundAmountCents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetRefundAmountCents() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.RefundAmountCents
}

// GetRefundAmountCentsOk returns a tuple with the RefundAmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetRefundAmountCentsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.RefundAmountCents) {
		return nil, false
	}
	return &o.RefundAmountCents, true
}

// HasRefundAmountCents returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasRefundAmountCents() bool {
	if o != nil && IsNil(o.RefundAmountCents) {
		return true
	}

	return false
}

// SetRefundAmountCents gets a reference to the given interface{} and assigns it to the RefundAmountCents field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetRefundAmountCents(v interface{}) {
	o.RefundAmountCents = v
}

// GetReference returns the Reference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetReferenceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return &o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasReference() bool {
	if o != nil && IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given interface{} and assigns it to the Reference field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetReference(v interface{}) {
	o.Reference = v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetReferenceOrigin() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetReferenceOriginOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReferenceOrigin) {
		return nil, false
	}
	return &o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasReferenceOrigin() bool {
	if o != nil && IsNil(o.ReferenceOrigin) {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given interface{} and assigns it to the ReferenceOrigin field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetReferenceOrigin(v interface{}) {
	o.ReferenceOrigin = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHReturnsReturnId200ResponseDataAttributes) GetMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given interface{} and assigns it to the Metadata field.
func (o *PATCHReturnsReturnId200ResponseDataAttributes) SetMetadata(v interface{}) {
	o.Metadata = v
}

func (o PATCHReturnsReturnId200ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PATCHReturnsReturnId200ResponseDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Request != nil {
		toSerialize["_request"] = o.Request
	}
	if o.Approve != nil {
		toSerialize["_approve"] = o.Approve
	}
	if o.Cancel != nil {
		toSerialize["_cancel"] = o.Cancel
	}
	if o.Ship != nil {
		toSerialize["_ship"] = o.Ship
	}
	if o.Reject != nil {
		toSerialize["_reject"] = o.Reject
	}
	if o.Receive != nil {
		toSerialize["_receive"] = o.Receive
	}
	if o.Restock != nil {
		toSerialize["_restock"] = o.Restock
	}
	if o.Archive != nil {
		toSerialize["_archive"] = o.Archive
	}
	if o.Unarchive != nil {
		toSerialize["_unarchive"] = o.Unarchive
	}
	if o.Refund != nil {
		toSerialize["_refund"] = o.Refund
	}
	if o.RefundAmountCents != nil {
		toSerialize["_refund_amount_cents"] = o.RefundAmountCents
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullablePATCHReturnsReturnId200ResponseDataAttributes struct {
	value *PATCHReturnsReturnId200ResponseDataAttributes
	isSet bool
}

func (v NullablePATCHReturnsReturnId200ResponseDataAttributes) Get() *PATCHReturnsReturnId200ResponseDataAttributes {
	return v.value
}

func (v *NullablePATCHReturnsReturnId200ResponseDataAttributes) Set(val *PATCHReturnsReturnId200ResponseDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePATCHReturnsReturnId200ResponseDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePATCHReturnsReturnId200ResponseDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePATCHReturnsReturnId200ResponseDataAttributes(val *PATCHReturnsReturnId200ResponseDataAttributes) *NullablePATCHReturnsReturnId200ResponseDataAttributes {
	return &NullablePATCHReturnsReturnId200ResponseDataAttributes{value: val, isSet: true}
}

func (v NullablePATCHReturnsReturnId200ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePATCHReturnsReturnId200ResponseDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
