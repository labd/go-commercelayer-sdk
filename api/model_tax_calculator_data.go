/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the TaxCalculatorData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaxCalculatorData{}

// TaxCalculatorData struct for TaxCalculatorData
type TaxCalculatorData struct {
	// The resource's type
	Type          interface{}                                                           `json:"type"`
	Attributes    GETManualTaxCalculatorsManualTaxCalculatorId200ResponseDataAttributes `json:"attributes"`
	Relationships *ExternalTaxCalculatorDataRelationships                               `json:"relationships,omitempty"`
}

// NewTaxCalculatorData instantiates a new TaxCalculatorData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaxCalculatorData(type_ interface{}, attributes GETManualTaxCalculatorsManualTaxCalculatorId200ResponseDataAttributes) *TaxCalculatorData {
	this := TaxCalculatorData{}
	this.Type = type_
	this.Attributes = attributes
	return &this
}

// NewTaxCalculatorDataWithDefaults instantiates a new TaxCalculatorData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaxCalculatorDataWithDefaults() *TaxCalculatorData {
	this := TaxCalculatorData{}
	return &this
}

// GetType returns the Type field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *TaxCalculatorData) GetType() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TaxCalculatorData) GetTypeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TaxCalculatorData) SetType(v interface{}) {
	o.Type = v
}

// GetAttributes returns the Attributes field value
func (o *TaxCalculatorData) GetAttributes() GETManualTaxCalculatorsManualTaxCalculatorId200ResponseDataAttributes {
	if o == nil {
		var ret GETManualTaxCalculatorsManualTaxCalculatorId200ResponseDataAttributes
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *TaxCalculatorData) GetAttributesOk() (*GETManualTaxCalculatorsManualTaxCalculatorId200ResponseDataAttributes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attributes, true
}

// SetAttributes sets field value
func (o *TaxCalculatorData) SetAttributes(v GETManualTaxCalculatorsManualTaxCalculatorId200ResponseDataAttributes) {
	o.Attributes = v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *TaxCalculatorData) GetRelationships() ExternalTaxCalculatorDataRelationships {
	if o == nil || IsNil(o.Relationships) {
		var ret ExternalTaxCalculatorDataRelationships
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaxCalculatorData) GetRelationshipsOk() (*ExternalTaxCalculatorDataRelationships, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *TaxCalculatorData) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given ExternalTaxCalculatorDataRelationships and assigns it to the Relationships field.
func (o *TaxCalculatorData) SetRelationships(v ExternalTaxCalculatorDataRelationships) {
	o.Relationships = &v
}

func (o TaxCalculatorData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaxCalculatorData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	toSerialize["attributes"] = o.Attributes
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	return toSerialize, nil
}

type NullableTaxCalculatorData struct {
	value *TaxCalculatorData
	isSet bool
}

func (v NullableTaxCalculatorData) Get() *TaxCalculatorData {
	return v.value
}

func (v *NullableTaxCalculatorData) Set(val *TaxCalculatorData) {
	v.value = val
	v.isSet = true
}

func (v NullableTaxCalculatorData) IsSet() bool {
	return v.isSet
}

func (v *NullableTaxCalculatorData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaxCalculatorData(val *TaxCalculatorData) *NullableTaxCalculatorData {
	return &NullableTaxCalculatorData{value: val, isSet: true}
}

func (v NullableTaxCalculatorData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaxCalculatorData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
