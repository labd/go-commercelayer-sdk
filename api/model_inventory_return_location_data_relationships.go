/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the InventoryReturnLocationDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InventoryReturnLocationDataRelationships{}

// InventoryReturnLocationDataRelationships struct for InventoryReturnLocationDataRelationships
type InventoryReturnLocationDataRelationships struct {
	StockLocation  *DeliveryLeadTimeDataRelationshipsStockLocation         `json:"stock_location,omitempty"`
	InventoryModel *InventoryReturnLocationDataRelationshipsInventoryModel `json:"inventory_model,omitempty"`
	Versions       *AddressDataRelationshipsVersions                       `json:"versions,omitempty"`
}

// NewInventoryReturnLocationDataRelationships instantiates a new InventoryReturnLocationDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInventoryReturnLocationDataRelationships() *InventoryReturnLocationDataRelationships {
	this := InventoryReturnLocationDataRelationships{}
	return &this
}

// NewInventoryReturnLocationDataRelationshipsWithDefaults instantiates a new InventoryReturnLocationDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInventoryReturnLocationDataRelationshipsWithDefaults() *InventoryReturnLocationDataRelationships {
	this := InventoryReturnLocationDataRelationships{}
	return &this
}

// GetStockLocation returns the StockLocation field value if set, zero value otherwise.
func (o *InventoryReturnLocationDataRelationships) GetStockLocation() DeliveryLeadTimeDataRelationshipsStockLocation {
	if o == nil || IsNil(o.StockLocation) {
		var ret DeliveryLeadTimeDataRelationshipsStockLocation
		return ret
	}
	return *o.StockLocation
}

// GetStockLocationOk returns a tuple with the StockLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryReturnLocationDataRelationships) GetStockLocationOk() (*DeliveryLeadTimeDataRelationshipsStockLocation, bool) {
	if o == nil || IsNil(o.StockLocation) {
		return nil, false
	}
	return o.StockLocation, true
}

// HasStockLocation returns a boolean if a field has been set.
func (o *InventoryReturnLocationDataRelationships) HasStockLocation() bool {
	if o != nil && !IsNil(o.StockLocation) {
		return true
	}

	return false
}

// SetStockLocation gets a reference to the given DeliveryLeadTimeDataRelationshipsStockLocation and assigns it to the StockLocation field.
func (o *InventoryReturnLocationDataRelationships) SetStockLocation(v DeliveryLeadTimeDataRelationshipsStockLocation) {
	o.StockLocation = &v
}

// GetInventoryModel returns the InventoryModel field value if set, zero value otherwise.
func (o *InventoryReturnLocationDataRelationships) GetInventoryModel() InventoryReturnLocationDataRelationshipsInventoryModel {
	if o == nil || IsNil(o.InventoryModel) {
		var ret InventoryReturnLocationDataRelationshipsInventoryModel
		return ret
	}
	return *o.InventoryModel
}

// GetInventoryModelOk returns a tuple with the InventoryModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryReturnLocationDataRelationships) GetInventoryModelOk() (*InventoryReturnLocationDataRelationshipsInventoryModel, bool) {
	if o == nil || IsNil(o.InventoryModel) {
		return nil, false
	}
	return o.InventoryModel, true
}

// HasInventoryModel returns a boolean if a field has been set.
func (o *InventoryReturnLocationDataRelationships) HasInventoryModel() bool {
	if o != nil && !IsNil(o.InventoryModel) {
		return true
	}

	return false
}

// SetInventoryModel gets a reference to the given InventoryReturnLocationDataRelationshipsInventoryModel and assigns it to the InventoryModel field.
func (o *InventoryReturnLocationDataRelationships) SetInventoryModel(v InventoryReturnLocationDataRelationshipsInventoryModel) {
	o.InventoryModel = &v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *InventoryReturnLocationDataRelationships) GetVersions() AddressDataRelationshipsVersions {
	if o == nil || IsNil(o.Versions) {
		var ret AddressDataRelationshipsVersions
		return ret
	}
	return *o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryReturnLocationDataRelationships) GetVersionsOk() (*AddressDataRelationshipsVersions, bool) {
	if o == nil || IsNil(o.Versions) {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *InventoryReturnLocationDataRelationships) HasVersions() bool {
	if o != nil && !IsNil(o.Versions) {
		return true
	}

	return false
}

// SetVersions gets a reference to the given AddressDataRelationshipsVersions and assigns it to the Versions field.
func (o *InventoryReturnLocationDataRelationships) SetVersions(v AddressDataRelationshipsVersions) {
	o.Versions = &v
}

func (o InventoryReturnLocationDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InventoryReturnLocationDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StockLocation) {
		toSerialize["stock_location"] = o.StockLocation
	}
	if !IsNil(o.InventoryModel) {
		toSerialize["inventory_model"] = o.InventoryModel
	}
	if !IsNil(o.Versions) {
		toSerialize["versions"] = o.Versions
	}
	return toSerialize, nil
}

type NullableInventoryReturnLocationDataRelationships struct {
	value *InventoryReturnLocationDataRelationships
	isSet bool
}

func (v NullableInventoryReturnLocationDataRelationships) Get() *InventoryReturnLocationDataRelationships {
	return v.value
}

func (v *NullableInventoryReturnLocationDataRelationships) Set(val *InventoryReturnLocationDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableInventoryReturnLocationDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableInventoryReturnLocationDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInventoryReturnLocationDataRelationships(val *InventoryReturnLocationDataRelationships) *NullableInventoryReturnLocationDataRelationships {
	return &NullableInventoryReturnLocationDataRelationships{value: val, isSet: true}
}

func (v NullableInventoryReturnLocationDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInventoryReturnLocationDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
