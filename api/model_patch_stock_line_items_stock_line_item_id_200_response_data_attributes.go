/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PATCHStockLineItemsStockLineItemId200ResponseDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PATCHStockLineItemsStockLineItemId200ResponseDataAttributes{}

// PATCHStockLineItemsStockLineItemId200ResponseDataAttributes struct for PATCHStockLineItemsStockLineItemId200ResponseDataAttributes
type PATCHStockLineItemsStockLineItemId200ResponseDataAttributes struct {
	// The code of the associated SKU.
	SkuCode interface{} `json:"sku_code,omitempty"`
	// The line item quantity.
	Quantity interface{} `json:"quantity,omitempty"`
	// Send this attribute if you want to automatically reserve the stock for this stock line item. Can be done only when fulfillment is in progress. Cannot be passed by sales channels.
	ReserveStock interface{} `json:"_reserve_stock,omitempty"`
	// Send this attribute if you want to automatically destroy the stock reservation for this stock line item. Can be done only when fulfillment is in progress. Cannot be passed by sales channels.
	ReleaseStock interface{} `json:"_release_stock,omitempty"`
	// Send this attribute if you want to automatically decrement and release the stock this stock line item. Can be done only when fulfillment is in progress. Cannot be passed by sales channels.
	DecrementStock interface{} `json:"_decrement_stock,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference interface{} `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code.
	ReferenceOrigin interface{} `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata interface{} `json:"metadata,omitempty"`
}

// NewPATCHStockLineItemsStockLineItemId200ResponseDataAttributes instantiates a new PATCHStockLineItemsStockLineItemId200ResponseDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPATCHStockLineItemsStockLineItemId200ResponseDataAttributes() *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes {
	this := PATCHStockLineItemsStockLineItemId200ResponseDataAttributes{}
	return &this
}

// NewPATCHStockLineItemsStockLineItemId200ResponseDataAttributesWithDefaults instantiates a new PATCHStockLineItemsStockLineItemId200ResponseDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPATCHStockLineItemsStockLineItemId200ResponseDataAttributesWithDefaults() *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes {
	this := PATCHStockLineItemsStockLineItemId200ResponseDataAttributes{}
	return &this
}

// GetSkuCode returns the SkuCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) GetSkuCode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.SkuCode
}

// GetSkuCodeOk returns a tuple with the SkuCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) GetSkuCodeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.SkuCode) {
		return nil, false
	}
	return &o.SkuCode, true
}

// HasSkuCode returns a boolean if a field has been set.
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) HasSkuCode() bool {
	if o != nil && IsNil(o.SkuCode) {
		return true
	}

	return false
}

// SetSkuCode gets a reference to the given interface{} and assigns it to the SkuCode field.
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) SetSkuCode(v interface{}) {
	o.SkuCode = v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) GetQuantity() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) GetQuantityOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return &o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) HasQuantity() bool {
	if o != nil && IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given interface{} and assigns it to the Quantity field.
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) SetQuantity(v interface{}) {
	o.Quantity = v
}

// GetReserveStock returns the ReserveStock field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) GetReserveStock() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReserveStock
}

// GetReserveStockOk returns a tuple with the ReserveStock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) GetReserveStockOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReserveStock) {
		return nil, false
	}
	return &o.ReserveStock, true
}

// HasReserveStock returns a boolean if a field has been set.
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) HasReserveStock() bool {
	if o != nil && IsNil(o.ReserveStock) {
		return true
	}

	return false
}

// SetReserveStock gets a reference to the given interface{} and assigns it to the ReserveStock field.
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) SetReserveStock(v interface{}) {
	o.ReserveStock = v
}

// GetReleaseStock returns the ReleaseStock field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) GetReleaseStock() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReleaseStock
}

// GetReleaseStockOk returns a tuple with the ReleaseStock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) GetReleaseStockOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReleaseStock) {
		return nil, false
	}
	return &o.ReleaseStock, true
}

// HasReleaseStock returns a boolean if a field has been set.
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) HasReleaseStock() bool {
	if o != nil && IsNil(o.ReleaseStock) {
		return true
	}

	return false
}

// SetReleaseStock gets a reference to the given interface{} and assigns it to the ReleaseStock field.
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) SetReleaseStock(v interface{}) {
	o.ReleaseStock = v
}

// GetDecrementStock returns the DecrementStock field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) GetDecrementStock() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.DecrementStock
}

// GetDecrementStockOk returns a tuple with the DecrementStock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) GetDecrementStockOk() (*interface{}, bool) {
	if o == nil || IsNil(o.DecrementStock) {
		return nil, false
	}
	return &o.DecrementStock, true
}

// HasDecrementStock returns a boolean if a field has been set.
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) HasDecrementStock() bool {
	if o != nil && IsNil(o.DecrementStock) {
		return true
	}

	return false
}

// SetDecrementStock gets a reference to the given interface{} and assigns it to the DecrementStock field.
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) SetDecrementStock(v interface{}) {
	o.DecrementStock = v
}

// GetReference returns the Reference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) GetReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) GetReferenceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return &o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) HasReference() bool {
	if o != nil && IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given interface{} and assigns it to the Reference field.
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) SetReference(v interface{}) {
	o.Reference = v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) GetReferenceOrigin() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) GetReferenceOriginOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReferenceOrigin) {
		return nil, false
	}
	return &o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) HasReferenceOrigin() bool {
	if o != nil && IsNil(o.ReferenceOrigin) {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given interface{} and assigns it to the ReferenceOrigin field.
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) SetReferenceOrigin(v interface{}) {
	o.ReferenceOrigin = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) GetMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) GetMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given interface{} and assigns it to the Metadata field.
func (o *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) SetMetadata(v interface{}) {
	o.Metadata = v
}

func (o PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SkuCode != nil {
		toSerialize["sku_code"] = o.SkuCode
	}
	if o.Quantity != nil {
		toSerialize["quantity"] = o.Quantity
	}
	if o.ReserveStock != nil {
		toSerialize["_reserve_stock"] = o.ReserveStock
	}
	if o.ReleaseStock != nil {
		toSerialize["_release_stock"] = o.ReleaseStock
	}
	if o.DecrementStock != nil {
		toSerialize["_decrement_stock"] = o.DecrementStock
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullablePATCHStockLineItemsStockLineItemId200ResponseDataAttributes struct {
	value *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes
	isSet bool
}

func (v NullablePATCHStockLineItemsStockLineItemId200ResponseDataAttributes) Get() *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes {
	return v.value
}

func (v *NullablePATCHStockLineItemsStockLineItemId200ResponseDataAttributes) Set(val *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePATCHStockLineItemsStockLineItemId200ResponseDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePATCHStockLineItemsStockLineItemId200ResponseDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePATCHStockLineItemsStockLineItemId200ResponseDataAttributes(val *PATCHStockLineItemsStockLineItemId200ResponseDataAttributes) *NullablePATCHStockLineItemsStockLineItemId200ResponseDataAttributes {
	return &NullablePATCHStockLineItemsStockLineItemId200ResponseDataAttributes{value: val, isSet: true}
}

func (v NullablePATCHStockLineItemsStockLineItemId200ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePATCHStockLineItemsStockLineItemId200ResponseDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
