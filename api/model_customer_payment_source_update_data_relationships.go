/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the CustomerPaymentSourceUpdateDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerPaymentSourceUpdateDataRelationships{}

// CustomerPaymentSourceUpdateDataRelationships struct for CustomerPaymentSourceUpdateDataRelationships
type CustomerPaymentSourceUpdateDataRelationships struct {
	Customer      *CouponRecipientCreateDataRelationshipsCustomer            `json:"customer,omitempty"`
	PaymentMethod *CustomerPaymentSourceCreateDataRelationshipsPaymentMethod `json:"payment_method,omitempty"`
	PaymentSource *CustomerPaymentSourceCreateDataRelationshipsPaymentSource `json:"payment_source,omitempty"`
}

// NewCustomerPaymentSourceUpdateDataRelationships instantiates a new CustomerPaymentSourceUpdateDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerPaymentSourceUpdateDataRelationships() *CustomerPaymentSourceUpdateDataRelationships {
	this := CustomerPaymentSourceUpdateDataRelationships{}
	return &this
}

// NewCustomerPaymentSourceUpdateDataRelationshipsWithDefaults instantiates a new CustomerPaymentSourceUpdateDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerPaymentSourceUpdateDataRelationshipsWithDefaults() *CustomerPaymentSourceUpdateDataRelationships {
	this := CustomerPaymentSourceUpdateDataRelationships{}
	return &this
}

// GetCustomer returns the Customer field value if set, zero value otherwise.
func (o *CustomerPaymentSourceUpdateDataRelationships) GetCustomer() CouponRecipientCreateDataRelationshipsCustomer {
	if o == nil || IsNil(o.Customer) {
		var ret CouponRecipientCreateDataRelationshipsCustomer
		return ret
	}
	return *o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerPaymentSourceUpdateDataRelationships) GetCustomerOk() (*CouponRecipientCreateDataRelationshipsCustomer, bool) {
	if o == nil || IsNil(o.Customer) {
		return nil, false
	}
	return o.Customer, true
}

// HasCustomer returns a boolean if a field has been set.
func (o *CustomerPaymentSourceUpdateDataRelationships) HasCustomer() bool {
	if o != nil && !IsNil(o.Customer) {
		return true
	}

	return false
}

// SetCustomer gets a reference to the given CouponRecipientCreateDataRelationshipsCustomer and assigns it to the Customer field.
func (o *CustomerPaymentSourceUpdateDataRelationships) SetCustomer(v CouponRecipientCreateDataRelationshipsCustomer) {
	o.Customer = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *CustomerPaymentSourceUpdateDataRelationships) GetPaymentMethod() CustomerPaymentSourceCreateDataRelationshipsPaymentMethod {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret CustomerPaymentSourceCreateDataRelationshipsPaymentMethod
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerPaymentSourceUpdateDataRelationships) GetPaymentMethodOk() (*CustomerPaymentSourceCreateDataRelationshipsPaymentMethod, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *CustomerPaymentSourceUpdateDataRelationships) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given CustomerPaymentSourceCreateDataRelationshipsPaymentMethod and assigns it to the PaymentMethod field.
func (o *CustomerPaymentSourceUpdateDataRelationships) SetPaymentMethod(v CustomerPaymentSourceCreateDataRelationshipsPaymentMethod) {
	o.PaymentMethod = &v
}

// GetPaymentSource returns the PaymentSource field value if set, zero value otherwise.
func (o *CustomerPaymentSourceUpdateDataRelationships) GetPaymentSource() CustomerPaymentSourceCreateDataRelationshipsPaymentSource {
	if o == nil || IsNil(o.PaymentSource) {
		var ret CustomerPaymentSourceCreateDataRelationshipsPaymentSource
		return ret
	}
	return *o.PaymentSource
}

// GetPaymentSourceOk returns a tuple with the PaymentSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerPaymentSourceUpdateDataRelationships) GetPaymentSourceOk() (*CustomerPaymentSourceCreateDataRelationshipsPaymentSource, bool) {
	if o == nil || IsNil(o.PaymentSource) {
		return nil, false
	}
	return o.PaymentSource, true
}

// HasPaymentSource returns a boolean if a field has been set.
func (o *CustomerPaymentSourceUpdateDataRelationships) HasPaymentSource() bool {
	if o != nil && !IsNil(o.PaymentSource) {
		return true
	}

	return false
}

// SetPaymentSource gets a reference to the given CustomerPaymentSourceCreateDataRelationshipsPaymentSource and assigns it to the PaymentSource field.
func (o *CustomerPaymentSourceUpdateDataRelationships) SetPaymentSource(v CustomerPaymentSourceCreateDataRelationshipsPaymentSource) {
	o.PaymentSource = &v
}

func (o CustomerPaymentSourceUpdateDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerPaymentSourceUpdateDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Customer) {
		toSerialize["customer"] = o.Customer
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["payment_method"] = o.PaymentMethod
	}
	if !IsNil(o.PaymentSource) {
		toSerialize["payment_source"] = o.PaymentSource
	}
	return toSerialize, nil
}

type NullableCustomerPaymentSourceUpdateDataRelationships struct {
	value *CustomerPaymentSourceUpdateDataRelationships
	isSet bool
}

func (v NullableCustomerPaymentSourceUpdateDataRelationships) Get() *CustomerPaymentSourceUpdateDataRelationships {
	return v.value
}

func (v *NullableCustomerPaymentSourceUpdateDataRelationships) Set(val *CustomerPaymentSourceUpdateDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerPaymentSourceUpdateDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerPaymentSourceUpdateDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerPaymentSourceUpdateDataRelationships(val *CustomerPaymentSourceUpdateDataRelationships) *NullableCustomerPaymentSourceUpdateDataRelationships {
	return &NullableCustomerPaymentSourceUpdateDataRelationships{value: val, isSet: true}
}

func (v NullableCustomerPaymentSourceUpdateDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerPaymentSourceUpdateDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
