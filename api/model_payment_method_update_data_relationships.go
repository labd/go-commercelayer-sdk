/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PaymentMethodUpdateDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentMethodUpdateDataRelationships{}

// PaymentMethodUpdateDataRelationships struct for PaymentMethodUpdateDataRelationships
type PaymentMethodUpdateDataRelationships struct {
	Market         *BundleCreateDataRelationshipsMarket                `json:"market,omitempty"`
	PaymentGateway *PaymentMethodCreateDataRelationshipsPaymentGateway `json:"payment_gateway,omitempty"`
	Store          *OrderCreateDataRelationshipsStore                  `json:"store,omitempty"`
}

// NewPaymentMethodUpdateDataRelationships instantiates a new PaymentMethodUpdateDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentMethodUpdateDataRelationships() *PaymentMethodUpdateDataRelationships {
	this := PaymentMethodUpdateDataRelationships{}
	return &this
}

// NewPaymentMethodUpdateDataRelationshipsWithDefaults instantiates a new PaymentMethodUpdateDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentMethodUpdateDataRelationshipsWithDefaults() *PaymentMethodUpdateDataRelationships {
	this := PaymentMethodUpdateDataRelationships{}
	return &this
}

// GetMarket returns the Market field value if set, zero value otherwise.
func (o *PaymentMethodUpdateDataRelationships) GetMarket() BundleCreateDataRelationshipsMarket {
	if o == nil || IsNil(o.Market) {
		var ret BundleCreateDataRelationshipsMarket
		return ret
	}
	return *o.Market
}

// GetMarketOk returns a tuple with the Market field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodUpdateDataRelationships) GetMarketOk() (*BundleCreateDataRelationshipsMarket, bool) {
	if o == nil || IsNil(o.Market) {
		return nil, false
	}
	return o.Market, true
}

// HasMarket returns a boolean if a field has been set.
func (o *PaymentMethodUpdateDataRelationships) HasMarket() bool {
	if o != nil && !IsNil(o.Market) {
		return true
	}

	return false
}

// SetMarket gets a reference to the given BundleCreateDataRelationshipsMarket and assigns it to the Market field.
func (o *PaymentMethodUpdateDataRelationships) SetMarket(v BundleCreateDataRelationshipsMarket) {
	o.Market = &v
}

// GetPaymentGateway returns the PaymentGateway field value if set, zero value otherwise.
func (o *PaymentMethodUpdateDataRelationships) GetPaymentGateway() PaymentMethodCreateDataRelationshipsPaymentGateway {
	if o == nil || IsNil(o.PaymentGateway) {
		var ret PaymentMethodCreateDataRelationshipsPaymentGateway
		return ret
	}
	return *o.PaymentGateway
}

// GetPaymentGatewayOk returns a tuple with the PaymentGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodUpdateDataRelationships) GetPaymentGatewayOk() (*PaymentMethodCreateDataRelationshipsPaymentGateway, bool) {
	if o == nil || IsNil(o.PaymentGateway) {
		return nil, false
	}
	return o.PaymentGateway, true
}

// HasPaymentGateway returns a boolean if a field has been set.
func (o *PaymentMethodUpdateDataRelationships) HasPaymentGateway() bool {
	if o != nil && !IsNil(o.PaymentGateway) {
		return true
	}

	return false
}

// SetPaymentGateway gets a reference to the given PaymentMethodCreateDataRelationshipsPaymentGateway and assigns it to the PaymentGateway field.
func (o *PaymentMethodUpdateDataRelationships) SetPaymentGateway(v PaymentMethodCreateDataRelationshipsPaymentGateway) {
	o.PaymentGateway = &v
}

// GetStore returns the Store field value if set, zero value otherwise.
func (o *PaymentMethodUpdateDataRelationships) GetStore() OrderCreateDataRelationshipsStore {
	if o == nil || IsNil(o.Store) {
		var ret OrderCreateDataRelationshipsStore
		return ret
	}
	return *o.Store
}

// GetStoreOk returns a tuple with the Store field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodUpdateDataRelationships) GetStoreOk() (*OrderCreateDataRelationshipsStore, bool) {
	if o == nil || IsNil(o.Store) {
		return nil, false
	}
	return o.Store, true
}

// HasStore returns a boolean if a field has been set.
func (o *PaymentMethodUpdateDataRelationships) HasStore() bool {
	if o != nil && !IsNil(o.Store) {
		return true
	}

	return false
}

// SetStore gets a reference to the given OrderCreateDataRelationshipsStore and assigns it to the Store field.
func (o *PaymentMethodUpdateDataRelationships) SetStore(v OrderCreateDataRelationshipsStore) {
	o.Store = &v
}

func (o PaymentMethodUpdateDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentMethodUpdateDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Market) {
		toSerialize["market"] = o.Market
	}
	if !IsNil(o.PaymentGateway) {
		toSerialize["payment_gateway"] = o.PaymentGateway
	}
	if !IsNil(o.Store) {
		toSerialize["store"] = o.Store
	}
	return toSerialize, nil
}

type NullablePaymentMethodUpdateDataRelationships struct {
	value *PaymentMethodUpdateDataRelationships
	isSet bool
}

func (v NullablePaymentMethodUpdateDataRelationships) Get() *PaymentMethodUpdateDataRelationships {
	return v.value
}

func (v *NullablePaymentMethodUpdateDataRelationships) Set(val *PaymentMethodUpdateDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentMethodUpdateDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentMethodUpdateDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentMethodUpdateDataRelationships(val *PaymentMethodUpdateDataRelationships) *NullablePaymentMethodUpdateDataRelationships {
	return &NullablePaymentMethodUpdateDataRelationships{value: val, isSet: true}
}

func (v NullablePaymentMethodUpdateDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentMethodUpdateDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
