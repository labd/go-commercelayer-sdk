/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the GETStockTransfersStockTransferId200ResponseDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GETStockTransfersStockTransferId200ResponseDataAttributes{}

// GETStockTransfersStockTransferId200ResponseDataAttributes struct for GETStockTransfersStockTransferId200ResponseDataAttributes
type GETStockTransfersStockTransferId200ResponseDataAttributes struct {
	// Unique identifier for the stock transfer (numeric).
	Number interface{} `json:"number,omitempty"`
	// The code of the associated SKU.
	SkuCode interface{} `json:"sku_code,omitempty"`
	// The stock transfer status. One of 'draft' (default), 'upcoming', 'on_hold', 'picking', 'in_transit', 'completed', or 'cancelled'.
	Status interface{} `json:"status,omitempty"`
	// The stock quantity to be transferred from the origin stock location to destination one. Updatable unless stock transfer is completed or cancelled and depending on origin stock availability.
	Quantity interface{} `json:"quantity,omitempty"`
	// Time at which the stock transfer was put on hold.
	OnHoldAt interface{} `json:"on_hold_at,omitempty"`
	// Time at which the stock transfer was picking.
	PickingAt interface{} `json:"picking_at,omitempty"`
	// Time at which the stock transfer was in transit.
	InTransitAt interface{} `json:"in_transit_at,omitempty"`
	// Time at which the stock transfer was completed.
	CompletedAt interface{} `json:"completed_at,omitempty"`
	// Time at which the stock transfer was cancelled.
	CancelledAt interface{} `json:"cancelled_at,omitempty"`
	// Time at which the resource was created.
	CreatedAt interface{} `json:"created_at,omitempty"`
	// Time at which the resource was last updated.
	UpdatedAt interface{} `json:"updated_at,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference interface{} `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code.
	ReferenceOrigin interface{} `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata interface{} `json:"metadata,omitempty"`
}

// NewGETStockTransfersStockTransferId200ResponseDataAttributes instantiates a new GETStockTransfersStockTransferId200ResponseDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGETStockTransfersStockTransferId200ResponseDataAttributes() *GETStockTransfersStockTransferId200ResponseDataAttributes {
	this := GETStockTransfersStockTransferId200ResponseDataAttributes{}
	return &this
}

// NewGETStockTransfersStockTransferId200ResponseDataAttributesWithDefaults instantiates a new GETStockTransfersStockTransferId200ResponseDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGETStockTransfersStockTransferId200ResponseDataAttributesWithDefaults() *GETStockTransfersStockTransferId200ResponseDataAttributes {
	this := GETStockTransfersStockTransferId200ResponseDataAttributes{}
	return &this
}

// GetNumber returns the Number field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetNumber() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetNumberOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return &o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) HasNumber() bool {
	if o != nil && IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given interface{} and assigns it to the Number field.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) SetNumber(v interface{}) {
	o.Number = v
}

// GetSkuCode returns the SkuCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetSkuCode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.SkuCode
}

// GetSkuCodeOk returns a tuple with the SkuCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetSkuCodeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.SkuCode) {
		return nil, false
	}
	return &o.SkuCode, true
}

// HasSkuCode returns a boolean if a field has been set.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) HasSkuCode() bool {
	if o != nil && IsNil(o.SkuCode) {
		return true
	}

	return false
}

// SetSkuCode gets a reference to the given interface{} and assigns it to the SkuCode field.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) SetSkuCode(v interface{}) {
	o.SkuCode = v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetStatus() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetStatusOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return &o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) HasStatus() bool {
	if o != nil && IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given interface{} and assigns it to the Status field.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) SetStatus(v interface{}) {
	o.Status = v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetQuantity() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetQuantityOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return &o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) HasQuantity() bool {
	if o != nil && IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given interface{} and assigns it to the Quantity field.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) SetQuantity(v interface{}) {
	o.Quantity = v
}

// GetOnHoldAt returns the OnHoldAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetOnHoldAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.OnHoldAt
}

// GetOnHoldAtOk returns a tuple with the OnHoldAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetOnHoldAtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.OnHoldAt) {
		return nil, false
	}
	return &o.OnHoldAt, true
}

// HasOnHoldAt returns a boolean if a field has been set.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) HasOnHoldAt() bool {
	if o != nil && IsNil(o.OnHoldAt) {
		return true
	}

	return false
}

// SetOnHoldAt gets a reference to the given interface{} and assigns it to the OnHoldAt field.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) SetOnHoldAt(v interface{}) {
	o.OnHoldAt = v
}

// GetPickingAt returns the PickingAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetPickingAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.PickingAt
}

// GetPickingAtOk returns a tuple with the PickingAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetPickingAtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.PickingAt) {
		return nil, false
	}
	return &o.PickingAt, true
}

// HasPickingAt returns a boolean if a field has been set.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) HasPickingAt() bool {
	if o != nil && IsNil(o.PickingAt) {
		return true
	}

	return false
}

// SetPickingAt gets a reference to the given interface{} and assigns it to the PickingAt field.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) SetPickingAt(v interface{}) {
	o.PickingAt = v
}

// GetInTransitAt returns the InTransitAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetInTransitAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.InTransitAt
}

// GetInTransitAtOk returns a tuple with the InTransitAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetInTransitAtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.InTransitAt) {
		return nil, false
	}
	return &o.InTransitAt, true
}

// HasInTransitAt returns a boolean if a field has been set.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) HasInTransitAt() bool {
	if o != nil && IsNil(o.InTransitAt) {
		return true
	}

	return false
}

// SetInTransitAt gets a reference to the given interface{} and assigns it to the InTransitAt field.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) SetInTransitAt(v interface{}) {
	o.InTransitAt = v
}

// GetCompletedAt returns the CompletedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetCompletedAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CompletedAt
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetCompletedAtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CompletedAt) {
		return nil, false
	}
	return &o.CompletedAt, true
}

// HasCompletedAt returns a boolean if a field has been set.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) HasCompletedAt() bool {
	if o != nil && IsNil(o.CompletedAt) {
		return true
	}

	return false
}

// SetCompletedAt gets a reference to the given interface{} and assigns it to the CompletedAt field.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) SetCompletedAt(v interface{}) {
	o.CompletedAt = v
}

// GetCancelledAt returns the CancelledAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetCancelledAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CancelledAt
}

// GetCancelledAtOk returns a tuple with the CancelledAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetCancelledAtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CancelledAt) {
		return nil, false
	}
	return &o.CancelledAt, true
}

// HasCancelledAt returns a boolean if a field has been set.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) HasCancelledAt() bool {
	if o != nil && IsNil(o.CancelledAt) {
		return true
	}

	return false
}

// SetCancelledAt gets a reference to the given interface{} and assigns it to the CancelledAt field.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) SetCancelledAt(v interface{}) {
	o.CancelledAt = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetCreatedAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetCreatedAtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return &o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) HasCreatedAt() bool {
	if o != nil && IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given interface{} and assigns it to the CreatedAt field.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) SetCreatedAt(v interface{}) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetUpdatedAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetUpdatedAtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) HasUpdatedAt() bool {
	if o != nil && IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given interface{} and assigns it to the UpdatedAt field.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) SetUpdatedAt(v interface{}) {
	o.UpdatedAt = v
}

// GetReference returns the Reference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetReferenceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return &o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) HasReference() bool {
	if o != nil && IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given interface{} and assigns it to the Reference field.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) SetReference(v interface{}) {
	o.Reference = v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetReferenceOrigin() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetReferenceOriginOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReferenceOrigin) {
		return nil, false
	}
	return &o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) HasReferenceOrigin() bool {
	if o != nil && IsNil(o.ReferenceOrigin) {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given interface{} and assigns it to the ReferenceOrigin field.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) SetReferenceOrigin(v interface{}) {
	o.ReferenceOrigin = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) GetMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given interface{} and assigns it to the Metadata field.
func (o *GETStockTransfersStockTransferId200ResponseDataAttributes) SetMetadata(v interface{}) {
	o.Metadata = v
}

func (o GETStockTransfersStockTransferId200ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GETStockTransfersStockTransferId200ResponseDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Number != nil {
		toSerialize["number"] = o.Number
	}
	if o.SkuCode != nil {
		toSerialize["sku_code"] = o.SkuCode
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Quantity != nil {
		toSerialize["quantity"] = o.Quantity
	}
	if o.OnHoldAt != nil {
		toSerialize["on_hold_at"] = o.OnHoldAt
	}
	if o.PickingAt != nil {
		toSerialize["picking_at"] = o.PickingAt
	}
	if o.InTransitAt != nil {
		toSerialize["in_transit_at"] = o.InTransitAt
	}
	if o.CompletedAt != nil {
		toSerialize["completed_at"] = o.CompletedAt
	}
	if o.CancelledAt != nil {
		toSerialize["cancelled_at"] = o.CancelledAt
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableGETStockTransfersStockTransferId200ResponseDataAttributes struct {
	value *GETStockTransfersStockTransferId200ResponseDataAttributes
	isSet bool
}

func (v NullableGETStockTransfersStockTransferId200ResponseDataAttributes) Get() *GETStockTransfersStockTransferId200ResponseDataAttributes {
	return v.value
}

func (v *NullableGETStockTransfersStockTransferId200ResponseDataAttributes) Set(val *GETStockTransfersStockTransferId200ResponseDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableGETStockTransfersStockTransferId200ResponseDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableGETStockTransfersStockTransferId200ResponseDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGETStockTransfersStockTransferId200ResponseDataAttributes(val *GETStockTransfersStockTransferId200ResponseDataAttributes) *NullableGETStockTransfersStockTransferId200ResponseDataAttributes {
	return &NullableGETStockTransfersStockTransferId200ResponseDataAttributes{value: val, isSet: true}
}

func (v NullableGETStockTransfersStockTransferId200ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGETStockTransfersStockTransferId200ResponseDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
