/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ShipmentUpdateDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShipmentUpdateDataRelationships{}

// ShipmentUpdateDataRelationships struct for ShipmentUpdateDataRelationships
type ShipmentUpdateDataRelationships struct {
	ShippingCategory       *ShipmentCreateDataRelationshipsShippingCategory       `json:"shipping_category,omitempty"`
	InventoryStockLocation *ShipmentCreateDataRelationshipsInventoryStockLocation `json:"inventory_stock_location,omitempty"`
	ShippingAddress        *CustomerAddressCreateDataRelationshipsAddress         `json:"shipping_address,omitempty"`
	ShippingMethod         *DeliveryLeadTimeCreateDataRelationshipsShippingMethod `json:"shipping_method,omitempty"`
	Tags                   *AddressCreateDataRelationshipsTags                    `json:"tags,omitempty"`
}

// NewShipmentUpdateDataRelationships instantiates a new ShipmentUpdateDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShipmentUpdateDataRelationships() *ShipmentUpdateDataRelationships {
	this := ShipmentUpdateDataRelationships{}
	return &this
}

// NewShipmentUpdateDataRelationshipsWithDefaults instantiates a new ShipmentUpdateDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShipmentUpdateDataRelationshipsWithDefaults() *ShipmentUpdateDataRelationships {
	this := ShipmentUpdateDataRelationships{}
	return &this
}

// GetShippingCategory returns the ShippingCategory field value if set, zero value otherwise.
func (o *ShipmentUpdateDataRelationships) GetShippingCategory() ShipmentCreateDataRelationshipsShippingCategory {
	if o == nil || IsNil(o.ShippingCategory) {
		var ret ShipmentCreateDataRelationshipsShippingCategory
		return ret
	}
	return *o.ShippingCategory
}

// GetShippingCategoryOk returns a tuple with the ShippingCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentUpdateDataRelationships) GetShippingCategoryOk() (*ShipmentCreateDataRelationshipsShippingCategory, bool) {
	if o == nil || IsNil(o.ShippingCategory) {
		return nil, false
	}
	return o.ShippingCategory, true
}

// HasShippingCategory returns a boolean if a field has been set.
func (o *ShipmentUpdateDataRelationships) HasShippingCategory() bool {
	if o != nil && !IsNil(o.ShippingCategory) {
		return true
	}

	return false
}

// SetShippingCategory gets a reference to the given ShipmentCreateDataRelationshipsShippingCategory and assigns it to the ShippingCategory field.
func (o *ShipmentUpdateDataRelationships) SetShippingCategory(v ShipmentCreateDataRelationshipsShippingCategory) {
	o.ShippingCategory = &v
}

// GetInventoryStockLocation returns the InventoryStockLocation field value if set, zero value otherwise.
func (o *ShipmentUpdateDataRelationships) GetInventoryStockLocation() ShipmentCreateDataRelationshipsInventoryStockLocation {
	if o == nil || IsNil(o.InventoryStockLocation) {
		var ret ShipmentCreateDataRelationshipsInventoryStockLocation
		return ret
	}
	return *o.InventoryStockLocation
}

// GetInventoryStockLocationOk returns a tuple with the InventoryStockLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentUpdateDataRelationships) GetInventoryStockLocationOk() (*ShipmentCreateDataRelationshipsInventoryStockLocation, bool) {
	if o == nil || IsNil(o.InventoryStockLocation) {
		return nil, false
	}
	return o.InventoryStockLocation, true
}

// HasInventoryStockLocation returns a boolean if a field has been set.
func (o *ShipmentUpdateDataRelationships) HasInventoryStockLocation() bool {
	if o != nil && !IsNil(o.InventoryStockLocation) {
		return true
	}

	return false
}

// SetInventoryStockLocation gets a reference to the given ShipmentCreateDataRelationshipsInventoryStockLocation and assigns it to the InventoryStockLocation field.
func (o *ShipmentUpdateDataRelationships) SetInventoryStockLocation(v ShipmentCreateDataRelationshipsInventoryStockLocation) {
	o.InventoryStockLocation = &v
}

// GetShippingAddress returns the ShippingAddress field value if set, zero value otherwise.
func (o *ShipmentUpdateDataRelationships) GetShippingAddress() CustomerAddressCreateDataRelationshipsAddress {
	if o == nil || IsNil(o.ShippingAddress) {
		var ret CustomerAddressCreateDataRelationshipsAddress
		return ret
	}
	return *o.ShippingAddress
}

// GetShippingAddressOk returns a tuple with the ShippingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentUpdateDataRelationships) GetShippingAddressOk() (*CustomerAddressCreateDataRelationshipsAddress, bool) {
	if o == nil || IsNil(o.ShippingAddress) {
		return nil, false
	}
	return o.ShippingAddress, true
}

// HasShippingAddress returns a boolean if a field has been set.
func (o *ShipmentUpdateDataRelationships) HasShippingAddress() bool {
	if o != nil && !IsNil(o.ShippingAddress) {
		return true
	}

	return false
}

// SetShippingAddress gets a reference to the given CustomerAddressCreateDataRelationshipsAddress and assigns it to the ShippingAddress field.
func (o *ShipmentUpdateDataRelationships) SetShippingAddress(v CustomerAddressCreateDataRelationshipsAddress) {
	o.ShippingAddress = &v
}

// GetShippingMethod returns the ShippingMethod field value if set, zero value otherwise.
func (o *ShipmentUpdateDataRelationships) GetShippingMethod() DeliveryLeadTimeCreateDataRelationshipsShippingMethod {
	if o == nil || IsNil(o.ShippingMethod) {
		var ret DeliveryLeadTimeCreateDataRelationshipsShippingMethod
		return ret
	}
	return *o.ShippingMethod
}

// GetShippingMethodOk returns a tuple with the ShippingMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentUpdateDataRelationships) GetShippingMethodOk() (*DeliveryLeadTimeCreateDataRelationshipsShippingMethod, bool) {
	if o == nil || IsNil(o.ShippingMethod) {
		return nil, false
	}
	return o.ShippingMethod, true
}

// HasShippingMethod returns a boolean if a field has been set.
func (o *ShipmentUpdateDataRelationships) HasShippingMethod() bool {
	if o != nil && !IsNil(o.ShippingMethod) {
		return true
	}

	return false
}

// SetShippingMethod gets a reference to the given DeliveryLeadTimeCreateDataRelationshipsShippingMethod and assigns it to the ShippingMethod field.
func (o *ShipmentUpdateDataRelationships) SetShippingMethod(v DeliveryLeadTimeCreateDataRelationshipsShippingMethod) {
	o.ShippingMethod = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ShipmentUpdateDataRelationships) GetTags() AddressCreateDataRelationshipsTags {
	if o == nil || IsNil(o.Tags) {
		var ret AddressCreateDataRelationshipsTags
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentUpdateDataRelationships) GetTagsOk() (*AddressCreateDataRelationshipsTags, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ShipmentUpdateDataRelationships) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given AddressCreateDataRelationshipsTags and assigns it to the Tags field.
func (o *ShipmentUpdateDataRelationships) SetTags(v AddressCreateDataRelationshipsTags) {
	o.Tags = &v
}

func (o ShipmentUpdateDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShipmentUpdateDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShippingCategory) {
		toSerialize["shipping_category"] = o.ShippingCategory
	}
	if !IsNil(o.InventoryStockLocation) {
		toSerialize["inventory_stock_location"] = o.InventoryStockLocation
	}
	if !IsNil(o.ShippingAddress) {
		toSerialize["shipping_address"] = o.ShippingAddress
	}
	if !IsNil(o.ShippingMethod) {
		toSerialize["shipping_method"] = o.ShippingMethod
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableShipmentUpdateDataRelationships struct {
	value *ShipmentUpdateDataRelationships
	isSet bool
}

func (v NullableShipmentUpdateDataRelationships) Get() *ShipmentUpdateDataRelationships {
	return v.value
}

func (v *NullableShipmentUpdateDataRelationships) Set(val *ShipmentUpdateDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableShipmentUpdateDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableShipmentUpdateDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipmentUpdateDataRelationships(val *ShipmentUpdateDataRelationships) *NullableShipmentUpdateDataRelationships {
	return &NullableShipmentUpdateDataRelationships{value: val, isSet: true}
}

func (v NullableShipmentUpdateDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipmentUpdateDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
