/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the GETLineItemsLineItemId200ResponseDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GETLineItemsLineItemId200ResponseDataAttributes{}

// GETLineItemsLineItemId200ResponseDataAttributes struct for GETLineItemsLineItemId200ResponseDataAttributes
type GETLineItemsLineItemId200ResponseDataAttributes struct {
	// The code of the associated SKU.
	SkuCode interface{} `json:"sku_code,omitempty"`
	// The code of the associated bundle.
	BundleCode interface{} `json:"bundle_code,omitempty"`
	// The line item quantity.
	Quantity interface{} `json:"quantity,omitempty"`
	// When creating or updating a new line item, set this attribute to '1' if you want to inject the unit_amount_cents price from an external source. Any successive price computation will be done externally, until the attribute is reset to '0'.
	ExternalPrice interface{} `json:"_external_price,omitempty"`
	// The international 3-letter currency code as defined by the ISO 4217 standard, automatically inherited from the order's market.
	CurrencyCode interface{} `json:"currency_code,omitempty"`
	// The unit amount of the line item, in cents. Can be specified only via an integration application, or when the item is missing, otherwise is automatically computed by using one of the available methods. Cannot be passed by sales channels.
	UnitAmountCents interface{} `json:"unit_amount_cents,omitempty"`
	// The unit amount of the line item, float. This can be useful to track the purchase on thrid party systems, e.g Google Analyitcs Enhanced Ecommerce.
	UnitAmountFloat interface{} `json:"unit_amount_float,omitempty"`
	// The unit amount of the line item, formatted. This can be useful to display the amount with currency in you views.
	FormattedUnitAmount interface{} `json:"formatted_unit_amount,omitempty"`
	// The compared price amount, in cents. Useful to display a percentage discount.
	CompareAtAmountCents interface{} `json:"compare_at_amount_cents,omitempty"`
	// The compared price amount, float.
	CompareAtAmountFloat interface{} `json:"compare_at_amount_float,omitempty"`
	// The compared price amount, formatted.
	FormattedCompareAtAmount interface{} `json:"formatted_compare_at_amount,omitempty"`
	// The options amount of the line item, in cents. Cannot be passed by sales channels.
	OptionsAmountCents interface{} `json:"options_amount_cents,omitempty"`
	// The options amount of the line item, float.
	OptionsAmountFloat interface{} `json:"options_amount_float,omitempty"`
	// The options amount of the line item, formatted.
	FormattedOptionsAmount interface{} `json:"formatted_options_amount,omitempty"`
	// The discount applied to the line item, in cents. When you apply a discount to an order, this is automatically calculated basing on the line item total_amount_cents value.
	DiscountCents interface{} `json:"discount_cents,omitempty"`
	// The discount applied to the line item, float. When you apply a discount to an order, this is automatically calculated basing on the line item total_amount_cents value.
	DiscountFloat interface{} `json:"discount_float,omitempty"`
	// The discount applied to the line item, fromatted. When you apply a discount to an order, this is automatically calculated basing on the line item total_amount_cents value.
	FormattedDiscount interface{} `json:"formatted_discount,omitempty"`
	// Calculated as unit amount x quantity + options amount, in cents.
	TotalAmountCents interface{} `json:"total_amount_cents,omitempty"`
	// Calculated as unit amount x quantity + options amount, float. This can be useful to track the purchase on thrid party systems, e.g Google Analyitcs Enhanced Ecommerce.
	TotalAmountFloat interface{} `json:"total_amount_float,omitempty"`
	// Calculated as unit amount x quantity + options amount, formatted. This can be useful to display the amount with currency in you views.
	FormattedTotalAmount interface{} `json:"formatted_total_amount,omitempty"`
	// The collected tax amount, otherwise calculated as total amount cents - discount cent * tax rate, in cents.
	TaxAmountCents interface{} `json:"tax_amount_cents,omitempty"`
	// The collected tax amount, otherwise calculated as total amount cents - discount cent * tax rate, float.
	TaxAmountFloat interface{} `json:"tax_amount_float,omitempty"`
	// The collected tax amount, otherwise calculated as total amount cents - discount cent * tax rate, formatted.
	FormattedTaxAmount interface{} `json:"formatted_tax_amount,omitempty"`
	// The name of the line item. When blank, it gets populated with the name of the associated item (if present).
	Name interface{} `json:"name,omitempty"`
	// The image_url of the line item. When blank, it gets populated with the image_url of the associated item (if present, SKU only).
	ImageUrl interface{} `json:"image_url,omitempty"`
	// The discount breakdown for this line item (if calculated).
	DiscountBreakdown interface{} `json:"discount_breakdown,omitempty"`
	// The tax rate for this line item (if calculated).
	TaxRate interface{} `json:"tax_rate,omitempty"`
	// The tax breakdown for this line item (if calculated).
	TaxBreakdown interface{} `json:"tax_breakdown,omitempty"`
	// The type of the associated item. One of 'skus', 'bundles', 'gift_cards', 'shipments', 'payment_methods', 'adjustments', 'discount_engine_items', 'percentage_discount_promotions', 'free_shipping_promotions', 'buy_x_pay_y_promotions', 'free_gift_promotions', 'fixed_price_promotions', 'external_promotions', 'fixed_amount_promotions', or 'flex_promotions'.
	ItemType interface{} `json:"item_type,omitempty"`
	// The frequency which generates a subscription. Must be supported by existing associated subscription_model.
	Frequency interface{} `json:"frequency,omitempty"`
	// The coupon code, if any, used to trigger this promotion line item. null for other line item types or if the promotion line item wasn't triggered by a coupon.
	CouponCode interface{} `json:"coupon_code,omitempty"`
	// The circuit breaker state, by default it is 'closed'. It can become 'open' once the number of consecutive failures overlaps the specified threshold, in such case no further calls to the failing callback are made.
	CircuitState interface{} `json:"circuit_state,omitempty"`
	// The number of consecutive failures recorded by the circuit breaker associated to this resource, will be reset on first successful call to callback.
	CircuitFailureCount interface{} `json:"circuit_failure_count,omitempty"`
	// Time at which the resource was created.
	CreatedAt interface{} `json:"created_at,omitempty"`
	// Time at which the resource was last updated.
	UpdatedAt interface{} `json:"updated_at,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference interface{} `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code.
	ReferenceOrigin interface{} `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata interface{} `json:"metadata,omitempty"`
}

// NewGETLineItemsLineItemId200ResponseDataAttributes instantiates a new GETLineItemsLineItemId200ResponseDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGETLineItemsLineItemId200ResponseDataAttributes() *GETLineItemsLineItemId200ResponseDataAttributes {
	this := GETLineItemsLineItemId200ResponseDataAttributes{}
	return &this
}

// NewGETLineItemsLineItemId200ResponseDataAttributesWithDefaults instantiates a new GETLineItemsLineItemId200ResponseDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGETLineItemsLineItemId200ResponseDataAttributesWithDefaults() *GETLineItemsLineItemId200ResponseDataAttributes {
	this := GETLineItemsLineItemId200ResponseDataAttributes{}
	return &this
}

// GetSkuCode returns the SkuCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetSkuCode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.SkuCode
}

// GetSkuCodeOk returns a tuple with the SkuCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetSkuCodeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.SkuCode) {
		return nil, false
	}
	return &o.SkuCode, true
}

// HasSkuCode returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasSkuCode() bool {
	if o != nil && IsNil(o.SkuCode) {
		return true
	}

	return false
}

// SetSkuCode gets a reference to the given interface{} and assigns it to the SkuCode field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetSkuCode(v interface{}) {
	o.SkuCode = v
}

// GetBundleCode returns the BundleCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetBundleCode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.BundleCode
}

// GetBundleCodeOk returns a tuple with the BundleCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetBundleCodeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.BundleCode) {
		return nil, false
	}
	return &o.BundleCode, true
}

// HasBundleCode returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasBundleCode() bool {
	if o != nil && IsNil(o.BundleCode) {
		return true
	}

	return false
}

// SetBundleCode gets a reference to the given interface{} and assigns it to the BundleCode field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetBundleCode(v interface{}) {
	o.BundleCode = v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetQuantity() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetQuantityOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return &o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasQuantity() bool {
	if o != nil && IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given interface{} and assigns it to the Quantity field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetQuantity(v interface{}) {
	o.Quantity = v
}

// GetExternalPrice returns the ExternalPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetExternalPrice() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ExternalPrice
}

// GetExternalPriceOk returns a tuple with the ExternalPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetExternalPriceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ExternalPrice) {
		return nil, false
	}
	return &o.ExternalPrice, true
}

// HasExternalPrice returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasExternalPrice() bool {
	if o != nil && IsNil(o.ExternalPrice) {
		return true
	}

	return false
}

// SetExternalPrice gets a reference to the given interface{} and assigns it to the ExternalPrice field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetExternalPrice(v interface{}) {
	o.ExternalPrice = v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetCurrencyCode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetCurrencyCodeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return &o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasCurrencyCode() bool {
	if o != nil && IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given interface{} and assigns it to the CurrencyCode field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetCurrencyCode(v interface{}) {
	o.CurrencyCode = v
}

// GetUnitAmountCents returns the UnitAmountCents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetUnitAmountCents() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.UnitAmountCents
}

// GetUnitAmountCentsOk returns a tuple with the UnitAmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetUnitAmountCentsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.UnitAmountCents) {
		return nil, false
	}
	return &o.UnitAmountCents, true
}

// HasUnitAmountCents returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasUnitAmountCents() bool {
	if o != nil && IsNil(o.UnitAmountCents) {
		return true
	}

	return false
}

// SetUnitAmountCents gets a reference to the given interface{} and assigns it to the UnitAmountCents field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetUnitAmountCents(v interface{}) {
	o.UnitAmountCents = v
}

// GetUnitAmountFloat returns the UnitAmountFloat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetUnitAmountFloat() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.UnitAmountFloat
}

// GetUnitAmountFloatOk returns a tuple with the UnitAmountFloat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetUnitAmountFloatOk() (*interface{}, bool) {
	if o == nil || IsNil(o.UnitAmountFloat) {
		return nil, false
	}
	return &o.UnitAmountFloat, true
}

// HasUnitAmountFloat returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasUnitAmountFloat() bool {
	if o != nil && IsNil(o.UnitAmountFloat) {
		return true
	}

	return false
}

// SetUnitAmountFloat gets a reference to the given interface{} and assigns it to the UnitAmountFloat field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetUnitAmountFloat(v interface{}) {
	o.UnitAmountFloat = v
}

// GetFormattedUnitAmount returns the FormattedUnitAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetFormattedUnitAmount() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FormattedUnitAmount
}

// GetFormattedUnitAmountOk returns a tuple with the FormattedUnitAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetFormattedUnitAmountOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FormattedUnitAmount) {
		return nil, false
	}
	return &o.FormattedUnitAmount, true
}

// HasFormattedUnitAmount returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasFormattedUnitAmount() bool {
	if o != nil && IsNil(o.FormattedUnitAmount) {
		return true
	}

	return false
}

// SetFormattedUnitAmount gets a reference to the given interface{} and assigns it to the FormattedUnitAmount field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetFormattedUnitAmount(v interface{}) {
	o.FormattedUnitAmount = v
}

// GetCompareAtAmountCents returns the CompareAtAmountCents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetCompareAtAmountCents() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CompareAtAmountCents
}

// GetCompareAtAmountCentsOk returns a tuple with the CompareAtAmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetCompareAtAmountCentsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CompareAtAmountCents) {
		return nil, false
	}
	return &o.CompareAtAmountCents, true
}

// HasCompareAtAmountCents returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasCompareAtAmountCents() bool {
	if o != nil && IsNil(o.CompareAtAmountCents) {
		return true
	}

	return false
}

// SetCompareAtAmountCents gets a reference to the given interface{} and assigns it to the CompareAtAmountCents field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetCompareAtAmountCents(v interface{}) {
	o.CompareAtAmountCents = v
}

// GetCompareAtAmountFloat returns the CompareAtAmountFloat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetCompareAtAmountFloat() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CompareAtAmountFloat
}

// GetCompareAtAmountFloatOk returns a tuple with the CompareAtAmountFloat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetCompareAtAmountFloatOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CompareAtAmountFloat) {
		return nil, false
	}
	return &o.CompareAtAmountFloat, true
}

// HasCompareAtAmountFloat returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasCompareAtAmountFloat() bool {
	if o != nil && IsNil(o.CompareAtAmountFloat) {
		return true
	}

	return false
}

// SetCompareAtAmountFloat gets a reference to the given interface{} and assigns it to the CompareAtAmountFloat field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetCompareAtAmountFloat(v interface{}) {
	o.CompareAtAmountFloat = v
}

// GetFormattedCompareAtAmount returns the FormattedCompareAtAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetFormattedCompareAtAmount() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FormattedCompareAtAmount
}

// GetFormattedCompareAtAmountOk returns a tuple with the FormattedCompareAtAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetFormattedCompareAtAmountOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FormattedCompareAtAmount) {
		return nil, false
	}
	return &o.FormattedCompareAtAmount, true
}

// HasFormattedCompareAtAmount returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasFormattedCompareAtAmount() bool {
	if o != nil && IsNil(o.FormattedCompareAtAmount) {
		return true
	}

	return false
}

// SetFormattedCompareAtAmount gets a reference to the given interface{} and assigns it to the FormattedCompareAtAmount field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetFormattedCompareAtAmount(v interface{}) {
	o.FormattedCompareAtAmount = v
}

// GetOptionsAmountCents returns the OptionsAmountCents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetOptionsAmountCents() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.OptionsAmountCents
}

// GetOptionsAmountCentsOk returns a tuple with the OptionsAmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetOptionsAmountCentsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.OptionsAmountCents) {
		return nil, false
	}
	return &o.OptionsAmountCents, true
}

// HasOptionsAmountCents returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasOptionsAmountCents() bool {
	if o != nil && IsNil(o.OptionsAmountCents) {
		return true
	}

	return false
}

// SetOptionsAmountCents gets a reference to the given interface{} and assigns it to the OptionsAmountCents field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetOptionsAmountCents(v interface{}) {
	o.OptionsAmountCents = v
}

// GetOptionsAmountFloat returns the OptionsAmountFloat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetOptionsAmountFloat() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.OptionsAmountFloat
}

// GetOptionsAmountFloatOk returns a tuple with the OptionsAmountFloat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetOptionsAmountFloatOk() (*interface{}, bool) {
	if o == nil || IsNil(o.OptionsAmountFloat) {
		return nil, false
	}
	return &o.OptionsAmountFloat, true
}

// HasOptionsAmountFloat returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasOptionsAmountFloat() bool {
	if o != nil && IsNil(o.OptionsAmountFloat) {
		return true
	}

	return false
}

// SetOptionsAmountFloat gets a reference to the given interface{} and assigns it to the OptionsAmountFloat field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetOptionsAmountFloat(v interface{}) {
	o.OptionsAmountFloat = v
}

// GetFormattedOptionsAmount returns the FormattedOptionsAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetFormattedOptionsAmount() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FormattedOptionsAmount
}

// GetFormattedOptionsAmountOk returns a tuple with the FormattedOptionsAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetFormattedOptionsAmountOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FormattedOptionsAmount) {
		return nil, false
	}
	return &o.FormattedOptionsAmount, true
}

// HasFormattedOptionsAmount returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasFormattedOptionsAmount() bool {
	if o != nil && IsNil(o.FormattedOptionsAmount) {
		return true
	}

	return false
}

// SetFormattedOptionsAmount gets a reference to the given interface{} and assigns it to the FormattedOptionsAmount field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetFormattedOptionsAmount(v interface{}) {
	o.FormattedOptionsAmount = v
}

// GetDiscountCents returns the DiscountCents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetDiscountCents() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.DiscountCents
}

// GetDiscountCentsOk returns a tuple with the DiscountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetDiscountCentsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.DiscountCents) {
		return nil, false
	}
	return &o.DiscountCents, true
}

// HasDiscountCents returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasDiscountCents() bool {
	if o != nil && IsNil(o.DiscountCents) {
		return true
	}

	return false
}

// SetDiscountCents gets a reference to the given interface{} and assigns it to the DiscountCents field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetDiscountCents(v interface{}) {
	o.DiscountCents = v
}

// GetDiscountFloat returns the DiscountFloat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetDiscountFloat() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.DiscountFloat
}

// GetDiscountFloatOk returns a tuple with the DiscountFloat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetDiscountFloatOk() (*interface{}, bool) {
	if o == nil || IsNil(o.DiscountFloat) {
		return nil, false
	}
	return &o.DiscountFloat, true
}

// HasDiscountFloat returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasDiscountFloat() bool {
	if o != nil && IsNil(o.DiscountFloat) {
		return true
	}

	return false
}

// SetDiscountFloat gets a reference to the given interface{} and assigns it to the DiscountFloat field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetDiscountFloat(v interface{}) {
	o.DiscountFloat = v
}

// GetFormattedDiscount returns the FormattedDiscount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetFormattedDiscount() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FormattedDiscount
}

// GetFormattedDiscountOk returns a tuple with the FormattedDiscount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetFormattedDiscountOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FormattedDiscount) {
		return nil, false
	}
	return &o.FormattedDiscount, true
}

// HasFormattedDiscount returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasFormattedDiscount() bool {
	if o != nil && IsNil(o.FormattedDiscount) {
		return true
	}

	return false
}

// SetFormattedDiscount gets a reference to the given interface{} and assigns it to the FormattedDiscount field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetFormattedDiscount(v interface{}) {
	o.FormattedDiscount = v
}

// GetTotalAmountCents returns the TotalAmountCents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetTotalAmountCents() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.TotalAmountCents
}

// GetTotalAmountCentsOk returns a tuple with the TotalAmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetTotalAmountCentsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.TotalAmountCents) {
		return nil, false
	}
	return &o.TotalAmountCents, true
}

// HasTotalAmountCents returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasTotalAmountCents() bool {
	if o != nil && IsNil(o.TotalAmountCents) {
		return true
	}

	return false
}

// SetTotalAmountCents gets a reference to the given interface{} and assigns it to the TotalAmountCents field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetTotalAmountCents(v interface{}) {
	o.TotalAmountCents = v
}

// GetTotalAmountFloat returns the TotalAmountFloat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetTotalAmountFloat() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.TotalAmountFloat
}

// GetTotalAmountFloatOk returns a tuple with the TotalAmountFloat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetTotalAmountFloatOk() (*interface{}, bool) {
	if o == nil || IsNil(o.TotalAmountFloat) {
		return nil, false
	}
	return &o.TotalAmountFloat, true
}

// HasTotalAmountFloat returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasTotalAmountFloat() bool {
	if o != nil && IsNil(o.TotalAmountFloat) {
		return true
	}

	return false
}

// SetTotalAmountFloat gets a reference to the given interface{} and assigns it to the TotalAmountFloat field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetTotalAmountFloat(v interface{}) {
	o.TotalAmountFloat = v
}

// GetFormattedTotalAmount returns the FormattedTotalAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetFormattedTotalAmount() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FormattedTotalAmount
}

// GetFormattedTotalAmountOk returns a tuple with the FormattedTotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetFormattedTotalAmountOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FormattedTotalAmount) {
		return nil, false
	}
	return &o.FormattedTotalAmount, true
}

// HasFormattedTotalAmount returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasFormattedTotalAmount() bool {
	if o != nil && IsNil(o.FormattedTotalAmount) {
		return true
	}

	return false
}

// SetFormattedTotalAmount gets a reference to the given interface{} and assigns it to the FormattedTotalAmount field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetFormattedTotalAmount(v interface{}) {
	o.FormattedTotalAmount = v
}

// GetTaxAmountCents returns the TaxAmountCents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetTaxAmountCents() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.TaxAmountCents
}

// GetTaxAmountCentsOk returns a tuple with the TaxAmountCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetTaxAmountCentsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.TaxAmountCents) {
		return nil, false
	}
	return &o.TaxAmountCents, true
}

// HasTaxAmountCents returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasTaxAmountCents() bool {
	if o != nil && IsNil(o.TaxAmountCents) {
		return true
	}

	return false
}

// SetTaxAmountCents gets a reference to the given interface{} and assigns it to the TaxAmountCents field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetTaxAmountCents(v interface{}) {
	o.TaxAmountCents = v
}

// GetTaxAmountFloat returns the TaxAmountFloat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetTaxAmountFloat() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.TaxAmountFloat
}

// GetTaxAmountFloatOk returns a tuple with the TaxAmountFloat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetTaxAmountFloatOk() (*interface{}, bool) {
	if o == nil || IsNil(o.TaxAmountFloat) {
		return nil, false
	}
	return &o.TaxAmountFloat, true
}

// HasTaxAmountFloat returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasTaxAmountFloat() bool {
	if o != nil && IsNil(o.TaxAmountFloat) {
		return true
	}

	return false
}

// SetTaxAmountFloat gets a reference to the given interface{} and assigns it to the TaxAmountFloat field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetTaxAmountFloat(v interface{}) {
	o.TaxAmountFloat = v
}

// GetFormattedTaxAmount returns the FormattedTaxAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetFormattedTaxAmount() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FormattedTaxAmount
}

// GetFormattedTaxAmountOk returns a tuple with the FormattedTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetFormattedTaxAmountOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FormattedTaxAmount) {
		return nil, false
	}
	return &o.FormattedTaxAmount, true
}

// HasFormattedTaxAmount returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasFormattedTaxAmount() bool {
	if o != nil && IsNil(o.FormattedTaxAmount) {
		return true
	}

	return false
}

// SetFormattedTaxAmount gets a reference to the given interface{} and assigns it to the FormattedTaxAmount field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetFormattedTaxAmount(v interface{}) {
	o.FormattedTaxAmount = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetName() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetNameOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return &o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasName() bool {
	if o != nil && IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given interface{} and assigns it to the Name field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetName(v interface{}) {
	o.Name = v
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetImageUrl() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetImageUrlOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ImageUrl) {
		return nil, false
	}
	return &o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasImageUrl() bool {
	if o != nil && IsNil(o.ImageUrl) {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given interface{} and assigns it to the ImageUrl field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetImageUrl(v interface{}) {
	o.ImageUrl = v
}

// GetDiscountBreakdown returns the DiscountBreakdown field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetDiscountBreakdown() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.DiscountBreakdown
}

// GetDiscountBreakdownOk returns a tuple with the DiscountBreakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetDiscountBreakdownOk() (*interface{}, bool) {
	if o == nil || IsNil(o.DiscountBreakdown) {
		return nil, false
	}
	return &o.DiscountBreakdown, true
}

// HasDiscountBreakdown returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasDiscountBreakdown() bool {
	if o != nil && IsNil(o.DiscountBreakdown) {
		return true
	}

	return false
}

// SetDiscountBreakdown gets a reference to the given interface{} and assigns it to the DiscountBreakdown field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetDiscountBreakdown(v interface{}) {
	o.DiscountBreakdown = v
}

// GetTaxRate returns the TaxRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetTaxRate() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.TaxRate
}

// GetTaxRateOk returns a tuple with the TaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetTaxRateOk() (*interface{}, bool) {
	if o == nil || IsNil(o.TaxRate) {
		return nil, false
	}
	return &o.TaxRate, true
}

// HasTaxRate returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasTaxRate() bool {
	if o != nil && IsNil(o.TaxRate) {
		return true
	}

	return false
}

// SetTaxRate gets a reference to the given interface{} and assigns it to the TaxRate field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetTaxRate(v interface{}) {
	o.TaxRate = v
}

// GetTaxBreakdown returns the TaxBreakdown field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetTaxBreakdown() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.TaxBreakdown
}

// GetTaxBreakdownOk returns a tuple with the TaxBreakdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetTaxBreakdownOk() (*interface{}, bool) {
	if o == nil || IsNil(o.TaxBreakdown) {
		return nil, false
	}
	return &o.TaxBreakdown, true
}

// HasTaxBreakdown returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasTaxBreakdown() bool {
	if o != nil && IsNil(o.TaxBreakdown) {
		return true
	}

	return false
}

// SetTaxBreakdown gets a reference to the given interface{} and assigns it to the TaxBreakdown field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetTaxBreakdown(v interface{}) {
	o.TaxBreakdown = v
}

// GetItemType returns the ItemType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetItemType() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ItemType
}

// GetItemTypeOk returns a tuple with the ItemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetItemTypeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ItemType) {
		return nil, false
	}
	return &o.ItemType, true
}

// HasItemType returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasItemType() bool {
	if o != nil && IsNil(o.ItemType) {
		return true
	}

	return false
}

// SetItemType gets a reference to the given interface{} and assigns it to the ItemType field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetItemType(v interface{}) {
	o.ItemType = v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetFrequency() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetFrequencyOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Frequency) {
		return nil, false
	}
	return &o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasFrequency() bool {
	if o != nil && IsNil(o.Frequency) {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given interface{} and assigns it to the Frequency field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetFrequency(v interface{}) {
	o.Frequency = v
}

// GetCouponCode returns the CouponCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetCouponCode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CouponCode
}

// GetCouponCodeOk returns a tuple with the CouponCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetCouponCodeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CouponCode) {
		return nil, false
	}
	return &o.CouponCode, true
}

// HasCouponCode returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasCouponCode() bool {
	if o != nil && IsNil(o.CouponCode) {
		return true
	}

	return false
}

// SetCouponCode gets a reference to the given interface{} and assigns it to the CouponCode field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetCouponCode(v interface{}) {
	o.CouponCode = v
}

// GetCircuitState returns the CircuitState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetCircuitState() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CircuitState
}

// GetCircuitStateOk returns a tuple with the CircuitState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetCircuitStateOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CircuitState) {
		return nil, false
	}
	return &o.CircuitState, true
}

// HasCircuitState returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasCircuitState() bool {
	if o != nil && IsNil(o.CircuitState) {
		return true
	}

	return false
}

// SetCircuitState gets a reference to the given interface{} and assigns it to the CircuitState field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetCircuitState(v interface{}) {
	o.CircuitState = v
}

// GetCircuitFailureCount returns the CircuitFailureCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetCircuitFailureCount() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CircuitFailureCount
}

// GetCircuitFailureCountOk returns a tuple with the CircuitFailureCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetCircuitFailureCountOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CircuitFailureCount) {
		return nil, false
	}
	return &o.CircuitFailureCount, true
}

// HasCircuitFailureCount returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasCircuitFailureCount() bool {
	if o != nil && IsNil(o.CircuitFailureCount) {
		return true
	}

	return false
}

// SetCircuitFailureCount gets a reference to the given interface{} and assigns it to the CircuitFailureCount field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetCircuitFailureCount(v interface{}) {
	o.CircuitFailureCount = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetCreatedAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetCreatedAtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return &o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasCreatedAt() bool {
	if o != nil && IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given interface{} and assigns it to the CreatedAt field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetCreatedAt(v interface{}) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetUpdatedAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetUpdatedAtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasUpdatedAt() bool {
	if o != nil && IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given interface{} and assigns it to the UpdatedAt field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetUpdatedAt(v interface{}) {
	o.UpdatedAt = v
}

// GetReference returns the Reference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetReferenceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return &o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasReference() bool {
	if o != nil && IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given interface{} and assigns it to the Reference field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetReference(v interface{}) {
	o.Reference = v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetReferenceOrigin() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetReferenceOriginOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReferenceOrigin) {
		return nil, false
	}
	return &o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasReferenceOrigin() bool {
	if o != nil && IsNil(o.ReferenceOrigin) {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given interface{} and assigns it to the ReferenceOrigin field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetReferenceOrigin(v interface{}) {
	o.ReferenceOrigin = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GETLineItemsLineItemId200ResponseDataAttributes) GetMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given interface{} and assigns it to the Metadata field.
func (o *GETLineItemsLineItemId200ResponseDataAttributes) SetMetadata(v interface{}) {
	o.Metadata = v
}

func (o GETLineItemsLineItemId200ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GETLineItemsLineItemId200ResponseDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SkuCode != nil {
		toSerialize["sku_code"] = o.SkuCode
	}
	if o.BundleCode != nil {
		toSerialize["bundle_code"] = o.BundleCode
	}
	if o.Quantity != nil {
		toSerialize["quantity"] = o.Quantity
	}
	if o.ExternalPrice != nil {
		toSerialize["_external_price"] = o.ExternalPrice
	}
	if o.CurrencyCode != nil {
		toSerialize["currency_code"] = o.CurrencyCode
	}
	if o.UnitAmountCents != nil {
		toSerialize["unit_amount_cents"] = o.UnitAmountCents
	}
	if o.UnitAmountFloat != nil {
		toSerialize["unit_amount_float"] = o.UnitAmountFloat
	}
	if o.FormattedUnitAmount != nil {
		toSerialize["formatted_unit_amount"] = o.FormattedUnitAmount
	}
	if o.CompareAtAmountCents != nil {
		toSerialize["compare_at_amount_cents"] = o.CompareAtAmountCents
	}
	if o.CompareAtAmountFloat != nil {
		toSerialize["compare_at_amount_float"] = o.CompareAtAmountFloat
	}
	if o.FormattedCompareAtAmount != nil {
		toSerialize["formatted_compare_at_amount"] = o.FormattedCompareAtAmount
	}
	if o.OptionsAmountCents != nil {
		toSerialize["options_amount_cents"] = o.OptionsAmountCents
	}
	if o.OptionsAmountFloat != nil {
		toSerialize["options_amount_float"] = o.OptionsAmountFloat
	}
	if o.FormattedOptionsAmount != nil {
		toSerialize["formatted_options_amount"] = o.FormattedOptionsAmount
	}
	if o.DiscountCents != nil {
		toSerialize["discount_cents"] = o.DiscountCents
	}
	if o.DiscountFloat != nil {
		toSerialize["discount_float"] = o.DiscountFloat
	}
	if o.FormattedDiscount != nil {
		toSerialize["formatted_discount"] = o.FormattedDiscount
	}
	if o.TotalAmountCents != nil {
		toSerialize["total_amount_cents"] = o.TotalAmountCents
	}
	if o.TotalAmountFloat != nil {
		toSerialize["total_amount_float"] = o.TotalAmountFloat
	}
	if o.FormattedTotalAmount != nil {
		toSerialize["formatted_total_amount"] = o.FormattedTotalAmount
	}
	if o.TaxAmountCents != nil {
		toSerialize["tax_amount_cents"] = o.TaxAmountCents
	}
	if o.TaxAmountFloat != nil {
		toSerialize["tax_amount_float"] = o.TaxAmountFloat
	}
	if o.FormattedTaxAmount != nil {
		toSerialize["formatted_tax_amount"] = o.FormattedTaxAmount
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ImageUrl != nil {
		toSerialize["image_url"] = o.ImageUrl
	}
	if o.DiscountBreakdown != nil {
		toSerialize["discount_breakdown"] = o.DiscountBreakdown
	}
	if o.TaxRate != nil {
		toSerialize["tax_rate"] = o.TaxRate
	}
	if o.TaxBreakdown != nil {
		toSerialize["tax_breakdown"] = o.TaxBreakdown
	}
	if o.ItemType != nil {
		toSerialize["item_type"] = o.ItemType
	}
	if o.Frequency != nil {
		toSerialize["frequency"] = o.Frequency
	}
	if o.CouponCode != nil {
		toSerialize["coupon_code"] = o.CouponCode
	}
	if o.CircuitState != nil {
		toSerialize["circuit_state"] = o.CircuitState
	}
	if o.CircuitFailureCount != nil {
		toSerialize["circuit_failure_count"] = o.CircuitFailureCount
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableGETLineItemsLineItemId200ResponseDataAttributes struct {
	value *GETLineItemsLineItemId200ResponseDataAttributes
	isSet bool
}

func (v NullableGETLineItemsLineItemId200ResponseDataAttributes) Get() *GETLineItemsLineItemId200ResponseDataAttributes {
	return v.value
}

func (v *NullableGETLineItemsLineItemId200ResponseDataAttributes) Set(val *GETLineItemsLineItemId200ResponseDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableGETLineItemsLineItemId200ResponseDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableGETLineItemsLineItemId200ResponseDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGETLineItemsLineItemId200ResponseDataAttributes(val *GETLineItemsLineItemId200ResponseDataAttributes) *NullableGETLineItemsLineItemId200ResponseDataAttributes {
	return &NullableGETLineItemsLineItemId200ResponseDataAttributes{value: val, isSet: true}
}

func (v NullableGETLineItemsLineItemId200ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGETLineItemsLineItemId200ResponseDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
