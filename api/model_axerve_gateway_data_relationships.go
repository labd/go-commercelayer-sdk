/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the AxerveGatewayDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AxerveGatewayDataRelationships{}

// AxerveGatewayDataRelationships struct for AxerveGatewayDataRelationships
type AxerveGatewayDataRelationships struct {
	PaymentMethods *AdyenGatewayDataRelationshipsPaymentMethods  `json:"payment_methods,omitempty"`
	Versions       *AddressDataRelationshipsVersions             `json:"versions,omitempty"`
	AxervePayments *AxerveGatewayDataRelationshipsAxervePayments `json:"axerve_payments,omitempty"`
}

// NewAxerveGatewayDataRelationships instantiates a new AxerveGatewayDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAxerveGatewayDataRelationships() *AxerveGatewayDataRelationships {
	this := AxerveGatewayDataRelationships{}
	return &this
}

// NewAxerveGatewayDataRelationshipsWithDefaults instantiates a new AxerveGatewayDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAxerveGatewayDataRelationshipsWithDefaults() *AxerveGatewayDataRelationships {
	this := AxerveGatewayDataRelationships{}
	return &this
}

// GetPaymentMethods returns the PaymentMethods field value if set, zero value otherwise.
func (o *AxerveGatewayDataRelationships) GetPaymentMethods() AdyenGatewayDataRelationshipsPaymentMethods {
	if o == nil || IsNil(o.PaymentMethods) {
		var ret AdyenGatewayDataRelationshipsPaymentMethods
		return ret
	}
	return *o.PaymentMethods
}

// GetPaymentMethodsOk returns a tuple with the PaymentMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AxerveGatewayDataRelationships) GetPaymentMethodsOk() (*AdyenGatewayDataRelationshipsPaymentMethods, bool) {
	if o == nil || IsNil(o.PaymentMethods) {
		return nil, false
	}
	return o.PaymentMethods, true
}

// HasPaymentMethods returns a boolean if a field has been set.
func (o *AxerveGatewayDataRelationships) HasPaymentMethods() bool {
	if o != nil && !IsNil(o.PaymentMethods) {
		return true
	}

	return false
}

// SetPaymentMethods gets a reference to the given AdyenGatewayDataRelationshipsPaymentMethods and assigns it to the PaymentMethods field.
func (o *AxerveGatewayDataRelationships) SetPaymentMethods(v AdyenGatewayDataRelationshipsPaymentMethods) {
	o.PaymentMethods = &v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *AxerveGatewayDataRelationships) GetVersions() AddressDataRelationshipsVersions {
	if o == nil || IsNil(o.Versions) {
		var ret AddressDataRelationshipsVersions
		return ret
	}
	return *o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AxerveGatewayDataRelationships) GetVersionsOk() (*AddressDataRelationshipsVersions, bool) {
	if o == nil || IsNil(o.Versions) {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *AxerveGatewayDataRelationships) HasVersions() bool {
	if o != nil && !IsNil(o.Versions) {
		return true
	}

	return false
}

// SetVersions gets a reference to the given AddressDataRelationshipsVersions and assigns it to the Versions field.
func (o *AxerveGatewayDataRelationships) SetVersions(v AddressDataRelationshipsVersions) {
	o.Versions = &v
}

// GetAxervePayments returns the AxervePayments field value if set, zero value otherwise.
func (o *AxerveGatewayDataRelationships) GetAxervePayments() AxerveGatewayDataRelationshipsAxervePayments {
	if o == nil || IsNil(o.AxervePayments) {
		var ret AxerveGatewayDataRelationshipsAxervePayments
		return ret
	}
	return *o.AxervePayments
}

// GetAxervePaymentsOk returns a tuple with the AxervePayments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AxerveGatewayDataRelationships) GetAxervePaymentsOk() (*AxerveGatewayDataRelationshipsAxervePayments, bool) {
	if o == nil || IsNil(o.AxervePayments) {
		return nil, false
	}
	return o.AxervePayments, true
}

// HasAxervePayments returns a boolean if a field has been set.
func (o *AxerveGatewayDataRelationships) HasAxervePayments() bool {
	if o != nil && !IsNil(o.AxervePayments) {
		return true
	}

	return false
}

// SetAxervePayments gets a reference to the given AxerveGatewayDataRelationshipsAxervePayments and assigns it to the AxervePayments field.
func (o *AxerveGatewayDataRelationships) SetAxervePayments(v AxerveGatewayDataRelationshipsAxervePayments) {
	o.AxervePayments = &v
}

func (o AxerveGatewayDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AxerveGatewayDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PaymentMethods) {
		toSerialize["payment_methods"] = o.PaymentMethods
	}
	if !IsNil(o.Versions) {
		toSerialize["versions"] = o.Versions
	}
	if !IsNil(o.AxervePayments) {
		toSerialize["axerve_payments"] = o.AxervePayments
	}
	return toSerialize, nil
}

type NullableAxerveGatewayDataRelationships struct {
	value *AxerveGatewayDataRelationships
	isSet bool
}

func (v NullableAxerveGatewayDataRelationships) Get() *AxerveGatewayDataRelationships {
	return v.value
}

func (v *NullableAxerveGatewayDataRelationships) Set(val *AxerveGatewayDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableAxerveGatewayDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableAxerveGatewayDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAxerveGatewayDataRelationships(val *AxerveGatewayDataRelationships) *NullableAxerveGatewayDataRelationships {
	return &NullableAxerveGatewayDataRelationships{value: val, isSet: true}
}

func (v NullableAxerveGatewayDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAxerveGatewayDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
