/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the CustomerSubscriptionDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerSubscriptionDataRelationships{}

// CustomerSubscriptionDataRelationships struct for CustomerSubscriptionDataRelationships
type CustomerSubscriptionDataRelationships struct {
	Customer *CouponRecipientDataRelationshipsCustomer `json:"customer,omitempty"`
	Events   *AddressDataRelationshipsEvents           `json:"events,omitempty"`
	Versions *AddressDataRelationshipsVersions         `json:"versions,omitempty"`
}

// NewCustomerSubscriptionDataRelationships instantiates a new CustomerSubscriptionDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerSubscriptionDataRelationships() *CustomerSubscriptionDataRelationships {
	this := CustomerSubscriptionDataRelationships{}
	return &this
}

// NewCustomerSubscriptionDataRelationshipsWithDefaults instantiates a new CustomerSubscriptionDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerSubscriptionDataRelationshipsWithDefaults() *CustomerSubscriptionDataRelationships {
	this := CustomerSubscriptionDataRelationships{}
	return &this
}

// GetCustomer returns the Customer field value if set, zero value otherwise.
func (o *CustomerSubscriptionDataRelationships) GetCustomer() CouponRecipientDataRelationshipsCustomer {
	if o == nil || IsNil(o.Customer) {
		var ret CouponRecipientDataRelationshipsCustomer
		return ret
	}
	return *o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerSubscriptionDataRelationships) GetCustomerOk() (*CouponRecipientDataRelationshipsCustomer, bool) {
	if o == nil || IsNil(o.Customer) {
		return nil, false
	}
	return o.Customer, true
}

// HasCustomer returns a boolean if a field has been set.
func (o *CustomerSubscriptionDataRelationships) HasCustomer() bool {
	if o != nil && !IsNil(o.Customer) {
		return true
	}

	return false
}

// SetCustomer gets a reference to the given CouponRecipientDataRelationshipsCustomer and assigns it to the Customer field.
func (o *CustomerSubscriptionDataRelationships) SetCustomer(v CouponRecipientDataRelationshipsCustomer) {
	o.Customer = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *CustomerSubscriptionDataRelationships) GetEvents() AddressDataRelationshipsEvents {
	if o == nil || IsNil(o.Events) {
		var ret AddressDataRelationshipsEvents
		return ret
	}
	return *o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerSubscriptionDataRelationships) GetEventsOk() (*AddressDataRelationshipsEvents, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *CustomerSubscriptionDataRelationships) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given AddressDataRelationshipsEvents and assigns it to the Events field.
func (o *CustomerSubscriptionDataRelationships) SetEvents(v AddressDataRelationshipsEvents) {
	o.Events = &v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *CustomerSubscriptionDataRelationships) GetVersions() AddressDataRelationshipsVersions {
	if o == nil || IsNil(o.Versions) {
		var ret AddressDataRelationshipsVersions
		return ret
	}
	return *o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerSubscriptionDataRelationships) GetVersionsOk() (*AddressDataRelationshipsVersions, bool) {
	if o == nil || IsNil(o.Versions) {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *CustomerSubscriptionDataRelationships) HasVersions() bool {
	if o != nil && !IsNil(o.Versions) {
		return true
	}

	return false
}

// SetVersions gets a reference to the given AddressDataRelationshipsVersions and assigns it to the Versions field.
func (o *CustomerSubscriptionDataRelationships) SetVersions(v AddressDataRelationshipsVersions) {
	o.Versions = &v
}

func (o CustomerSubscriptionDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerSubscriptionDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Customer) {
		toSerialize["customer"] = o.Customer
	}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	if !IsNil(o.Versions) {
		toSerialize["versions"] = o.Versions
	}
	return toSerialize, nil
}

type NullableCustomerSubscriptionDataRelationships struct {
	value *CustomerSubscriptionDataRelationships
	isSet bool
}

func (v NullableCustomerSubscriptionDataRelationships) Get() *CustomerSubscriptionDataRelationships {
	return v.value
}

func (v *NullableCustomerSubscriptionDataRelationships) Set(val *CustomerSubscriptionDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerSubscriptionDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerSubscriptionDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerSubscriptionDataRelationships(val *CustomerSubscriptionDataRelationships) *NullableCustomerSubscriptionDataRelationships {
	return &NullableCustomerSubscriptionDataRelationships{value: val, isSet: true}
}

func (v NullableCustomerSubscriptionDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerSubscriptionDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
