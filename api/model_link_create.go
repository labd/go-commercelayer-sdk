/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the LinkCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LinkCreate{}

// LinkCreate struct for LinkCreate
type LinkCreate struct {
	Data LinkCreateData `json:"data"`
}

// NewLinkCreate instantiates a new LinkCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkCreate(data LinkCreateData) *LinkCreate {
	this := LinkCreate{}
	this.Data = data
	return &this
}

// NewLinkCreateWithDefaults instantiates a new LinkCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkCreateWithDefaults() *LinkCreate {
	this := LinkCreate{}
	return &this
}

// GetData returns the Data field value
func (o *LinkCreate) GetData() LinkCreateData {
	if o == nil {
		var ret LinkCreateData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *LinkCreate) GetDataOk() (*LinkCreateData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *LinkCreate) SetData(v LinkCreateData) {
	o.Data = v
}

func (o LinkCreate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LinkCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullableLinkCreate struct {
	value *LinkCreate
	isSet bool
}

func (v NullableLinkCreate) Get() *LinkCreate {
	return v.value
}

func (v *NullableLinkCreate) Set(val *LinkCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkCreate(val *LinkCreate) *NullableLinkCreate {
	return &NullableLinkCreate{value: val, isSet: true}
}

func (v NullableLinkCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
