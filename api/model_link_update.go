/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the LinkUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LinkUpdate{}

// LinkUpdate struct for LinkUpdate
type LinkUpdate struct {
	Data LinkUpdateData `json:"data"`
}

// NewLinkUpdate instantiates a new LinkUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkUpdate(data LinkUpdateData) *LinkUpdate {
	this := LinkUpdate{}
	this.Data = data
	return &this
}

// NewLinkUpdateWithDefaults instantiates a new LinkUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkUpdateWithDefaults() *LinkUpdate {
	this := LinkUpdate{}
	return &this
}

// GetData returns the Data field value
func (o *LinkUpdate) GetData() LinkUpdateData {
	if o == nil {
		var ret LinkUpdateData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *LinkUpdate) GetDataOk() (*LinkUpdateData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *LinkUpdate) SetData(v LinkUpdateData) {
	o.Data = v
}

func (o LinkUpdate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LinkUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullableLinkUpdate struct {
	value *LinkUpdate
	isSet bool
}

func (v NullableLinkUpdate) Get() *LinkUpdate {
	return v.value
}

func (v *NullableLinkUpdate) Set(val *LinkUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkUpdate(val *LinkUpdate) *NullableLinkUpdate {
	return &NullableLinkUpdate{value: val, isSet: true}
}

func (v NullableLinkUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
