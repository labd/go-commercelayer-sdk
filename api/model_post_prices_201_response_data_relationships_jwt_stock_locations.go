/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the POSTPrices201ResponseDataRelationshipsJwtStockLocations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &POSTPrices201ResponseDataRelationshipsJwtStockLocations{}

// POSTPrices201ResponseDataRelationshipsJwtStockLocations struct for POSTPrices201ResponseDataRelationshipsJwtStockLocations
type POSTPrices201ResponseDataRelationshipsJwtStockLocations struct {
	Links *POSTAddresses201ResponseDataRelationshipsGeocoderLinks      `json:"links,omitempty"`
	Data  *POSTPrices201ResponseDataRelationshipsJwtStockLocationsData `json:"data,omitempty"`
}

// NewPOSTPrices201ResponseDataRelationshipsJwtStockLocations instantiates a new POSTPrices201ResponseDataRelationshipsJwtStockLocations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPOSTPrices201ResponseDataRelationshipsJwtStockLocations() *POSTPrices201ResponseDataRelationshipsJwtStockLocations {
	this := POSTPrices201ResponseDataRelationshipsJwtStockLocations{}
	return &this
}

// NewPOSTPrices201ResponseDataRelationshipsJwtStockLocationsWithDefaults instantiates a new POSTPrices201ResponseDataRelationshipsJwtStockLocations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPOSTPrices201ResponseDataRelationshipsJwtStockLocationsWithDefaults() *POSTPrices201ResponseDataRelationshipsJwtStockLocations {
	this := POSTPrices201ResponseDataRelationshipsJwtStockLocations{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *POSTPrices201ResponseDataRelationshipsJwtStockLocations) GetLinks() POSTAddresses201ResponseDataRelationshipsGeocoderLinks {
	if o == nil || IsNil(o.Links) {
		var ret POSTAddresses201ResponseDataRelationshipsGeocoderLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *POSTPrices201ResponseDataRelationshipsJwtStockLocations) GetLinksOk() (*POSTAddresses201ResponseDataRelationshipsGeocoderLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *POSTPrices201ResponseDataRelationshipsJwtStockLocations) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given POSTAddresses201ResponseDataRelationshipsGeocoderLinks and assigns it to the Links field.
func (o *POSTPrices201ResponseDataRelationshipsJwtStockLocations) SetLinks(v POSTAddresses201ResponseDataRelationshipsGeocoderLinks) {
	o.Links = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *POSTPrices201ResponseDataRelationshipsJwtStockLocations) GetData() POSTPrices201ResponseDataRelationshipsJwtStockLocationsData {
	if o == nil || IsNil(o.Data) {
		var ret POSTPrices201ResponseDataRelationshipsJwtStockLocationsData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *POSTPrices201ResponseDataRelationshipsJwtStockLocations) GetDataOk() (*POSTPrices201ResponseDataRelationshipsJwtStockLocationsData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *POSTPrices201ResponseDataRelationshipsJwtStockLocations) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given POSTPrices201ResponseDataRelationshipsJwtStockLocationsData and assigns it to the Data field.
func (o *POSTPrices201ResponseDataRelationshipsJwtStockLocations) SetData(v POSTPrices201ResponseDataRelationshipsJwtStockLocationsData) {
	o.Data = &v
}

func (o POSTPrices201ResponseDataRelationshipsJwtStockLocations) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o POSTPrices201ResponseDataRelationshipsJwtStockLocations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullablePOSTPrices201ResponseDataRelationshipsJwtStockLocations struct {
	value *POSTPrices201ResponseDataRelationshipsJwtStockLocations
	isSet bool
}

func (v NullablePOSTPrices201ResponseDataRelationshipsJwtStockLocations) Get() *POSTPrices201ResponseDataRelationshipsJwtStockLocations {
	return v.value
}

func (v *NullablePOSTPrices201ResponseDataRelationshipsJwtStockLocations) Set(val *POSTPrices201ResponseDataRelationshipsJwtStockLocations) {
	v.value = val
	v.isSet = true
}

func (v NullablePOSTPrices201ResponseDataRelationshipsJwtStockLocations) IsSet() bool {
	return v.isSet
}

func (v *NullablePOSTPrices201ResponseDataRelationshipsJwtStockLocations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePOSTPrices201ResponseDataRelationshipsJwtStockLocations(val *POSTPrices201ResponseDataRelationshipsJwtStockLocations) *NullablePOSTPrices201ResponseDataRelationshipsJwtStockLocations {
	return &NullablePOSTPrices201ResponseDataRelationshipsJwtStockLocations{value: val, isSet: true}
}

func (v NullablePOSTPrices201ResponseDataRelationshipsJwtStockLocations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePOSTPrices201ResponseDataRelationshipsJwtStockLocations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
