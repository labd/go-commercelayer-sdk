/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PATCHLinksLinkId200ResponseDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PATCHLinksLinkId200ResponseDataAttributes{}

// PATCHLinksLinkId200ResponseDataAttributes struct for PATCHLinksLinkId200ResponseDataAttributes
type PATCHLinksLinkId200ResponseDataAttributes struct {
	// The link internal name.
	Name interface{} `json:"name,omitempty"`
	// The link application client id, used to fetch JWT.
	ClientId interface{} `json:"client_id,omitempty"`
	// The link application scope, used to fetch JWT.
	Scope interface{} `json:"scope,omitempty"`
	// The activation date/time of this link.
	StartsAt interface{} `json:"starts_at,omitempty"`
	// The expiration date/time of this link (must be after starts_at).
	ExpiresAt interface{} `json:"expires_at,omitempty"`
	// The link URL second level domain.
	Domain interface{} `json:"domain,omitempty"`
	// The link params to be passed in URL the query string.
	Params interface{} `json:"params,omitempty"`
	// Send this attribute if you want to mark this resource as disabled.
	Disable interface{} `json:"_disable,omitempty"`
	// Send this attribute if you want to mark this resource as enabled.
	Enable interface{} `json:"_enable,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference interface{} `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code.
	ReferenceOrigin interface{} `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata interface{} `json:"metadata,omitempty"`
}

// NewPATCHLinksLinkId200ResponseDataAttributes instantiates a new PATCHLinksLinkId200ResponseDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPATCHLinksLinkId200ResponseDataAttributes() *PATCHLinksLinkId200ResponseDataAttributes {
	this := PATCHLinksLinkId200ResponseDataAttributes{}
	return &this
}

// NewPATCHLinksLinkId200ResponseDataAttributesWithDefaults instantiates a new PATCHLinksLinkId200ResponseDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPATCHLinksLinkId200ResponseDataAttributesWithDefaults() *PATCHLinksLinkId200ResponseDataAttributes {
	this := PATCHLinksLinkId200ResponseDataAttributes{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetName() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetNameOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return &o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PATCHLinksLinkId200ResponseDataAttributes) HasName() bool {
	if o != nil && IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given interface{} and assigns it to the Name field.
func (o *PATCHLinksLinkId200ResponseDataAttributes) SetName(v interface{}) {
	o.Name = v
}

// GetClientId returns the ClientId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetClientId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetClientIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return &o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *PATCHLinksLinkId200ResponseDataAttributes) HasClientId() bool {
	if o != nil && IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given interface{} and assigns it to the ClientId field.
func (o *PATCHLinksLinkId200ResponseDataAttributes) SetClientId(v interface{}) {
	o.ClientId = v
}

// GetScope returns the Scope field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetScope() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetScopeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return &o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *PATCHLinksLinkId200ResponseDataAttributes) HasScope() bool {
	if o != nil && IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given interface{} and assigns it to the Scope field.
func (o *PATCHLinksLinkId200ResponseDataAttributes) SetScope(v interface{}) {
	o.Scope = v
}

// GetStartsAt returns the StartsAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetStartsAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.StartsAt
}

// GetStartsAtOk returns a tuple with the StartsAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetStartsAtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.StartsAt) {
		return nil, false
	}
	return &o.StartsAt, true
}

// HasStartsAt returns a boolean if a field has been set.
func (o *PATCHLinksLinkId200ResponseDataAttributes) HasStartsAt() bool {
	if o != nil && IsNil(o.StartsAt) {
		return true
	}

	return false
}

// SetStartsAt gets a reference to the given interface{} and assigns it to the StartsAt field.
func (o *PATCHLinksLinkId200ResponseDataAttributes) SetStartsAt(v interface{}) {
	o.StartsAt = v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetExpiresAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetExpiresAtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return &o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *PATCHLinksLinkId200ResponseDataAttributes) HasExpiresAt() bool {
	if o != nil && IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given interface{} and assigns it to the ExpiresAt field.
func (o *PATCHLinksLinkId200ResponseDataAttributes) SetExpiresAt(v interface{}) {
	o.ExpiresAt = v
}

// GetDomain returns the Domain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetDomain() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetDomainOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return &o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *PATCHLinksLinkId200ResponseDataAttributes) HasDomain() bool {
	if o != nil && IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given interface{} and assigns it to the Domain field.
func (o *PATCHLinksLinkId200ResponseDataAttributes) SetDomain(v interface{}) {
	o.Domain = v
}

// GetParams returns the Params field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetParams() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetParamsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Params) {
		return nil, false
	}
	return &o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *PATCHLinksLinkId200ResponseDataAttributes) HasParams() bool {
	if o != nil && IsNil(o.Params) {
		return true
	}

	return false
}

// SetParams gets a reference to the given interface{} and assigns it to the Params field.
func (o *PATCHLinksLinkId200ResponseDataAttributes) SetParams(v interface{}) {
	o.Params = v
}

// GetDisable returns the Disable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetDisable() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Disable
}

// GetDisableOk returns a tuple with the Disable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetDisableOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Disable) {
		return nil, false
	}
	return &o.Disable, true
}

// HasDisable returns a boolean if a field has been set.
func (o *PATCHLinksLinkId200ResponseDataAttributes) HasDisable() bool {
	if o != nil && IsNil(o.Disable) {
		return true
	}

	return false
}

// SetDisable gets a reference to the given interface{} and assigns it to the Disable field.
func (o *PATCHLinksLinkId200ResponseDataAttributes) SetDisable(v interface{}) {
	o.Disable = v
}

// GetEnable returns the Enable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetEnable() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetEnableOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return &o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *PATCHLinksLinkId200ResponseDataAttributes) HasEnable() bool {
	if o != nil && IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given interface{} and assigns it to the Enable field.
func (o *PATCHLinksLinkId200ResponseDataAttributes) SetEnable(v interface{}) {
	o.Enable = v
}

// GetReference returns the Reference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetReferenceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return &o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *PATCHLinksLinkId200ResponseDataAttributes) HasReference() bool {
	if o != nil && IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given interface{} and assigns it to the Reference field.
func (o *PATCHLinksLinkId200ResponseDataAttributes) SetReference(v interface{}) {
	o.Reference = v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetReferenceOrigin() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetReferenceOriginOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReferenceOrigin) {
		return nil, false
	}
	return &o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *PATCHLinksLinkId200ResponseDataAttributes) HasReferenceOrigin() bool {
	if o != nil && IsNil(o.ReferenceOrigin) {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given interface{} and assigns it to the ReferenceOrigin field.
func (o *PATCHLinksLinkId200ResponseDataAttributes) SetReferenceOrigin(v interface{}) {
	o.ReferenceOrigin = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHLinksLinkId200ResponseDataAttributes) GetMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PATCHLinksLinkId200ResponseDataAttributes) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given interface{} and assigns it to the Metadata field.
func (o *PATCHLinksLinkId200ResponseDataAttributes) SetMetadata(v interface{}) {
	o.Metadata = v
}

func (o PATCHLinksLinkId200ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PATCHLinksLinkId200ResponseDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	if o.StartsAt != nil {
		toSerialize["starts_at"] = o.StartsAt
	}
	if o.ExpiresAt != nil {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if o.Domain != nil {
		toSerialize["domain"] = o.Domain
	}
	if o.Params != nil {
		toSerialize["params"] = o.Params
	}
	if o.Disable != nil {
		toSerialize["_disable"] = o.Disable
	}
	if o.Enable != nil {
		toSerialize["_enable"] = o.Enable
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullablePATCHLinksLinkId200ResponseDataAttributes struct {
	value *PATCHLinksLinkId200ResponseDataAttributes
	isSet bool
}

func (v NullablePATCHLinksLinkId200ResponseDataAttributes) Get() *PATCHLinksLinkId200ResponseDataAttributes {
	return v.value
}

func (v *NullablePATCHLinksLinkId200ResponseDataAttributes) Set(val *PATCHLinksLinkId200ResponseDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePATCHLinksLinkId200ResponseDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePATCHLinksLinkId200ResponseDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePATCHLinksLinkId200ResponseDataAttributes(val *PATCHLinksLinkId200ResponseDataAttributes) *NullablePATCHLinksLinkId200ResponseDataAttributes {
	return &NullablePATCHLinksLinkId200ResponseDataAttributes{value: val, isSet: true}
}

func (v NullablePATCHLinksLinkId200ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePATCHLinksLinkId200ResponseDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
