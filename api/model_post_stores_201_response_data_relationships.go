/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the POSTStores201ResponseDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &POSTStores201ResponseDataRelationships{}

// POSTStores201ResponseDataRelationships struct for POSTStores201ResponseDataRelationships
type POSTStores201ResponseDataRelationships struct {
	Market         *POSTBundles201ResponseDataRelationshipsMarket                  `json:"market,omitempty"`
	Merchant       *POSTMarkets201ResponseDataRelationshipsMerchant                `json:"merchant,omitempty"`
	StockLocation  *POSTDeliveryLeadTimes201ResponseDataRelationshipsStockLocation `json:"stock_location,omitempty"`
	Orders         *POSTCustomers201ResponseDataRelationshipsOrders                `json:"orders,omitempty"`
	PaymentMethods *POSTAdyenGateways201ResponseDataRelationshipsPaymentMethods    `json:"payment_methods,omitempty"`
	Events         *POSTAddresses201ResponseDataRelationshipsEvents                `json:"events,omitempty"`
	Versions       *POSTAddresses201ResponseDataRelationshipsVersions              `json:"versions,omitempty"`
}

// NewPOSTStores201ResponseDataRelationships instantiates a new POSTStores201ResponseDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPOSTStores201ResponseDataRelationships() *POSTStores201ResponseDataRelationships {
	this := POSTStores201ResponseDataRelationships{}
	return &this
}

// NewPOSTStores201ResponseDataRelationshipsWithDefaults instantiates a new POSTStores201ResponseDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPOSTStores201ResponseDataRelationshipsWithDefaults() *POSTStores201ResponseDataRelationships {
	this := POSTStores201ResponseDataRelationships{}
	return &this
}

// GetMarket returns the Market field value if set, zero value otherwise.
func (o *POSTStores201ResponseDataRelationships) GetMarket() POSTBundles201ResponseDataRelationshipsMarket {
	if o == nil || IsNil(o.Market) {
		var ret POSTBundles201ResponseDataRelationshipsMarket
		return ret
	}
	return *o.Market
}

// GetMarketOk returns a tuple with the Market field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *POSTStores201ResponseDataRelationships) GetMarketOk() (*POSTBundles201ResponseDataRelationshipsMarket, bool) {
	if o == nil || IsNil(o.Market) {
		return nil, false
	}
	return o.Market, true
}

// HasMarket returns a boolean if a field has been set.
func (o *POSTStores201ResponseDataRelationships) HasMarket() bool {
	if o != nil && !IsNil(o.Market) {
		return true
	}

	return false
}

// SetMarket gets a reference to the given POSTBundles201ResponseDataRelationshipsMarket and assigns it to the Market field.
func (o *POSTStores201ResponseDataRelationships) SetMarket(v POSTBundles201ResponseDataRelationshipsMarket) {
	o.Market = &v
}

// GetMerchant returns the Merchant field value if set, zero value otherwise.
func (o *POSTStores201ResponseDataRelationships) GetMerchant() POSTMarkets201ResponseDataRelationshipsMerchant {
	if o == nil || IsNil(o.Merchant) {
		var ret POSTMarkets201ResponseDataRelationshipsMerchant
		return ret
	}
	return *o.Merchant
}

// GetMerchantOk returns a tuple with the Merchant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *POSTStores201ResponseDataRelationships) GetMerchantOk() (*POSTMarkets201ResponseDataRelationshipsMerchant, bool) {
	if o == nil || IsNil(o.Merchant) {
		return nil, false
	}
	return o.Merchant, true
}

// HasMerchant returns a boolean if a field has been set.
func (o *POSTStores201ResponseDataRelationships) HasMerchant() bool {
	if o != nil && !IsNil(o.Merchant) {
		return true
	}

	return false
}

// SetMerchant gets a reference to the given POSTMarkets201ResponseDataRelationshipsMerchant and assigns it to the Merchant field.
func (o *POSTStores201ResponseDataRelationships) SetMerchant(v POSTMarkets201ResponseDataRelationshipsMerchant) {
	o.Merchant = &v
}

// GetStockLocation returns the StockLocation field value if set, zero value otherwise.
func (o *POSTStores201ResponseDataRelationships) GetStockLocation() POSTDeliveryLeadTimes201ResponseDataRelationshipsStockLocation {
	if o == nil || IsNil(o.StockLocation) {
		var ret POSTDeliveryLeadTimes201ResponseDataRelationshipsStockLocation
		return ret
	}
	return *o.StockLocation
}

// GetStockLocationOk returns a tuple with the StockLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *POSTStores201ResponseDataRelationships) GetStockLocationOk() (*POSTDeliveryLeadTimes201ResponseDataRelationshipsStockLocation, bool) {
	if o == nil || IsNil(o.StockLocation) {
		return nil, false
	}
	return o.StockLocation, true
}

// HasStockLocation returns a boolean if a field has been set.
func (o *POSTStores201ResponseDataRelationships) HasStockLocation() bool {
	if o != nil && !IsNil(o.StockLocation) {
		return true
	}

	return false
}

// SetStockLocation gets a reference to the given POSTDeliveryLeadTimes201ResponseDataRelationshipsStockLocation and assigns it to the StockLocation field.
func (o *POSTStores201ResponseDataRelationships) SetStockLocation(v POSTDeliveryLeadTimes201ResponseDataRelationshipsStockLocation) {
	o.StockLocation = &v
}

// GetOrders returns the Orders field value if set, zero value otherwise.
func (o *POSTStores201ResponseDataRelationships) GetOrders() POSTCustomers201ResponseDataRelationshipsOrders {
	if o == nil || IsNil(o.Orders) {
		var ret POSTCustomers201ResponseDataRelationshipsOrders
		return ret
	}
	return *o.Orders
}

// GetOrdersOk returns a tuple with the Orders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *POSTStores201ResponseDataRelationships) GetOrdersOk() (*POSTCustomers201ResponseDataRelationshipsOrders, bool) {
	if o == nil || IsNil(o.Orders) {
		return nil, false
	}
	return o.Orders, true
}

// HasOrders returns a boolean if a field has been set.
func (o *POSTStores201ResponseDataRelationships) HasOrders() bool {
	if o != nil && !IsNil(o.Orders) {
		return true
	}

	return false
}

// SetOrders gets a reference to the given POSTCustomers201ResponseDataRelationshipsOrders and assigns it to the Orders field.
func (o *POSTStores201ResponseDataRelationships) SetOrders(v POSTCustomers201ResponseDataRelationshipsOrders) {
	o.Orders = &v
}

// GetPaymentMethods returns the PaymentMethods field value if set, zero value otherwise.
func (o *POSTStores201ResponseDataRelationships) GetPaymentMethods() POSTAdyenGateways201ResponseDataRelationshipsPaymentMethods {
	if o == nil || IsNil(o.PaymentMethods) {
		var ret POSTAdyenGateways201ResponseDataRelationshipsPaymentMethods
		return ret
	}
	return *o.PaymentMethods
}

// GetPaymentMethodsOk returns a tuple with the PaymentMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *POSTStores201ResponseDataRelationships) GetPaymentMethodsOk() (*POSTAdyenGateways201ResponseDataRelationshipsPaymentMethods, bool) {
	if o == nil || IsNil(o.PaymentMethods) {
		return nil, false
	}
	return o.PaymentMethods, true
}

// HasPaymentMethods returns a boolean if a field has been set.
func (o *POSTStores201ResponseDataRelationships) HasPaymentMethods() bool {
	if o != nil && !IsNil(o.PaymentMethods) {
		return true
	}

	return false
}

// SetPaymentMethods gets a reference to the given POSTAdyenGateways201ResponseDataRelationshipsPaymentMethods and assigns it to the PaymentMethods field.
func (o *POSTStores201ResponseDataRelationships) SetPaymentMethods(v POSTAdyenGateways201ResponseDataRelationshipsPaymentMethods) {
	o.PaymentMethods = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *POSTStores201ResponseDataRelationships) GetEvents() POSTAddresses201ResponseDataRelationshipsEvents {
	if o == nil || IsNil(o.Events) {
		var ret POSTAddresses201ResponseDataRelationshipsEvents
		return ret
	}
	return *o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *POSTStores201ResponseDataRelationships) GetEventsOk() (*POSTAddresses201ResponseDataRelationshipsEvents, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *POSTStores201ResponseDataRelationships) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given POSTAddresses201ResponseDataRelationshipsEvents and assigns it to the Events field.
func (o *POSTStores201ResponseDataRelationships) SetEvents(v POSTAddresses201ResponseDataRelationshipsEvents) {
	o.Events = &v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *POSTStores201ResponseDataRelationships) GetVersions() POSTAddresses201ResponseDataRelationshipsVersions {
	if o == nil || IsNil(o.Versions) {
		var ret POSTAddresses201ResponseDataRelationshipsVersions
		return ret
	}
	return *o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *POSTStores201ResponseDataRelationships) GetVersionsOk() (*POSTAddresses201ResponseDataRelationshipsVersions, bool) {
	if o == nil || IsNil(o.Versions) {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *POSTStores201ResponseDataRelationships) HasVersions() bool {
	if o != nil && !IsNil(o.Versions) {
		return true
	}

	return false
}

// SetVersions gets a reference to the given POSTAddresses201ResponseDataRelationshipsVersions and assigns it to the Versions field.
func (o *POSTStores201ResponseDataRelationships) SetVersions(v POSTAddresses201ResponseDataRelationshipsVersions) {
	o.Versions = &v
}

func (o POSTStores201ResponseDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o POSTStores201ResponseDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Market) {
		toSerialize["market"] = o.Market
	}
	if !IsNil(o.Merchant) {
		toSerialize["merchant"] = o.Merchant
	}
	if !IsNil(o.StockLocation) {
		toSerialize["stock_location"] = o.StockLocation
	}
	if !IsNil(o.Orders) {
		toSerialize["orders"] = o.Orders
	}
	if !IsNil(o.PaymentMethods) {
		toSerialize["payment_methods"] = o.PaymentMethods
	}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	if !IsNil(o.Versions) {
		toSerialize["versions"] = o.Versions
	}
	return toSerialize, nil
}

type NullablePOSTStores201ResponseDataRelationships struct {
	value *POSTStores201ResponseDataRelationships
	isSet bool
}

func (v NullablePOSTStores201ResponseDataRelationships) Get() *POSTStores201ResponseDataRelationships {
	return v.value
}

func (v *NullablePOSTStores201ResponseDataRelationships) Set(val *POSTStores201ResponseDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullablePOSTStores201ResponseDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullablePOSTStores201ResponseDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePOSTStores201ResponseDataRelationships(val *POSTStores201ResponseDataRelationships) *NullablePOSTStores201ResponseDataRelationships {
	return &NullablePOSTStores201ResponseDataRelationships{value: val, isSet: true}
}

func (v NullablePOSTStores201ResponseDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePOSTStores201ResponseDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
