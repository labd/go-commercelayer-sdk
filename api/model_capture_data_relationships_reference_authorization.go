/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the CaptureDataRelationshipsReferenceAuthorization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CaptureDataRelationshipsReferenceAuthorization{}

// CaptureDataRelationshipsReferenceAuthorization struct for CaptureDataRelationshipsReferenceAuthorization
type CaptureDataRelationshipsReferenceAuthorization struct {
	Data *CaptureDataRelationshipsReferenceAuthorizationData `json:"data,omitempty"`
}

// NewCaptureDataRelationshipsReferenceAuthorization instantiates a new CaptureDataRelationshipsReferenceAuthorization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCaptureDataRelationshipsReferenceAuthorization() *CaptureDataRelationshipsReferenceAuthorization {
	this := CaptureDataRelationshipsReferenceAuthorization{}
	return &this
}

// NewCaptureDataRelationshipsReferenceAuthorizationWithDefaults instantiates a new CaptureDataRelationshipsReferenceAuthorization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCaptureDataRelationshipsReferenceAuthorizationWithDefaults() *CaptureDataRelationshipsReferenceAuthorization {
	this := CaptureDataRelationshipsReferenceAuthorization{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *CaptureDataRelationshipsReferenceAuthorization) GetData() CaptureDataRelationshipsReferenceAuthorizationData {
	if o == nil || IsNil(o.Data) {
		var ret CaptureDataRelationshipsReferenceAuthorizationData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaptureDataRelationshipsReferenceAuthorization) GetDataOk() (*CaptureDataRelationshipsReferenceAuthorizationData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *CaptureDataRelationshipsReferenceAuthorization) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given CaptureDataRelationshipsReferenceAuthorizationData and assigns it to the Data field.
func (o *CaptureDataRelationshipsReferenceAuthorization) SetData(v CaptureDataRelationshipsReferenceAuthorizationData) {
	o.Data = &v
}

func (o CaptureDataRelationshipsReferenceAuthorization) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CaptureDataRelationshipsReferenceAuthorization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableCaptureDataRelationshipsReferenceAuthorization struct {
	value *CaptureDataRelationshipsReferenceAuthorization
	isSet bool
}

func (v NullableCaptureDataRelationshipsReferenceAuthorization) Get() *CaptureDataRelationshipsReferenceAuthorization {
	return v.value
}

func (v *NullableCaptureDataRelationshipsReferenceAuthorization) Set(val *CaptureDataRelationshipsReferenceAuthorization) {
	v.value = val
	v.isSet = true
}

func (v NullableCaptureDataRelationshipsReferenceAuthorization) IsSet() bool {
	return v.isSet
}

func (v *NullableCaptureDataRelationshipsReferenceAuthorization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCaptureDataRelationshipsReferenceAuthorization(val *CaptureDataRelationshipsReferenceAuthorization) *NullableCaptureDataRelationshipsReferenceAuthorization {
	return &NullableCaptureDataRelationshipsReferenceAuthorization{value: val, isSet: true}
}

func (v NullableCaptureDataRelationshipsReferenceAuthorization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCaptureDataRelationshipsReferenceAuthorization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
