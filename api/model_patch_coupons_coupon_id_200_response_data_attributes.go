/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PATCHCouponsCouponId200ResponseDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PATCHCouponsCouponId200ResponseDataAttributes{}

// PATCHCouponsCouponId200ResponseDataAttributes struct for PATCHCouponsCouponId200ResponseDataAttributes
type PATCHCouponsCouponId200ResponseDataAttributes struct {
	// The coupon code, that uniquely identifies the coupon within the promotion rule.
	Code interface{} `json:"code,omitempty"`
	// Indicates if the coupon can be used just once per customer.
	CustomerSingleUse interface{} `json:"customer_single_use,omitempty"`
	// The total number of times this coupon can be used.
	UsageLimit interface{} `json:"usage_limit,omitempty"`
	// The email address of the associated recipient. When creating or updating a coupon, this is a shortcut to find or create the associated recipient by email.
	RecipientEmail interface{} `json:"recipient_email,omitempty"`
	// Time at which the coupon will expire.
	ExpiresAt interface{} `json:"expires_at,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference interface{} `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code.
	ReferenceOrigin interface{} `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata interface{} `json:"metadata,omitempty"`
}

// NewPATCHCouponsCouponId200ResponseDataAttributes instantiates a new PATCHCouponsCouponId200ResponseDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPATCHCouponsCouponId200ResponseDataAttributes() *PATCHCouponsCouponId200ResponseDataAttributes {
	this := PATCHCouponsCouponId200ResponseDataAttributes{}
	return &this
}

// NewPATCHCouponsCouponId200ResponseDataAttributesWithDefaults instantiates a new PATCHCouponsCouponId200ResponseDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPATCHCouponsCouponId200ResponseDataAttributesWithDefaults() *PATCHCouponsCouponId200ResponseDataAttributes {
	this := PATCHCouponsCouponId200ResponseDataAttributes{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHCouponsCouponId200ResponseDataAttributes) GetCode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHCouponsCouponId200ResponseDataAttributes) GetCodeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return &o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *PATCHCouponsCouponId200ResponseDataAttributes) HasCode() bool {
	if o != nil && IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given interface{} and assigns it to the Code field.
func (o *PATCHCouponsCouponId200ResponseDataAttributes) SetCode(v interface{}) {
	o.Code = v
}

// GetCustomerSingleUse returns the CustomerSingleUse field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHCouponsCouponId200ResponseDataAttributes) GetCustomerSingleUse() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CustomerSingleUse
}

// GetCustomerSingleUseOk returns a tuple with the CustomerSingleUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHCouponsCouponId200ResponseDataAttributes) GetCustomerSingleUseOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CustomerSingleUse) {
		return nil, false
	}
	return &o.CustomerSingleUse, true
}

// HasCustomerSingleUse returns a boolean if a field has been set.
func (o *PATCHCouponsCouponId200ResponseDataAttributes) HasCustomerSingleUse() bool {
	if o != nil && IsNil(o.CustomerSingleUse) {
		return true
	}

	return false
}

// SetCustomerSingleUse gets a reference to the given interface{} and assigns it to the CustomerSingleUse field.
func (o *PATCHCouponsCouponId200ResponseDataAttributes) SetCustomerSingleUse(v interface{}) {
	o.CustomerSingleUse = v
}

// GetUsageLimit returns the UsageLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHCouponsCouponId200ResponseDataAttributes) GetUsageLimit() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.UsageLimit
}

// GetUsageLimitOk returns a tuple with the UsageLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHCouponsCouponId200ResponseDataAttributes) GetUsageLimitOk() (*interface{}, bool) {
	if o == nil || IsNil(o.UsageLimit) {
		return nil, false
	}
	return &o.UsageLimit, true
}

// HasUsageLimit returns a boolean if a field has been set.
func (o *PATCHCouponsCouponId200ResponseDataAttributes) HasUsageLimit() bool {
	if o != nil && IsNil(o.UsageLimit) {
		return true
	}

	return false
}

// SetUsageLimit gets a reference to the given interface{} and assigns it to the UsageLimit field.
func (o *PATCHCouponsCouponId200ResponseDataAttributes) SetUsageLimit(v interface{}) {
	o.UsageLimit = v
}

// GetRecipientEmail returns the RecipientEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHCouponsCouponId200ResponseDataAttributes) GetRecipientEmail() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.RecipientEmail
}

// GetRecipientEmailOk returns a tuple with the RecipientEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHCouponsCouponId200ResponseDataAttributes) GetRecipientEmailOk() (*interface{}, bool) {
	if o == nil || IsNil(o.RecipientEmail) {
		return nil, false
	}
	return &o.RecipientEmail, true
}

// HasRecipientEmail returns a boolean if a field has been set.
func (o *PATCHCouponsCouponId200ResponseDataAttributes) HasRecipientEmail() bool {
	if o != nil && IsNil(o.RecipientEmail) {
		return true
	}

	return false
}

// SetRecipientEmail gets a reference to the given interface{} and assigns it to the RecipientEmail field.
func (o *PATCHCouponsCouponId200ResponseDataAttributes) SetRecipientEmail(v interface{}) {
	o.RecipientEmail = v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHCouponsCouponId200ResponseDataAttributes) GetExpiresAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHCouponsCouponId200ResponseDataAttributes) GetExpiresAtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return &o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *PATCHCouponsCouponId200ResponseDataAttributes) HasExpiresAt() bool {
	if o != nil && IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given interface{} and assigns it to the ExpiresAt field.
func (o *PATCHCouponsCouponId200ResponseDataAttributes) SetExpiresAt(v interface{}) {
	o.ExpiresAt = v
}

// GetReference returns the Reference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHCouponsCouponId200ResponseDataAttributes) GetReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHCouponsCouponId200ResponseDataAttributes) GetReferenceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return &o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *PATCHCouponsCouponId200ResponseDataAttributes) HasReference() bool {
	if o != nil && IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given interface{} and assigns it to the Reference field.
func (o *PATCHCouponsCouponId200ResponseDataAttributes) SetReference(v interface{}) {
	o.Reference = v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHCouponsCouponId200ResponseDataAttributes) GetReferenceOrigin() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHCouponsCouponId200ResponseDataAttributes) GetReferenceOriginOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReferenceOrigin) {
		return nil, false
	}
	return &o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *PATCHCouponsCouponId200ResponseDataAttributes) HasReferenceOrigin() bool {
	if o != nil && IsNil(o.ReferenceOrigin) {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given interface{} and assigns it to the ReferenceOrigin field.
func (o *PATCHCouponsCouponId200ResponseDataAttributes) SetReferenceOrigin(v interface{}) {
	o.ReferenceOrigin = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHCouponsCouponId200ResponseDataAttributes) GetMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHCouponsCouponId200ResponseDataAttributes) GetMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PATCHCouponsCouponId200ResponseDataAttributes) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given interface{} and assigns it to the Metadata field.
func (o *PATCHCouponsCouponId200ResponseDataAttributes) SetMetadata(v interface{}) {
	o.Metadata = v
}

func (o PATCHCouponsCouponId200ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PATCHCouponsCouponId200ResponseDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.CustomerSingleUse != nil {
		toSerialize["customer_single_use"] = o.CustomerSingleUse
	}
	if o.UsageLimit != nil {
		toSerialize["usage_limit"] = o.UsageLimit
	}
	if o.RecipientEmail != nil {
		toSerialize["recipient_email"] = o.RecipientEmail
	}
	if o.ExpiresAt != nil {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullablePATCHCouponsCouponId200ResponseDataAttributes struct {
	value *PATCHCouponsCouponId200ResponseDataAttributes
	isSet bool
}

func (v NullablePATCHCouponsCouponId200ResponseDataAttributes) Get() *PATCHCouponsCouponId200ResponseDataAttributes {
	return v.value
}

func (v *NullablePATCHCouponsCouponId200ResponseDataAttributes) Set(val *PATCHCouponsCouponId200ResponseDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePATCHCouponsCouponId200ResponseDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePATCHCouponsCouponId200ResponseDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePATCHCouponsCouponId200ResponseDataAttributes(val *PATCHCouponsCouponId200ResponseDataAttributes) *NullablePATCHCouponsCouponId200ResponseDataAttributes {
	return &NullablePATCHCouponsCouponId200ResponseDataAttributes{value: val, isSet: true}
}

func (v NullablePATCHCouponsCouponId200ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePATCHCouponsCouponId200ResponseDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
