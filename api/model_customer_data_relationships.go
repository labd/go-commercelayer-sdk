/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the CustomerDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerDataRelationships{}

// CustomerDataRelationships struct for CustomerDataRelationships
type CustomerDataRelationships struct {
	CustomerGroup          *CustomerDataRelationshipsCustomerGroup          `json:"customer_group,omitempty"`
	CustomerAddresses      *CustomerDataRelationshipsCustomerAddresses      `json:"customer_addresses,omitempty"`
	CustomerPaymentSources *CustomerDataRelationshipsCustomerPaymentSources `json:"customer_payment_sources,omitempty"`
	CustomerSubscriptions  *CustomerDataRelationshipsCustomerSubscriptions  `json:"customer_subscriptions,omitempty"`
	Orders                 *AdyenPaymentDataRelationshipsOrder              `json:"orders,omitempty"`
	OrderSubscriptions     *CustomerDataRelationshipsOrderSubscriptions     `json:"order_subscriptions,omitempty"`
	Returns                *CaptureDataRelationshipsReturn                  `json:"returns,omitempty"`
	SkuLists               *BundleDataRelationshipsSkuList                  `json:"sku_lists,omitempty"`
	Attachments            *AuthorizationDataRelationshipsAttachments       `json:"attachments,omitempty"`
	Events                 *AddressDataRelationshipsEvents                  `json:"events,omitempty"`
	Tags                   *AddressDataRelationshipsTags                    `json:"tags,omitempty"`
}

// NewCustomerDataRelationships instantiates a new CustomerDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerDataRelationships() *CustomerDataRelationships {
	this := CustomerDataRelationships{}
	return &this
}

// NewCustomerDataRelationshipsWithDefaults instantiates a new CustomerDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerDataRelationshipsWithDefaults() *CustomerDataRelationships {
	this := CustomerDataRelationships{}
	return &this
}

// GetCustomerGroup returns the CustomerGroup field value if set, zero value otherwise.
func (o *CustomerDataRelationships) GetCustomerGroup() CustomerDataRelationshipsCustomerGroup {
	if o == nil || IsNil(o.CustomerGroup) {
		var ret CustomerDataRelationshipsCustomerGroup
		return ret
	}
	return *o.CustomerGroup
}

// GetCustomerGroupOk returns a tuple with the CustomerGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataRelationships) GetCustomerGroupOk() (*CustomerDataRelationshipsCustomerGroup, bool) {
	if o == nil || IsNil(o.CustomerGroup) {
		return nil, false
	}
	return o.CustomerGroup, true
}

// HasCustomerGroup returns a boolean if a field has been set.
func (o *CustomerDataRelationships) HasCustomerGroup() bool {
	if o != nil && !IsNil(o.CustomerGroup) {
		return true
	}

	return false
}

// SetCustomerGroup gets a reference to the given CustomerDataRelationshipsCustomerGroup and assigns it to the CustomerGroup field.
func (o *CustomerDataRelationships) SetCustomerGroup(v CustomerDataRelationshipsCustomerGroup) {
	o.CustomerGroup = &v
}

// GetCustomerAddresses returns the CustomerAddresses field value if set, zero value otherwise.
func (o *CustomerDataRelationships) GetCustomerAddresses() CustomerDataRelationshipsCustomerAddresses {
	if o == nil || IsNil(o.CustomerAddresses) {
		var ret CustomerDataRelationshipsCustomerAddresses
		return ret
	}
	return *o.CustomerAddresses
}

// GetCustomerAddressesOk returns a tuple with the CustomerAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataRelationships) GetCustomerAddressesOk() (*CustomerDataRelationshipsCustomerAddresses, bool) {
	if o == nil || IsNil(o.CustomerAddresses) {
		return nil, false
	}
	return o.CustomerAddresses, true
}

// HasCustomerAddresses returns a boolean if a field has been set.
func (o *CustomerDataRelationships) HasCustomerAddresses() bool {
	if o != nil && !IsNil(o.CustomerAddresses) {
		return true
	}

	return false
}

// SetCustomerAddresses gets a reference to the given CustomerDataRelationshipsCustomerAddresses and assigns it to the CustomerAddresses field.
func (o *CustomerDataRelationships) SetCustomerAddresses(v CustomerDataRelationshipsCustomerAddresses) {
	o.CustomerAddresses = &v
}

// GetCustomerPaymentSources returns the CustomerPaymentSources field value if set, zero value otherwise.
func (o *CustomerDataRelationships) GetCustomerPaymentSources() CustomerDataRelationshipsCustomerPaymentSources {
	if o == nil || IsNil(o.CustomerPaymentSources) {
		var ret CustomerDataRelationshipsCustomerPaymentSources
		return ret
	}
	return *o.CustomerPaymentSources
}

// GetCustomerPaymentSourcesOk returns a tuple with the CustomerPaymentSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataRelationships) GetCustomerPaymentSourcesOk() (*CustomerDataRelationshipsCustomerPaymentSources, bool) {
	if o == nil || IsNil(o.CustomerPaymentSources) {
		return nil, false
	}
	return o.CustomerPaymentSources, true
}

// HasCustomerPaymentSources returns a boolean if a field has been set.
func (o *CustomerDataRelationships) HasCustomerPaymentSources() bool {
	if o != nil && !IsNil(o.CustomerPaymentSources) {
		return true
	}

	return false
}

// SetCustomerPaymentSources gets a reference to the given CustomerDataRelationshipsCustomerPaymentSources and assigns it to the CustomerPaymentSources field.
func (o *CustomerDataRelationships) SetCustomerPaymentSources(v CustomerDataRelationshipsCustomerPaymentSources) {
	o.CustomerPaymentSources = &v
}

// GetCustomerSubscriptions returns the CustomerSubscriptions field value if set, zero value otherwise.
func (o *CustomerDataRelationships) GetCustomerSubscriptions() CustomerDataRelationshipsCustomerSubscriptions {
	if o == nil || IsNil(o.CustomerSubscriptions) {
		var ret CustomerDataRelationshipsCustomerSubscriptions
		return ret
	}
	return *o.CustomerSubscriptions
}

// GetCustomerSubscriptionsOk returns a tuple with the CustomerSubscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataRelationships) GetCustomerSubscriptionsOk() (*CustomerDataRelationshipsCustomerSubscriptions, bool) {
	if o == nil || IsNil(o.CustomerSubscriptions) {
		return nil, false
	}
	return o.CustomerSubscriptions, true
}

// HasCustomerSubscriptions returns a boolean if a field has been set.
func (o *CustomerDataRelationships) HasCustomerSubscriptions() bool {
	if o != nil && !IsNil(o.CustomerSubscriptions) {
		return true
	}

	return false
}

// SetCustomerSubscriptions gets a reference to the given CustomerDataRelationshipsCustomerSubscriptions and assigns it to the CustomerSubscriptions field.
func (o *CustomerDataRelationships) SetCustomerSubscriptions(v CustomerDataRelationshipsCustomerSubscriptions) {
	o.CustomerSubscriptions = &v
}

// GetOrders returns the Orders field value if set, zero value otherwise.
func (o *CustomerDataRelationships) GetOrders() AdyenPaymentDataRelationshipsOrder {
	if o == nil || IsNil(o.Orders) {
		var ret AdyenPaymentDataRelationshipsOrder
		return ret
	}
	return *o.Orders
}

// GetOrdersOk returns a tuple with the Orders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataRelationships) GetOrdersOk() (*AdyenPaymentDataRelationshipsOrder, bool) {
	if o == nil || IsNil(o.Orders) {
		return nil, false
	}
	return o.Orders, true
}

// HasOrders returns a boolean if a field has been set.
func (o *CustomerDataRelationships) HasOrders() bool {
	if o != nil && !IsNil(o.Orders) {
		return true
	}

	return false
}

// SetOrders gets a reference to the given AdyenPaymentDataRelationshipsOrder and assigns it to the Orders field.
func (o *CustomerDataRelationships) SetOrders(v AdyenPaymentDataRelationshipsOrder) {
	o.Orders = &v
}

// GetOrderSubscriptions returns the OrderSubscriptions field value if set, zero value otherwise.
func (o *CustomerDataRelationships) GetOrderSubscriptions() CustomerDataRelationshipsOrderSubscriptions {
	if o == nil || IsNil(o.OrderSubscriptions) {
		var ret CustomerDataRelationshipsOrderSubscriptions
		return ret
	}
	return *o.OrderSubscriptions
}

// GetOrderSubscriptionsOk returns a tuple with the OrderSubscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataRelationships) GetOrderSubscriptionsOk() (*CustomerDataRelationshipsOrderSubscriptions, bool) {
	if o == nil || IsNil(o.OrderSubscriptions) {
		return nil, false
	}
	return o.OrderSubscriptions, true
}

// HasOrderSubscriptions returns a boolean if a field has been set.
func (o *CustomerDataRelationships) HasOrderSubscriptions() bool {
	if o != nil && !IsNil(o.OrderSubscriptions) {
		return true
	}

	return false
}

// SetOrderSubscriptions gets a reference to the given CustomerDataRelationshipsOrderSubscriptions and assigns it to the OrderSubscriptions field.
func (o *CustomerDataRelationships) SetOrderSubscriptions(v CustomerDataRelationshipsOrderSubscriptions) {
	o.OrderSubscriptions = &v
}

// GetReturns returns the Returns field value if set, zero value otherwise.
func (o *CustomerDataRelationships) GetReturns() CaptureDataRelationshipsReturn {
	if o == nil || IsNil(o.Returns) {
		var ret CaptureDataRelationshipsReturn
		return ret
	}
	return *o.Returns
}

// GetReturnsOk returns a tuple with the Returns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataRelationships) GetReturnsOk() (*CaptureDataRelationshipsReturn, bool) {
	if o == nil || IsNil(o.Returns) {
		return nil, false
	}
	return o.Returns, true
}

// HasReturns returns a boolean if a field has been set.
func (o *CustomerDataRelationships) HasReturns() bool {
	if o != nil && !IsNil(o.Returns) {
		return true
	}

	return false
}

// SetReturns gets a reference to the given CaptureDataRelationshipsReturn and assigns it to the Returns field.
func (o *CustomerDataRelationships) SetReturns(v CaptureDataRelationshipsReturn) {
	o.Returns = &v
}

// GetSkuLists returns the SkuLists field value if set, zero value otherwise.
func (o *CustomerDataRelationships) GetSkuLists() BundleDataRelationshipsSkuList {
	if o == nil || IsNil(o.SkuLists) {
		var ret BundleDataRelationshipsSkuList
		return ret
	}
	return *o.SkuLists
}

// GetSkuListsOk returns a tuple with the SkuLists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataRelationships) GetSkuListsOk() (*BundleDataRelationshipsSkuList, bool) {
	if o == nil || IsNil(o.SkuLists) {
		return nil, false
	}
	return o.SkuLists, true
}

// HasSkuLists returns a boolean if a field has been set.
func (o *CustomerDataRelationships) HasSkuLists() bool {
	if o != nil && !IsNil(o.SkuLists) {
		return true
	}

	return false
}

// SetSkuLists gets a reference to the given BundleDataRelationshipsSkuList and assigns it to the SkuLists field.
func (o *CustomerDataRelationships) SetSkuLists(v BundleDataRelationshipsSkuList) {
	o.SkuLists = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *CustomerDataRelationships) GetAttachments() AuthorizationDataRelationshipsAttachments {
	if o == nil || IsNil(o.Attachments) {
		var ret AuthorizationDataRelationshipsAttachments
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataRelationships) GetAttachmentsOk() (*AuthorizationDataRelationshipsAttachments, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *CustomerDataRelationships) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given AuthorizationDataRelationshipsAttachments and assigns it to the Attachments field.
func (o *CustomerDataRelationships) SetAttachments(v AuthorizationDataRelationshipsAttachments) {
	o.Attachments = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *CustomerDataRelationships) GetEvents() AddressDataRelationshipsEvents {
	if o == nil || IsNil(o.Events) {
		var ret AddressDataRelationshipsEvents
		return ret
	}
	return *o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataRelationships) GetEventsOk() (*AddressDataRelationshipsEvents, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *CustomerDataRelationships) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given AddressDataRelationshipsEvents and assigns it to the Events field.
func (o *CustomerDataRelationships) SetEvents(v AddressDataRelationshipsEvents) {
	o.Events = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CustomerDataRelationships) GetTags() AddressDataRelationshipsTags {
	if o == nil || IsNil(o.Tags) {
		var ret AddressDataRelationshipsTags
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerDataRelationships) GetTagsOk() (*AddressDataRelationshipsTags, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CustomerDataRelationships) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given AddressDataRelationshipsTags and assigns it to the Tags field.
func (o *CustomerDataRelationships) SetTags(v AddressDataRelationshipsTags) {
	o.Tags = &v
}

func (o CustomerDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomerGroup) {
		toSerialize["customer_group"] = o.CustomerGroup
	}
	if !IsNil(o.CustomerAddresses) {
		toSerialize["customer_addresses"] = o.CustomerAddresses
	}
	if !IsNil(o.CustomerPaymentSources) {
		toSerialize["customer_payment_sources"] = o.CustomerPaymentSources
	}
	if !IsNil(o.CustomerSubscriptions) {
		toSerialize["customer_subscriptions"] = o.CustomerSubscriptions
	}
	if !IsNil(o.Orders) {
		toSerialize["orders"] = o.Orders
	}
	if !IsNil(o.OrderSubscriptions) {
		toSerialize["order_subscriptions"] = o.OrderSubscriptions
	}
	if !IsNil(o.Returns) {
		toSerialize["returns"] = o.Returns
	}
	if !IsNil(o.SkuLists) {
		toSerialize["sku_lists"] = o.SkuLists
	}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableCustomerDataRelationships struct {
	value *CustomerDataRelationships
	isSet bool
}

func (v NullableCustomerDataRelationships) Get() *CustomerDataRelationships {
	return v.value
}

func (v *NullableCustomerDataRelationships) Set(val *CustomerDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerDataRelationships(val *CustomerDataRelationships) *NullableCustomerDataRelationships {
	return &NullableCustomerDataRelationships{value: val, isSet: true}
}

func (v NullableCustomerDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
