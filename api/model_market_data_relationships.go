/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the MarketDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarketDataRelationships{}

// MarketDataRelationships struct for MarketDataRelationships
type MarketDataRelationships struct {
	Merchant            *MarketDataRelationshipsMerchant                        `json:"merchant,omitempty"`
	PriceList           *MarketDataRelationshipsPriceList                       `json:"price_list,omitempty"`
	BasePriceList       *MarketDataRelationshipsPriceList                       `json:"base_price_list,omitempty"`
	InventoryModel      *InventoryReturnLocationDataRelationshipsInventoryModel `json:"inventory_model,omitempty"`
	SubscriptionModel   *MarketDataRelationshipsSubscriptionModel               `json:"subscription_model,omitempty"`
	TaxCalculator       *MarketDataRelationshipsTaxCalculator                   `json:"tax_calculator,omitempty"`
	CustomerGroup       *CustomerDataRelationshipsCustomerGroup                 `json:"customer_group,omitempty"`
	Geocoder            *AddressDataRelationshipsGeocoder                       `json:"geocoder,omitempty"`
	Stores              *MarketDataRelationshipsStores                          `json:"stores,omitempty"`
	PriceListSchedulers *MarketDataRelationshipsPriceListSchedulers             `json:"price_list_schedulers,omitempty"`
	Attachments         *AuthorizationDataRelationshipsAttachments              `json:"attachments,omitempty"`
	Versions            *AddressDataRelationshipsVersions                       `json:"versions,omitempty"`
}

// NewMarketDataRelationships instantiates a new MarketDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketDataRelationships() *MarketDataRelationships {
	this := MarketDataRelationships{}
	return &this
}

// NewMarketDataRelationshipsWithDefaults instantiates a new MarketDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketDataRelationshipsWithDefaults() *MarketDataRelationships {
	this := MarketDataRelationships{}
	return &this
}

// GetMerchant returns the Merchant field value if set, zero value otherwise.
func (o *MarketDataRelationships) GetMerchant() MarketDataRelationshipsMerchant {
	if o == nil || IsNil(o.Merchant) {
		var ret MarketDataRelationshipsMerchant
		return ret
	}
	return *o.Merchant
}

// GetMerchantOk returns a tuple with the Merchant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketDataRelationships) GetMerchantOk() (*MarketDataRelationshipsMerchant, bool) {
	if o == nil || IsNil(o.Merchant) {
		return nil, false
	}
	return o.Merchant, true
}

// HasMerchant returns a boolean if a field has been set.
func (o *MarketDataRelationships) HasMerchant() bool {
	if o != nil && !IsNil(o.Merchant) {
		return true
	}

	return false
}

// SetMerchant gets a reference to the given MarketDataRelationshipsMerchant and assigns it to the Merchant field.
func (o *MarketDataRelationships) SetMerchant(v MarketDataRelationshipsMerchant) {
	o.Merchant = &v
}

// GetPriceList returns the PriceList field value if set, zero value otherwise.
func (o *MarketDataRelationships) GetPriceList() MarketDataRelationshipsPriceList {
	if o == nil || IsNil(o.PriceList) {
		var ret MarketDataRelationshipsPriceList
		return ret
	}
	return *o.PriceList
}

// GetPriceListOk returns a tuple with the PriceList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketDataRelationships) GetPriceListOk() (*MarketDataRelationshipsPriceList, bool) {
	if o == nil || IsNil(o.PriceList) {
		return nil, false
	}
	return o.PriceList, true
}

// HasPriceList returns a boolean if a field has been set.
func (o *MarketDataRelationships) HasPriceList() bool {
	if o != nil && !IsNil(o.PriceList) {
		return true
	}

	return false
}

// SetPriceList gets a reference to the given MarketDataRelationshipsPriceList and assigns it to the PriceList field.
func (o *MarketDataRelationships) SetPriceList(v MarketDataRelationshipsPriceList) {
	o.PriceList = &v
}

// GetBasePriceList returns the BasePriceList field value if set, zero value otherwise.
func (o *MarketDataRelationships) GetBasePriceList() MarketDataRelationshipsPriceList {
	if o == nil || IsNil(o.BasePriceList) {
		var ret MarketDataRelationshipsPriceList
		return ret
	}
	return *o.BasePriceList
}

// GetBasePriceListOk returns a tuple with the BasePriceList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketDataRelationships) GetBasePriceListOk() (*MarketDataRelationshipsPriceList, bool) {
	if o == nil || IsNil(o.BasePriceList) {
		return nil, false
	}
	return o.BasePriceList, true
}

// HasBasePriceList returns a boolean if a field has been set.
func (o *MarketDataRelationships) HasBasePriceList() bool {
	if o != nil && !IsNil(o.BasePriceList) {
		return true
	}

	return false
}

// SetBasePriceList gets a reference to the given MarketDataRelationshipsPriceList and assigns it to the BasePriceList field.
func (o *MarketDataRelationships) SetBasePriceList(v MarketDataRelationshipsPriceList) {
	o.BasePriceList = &v
}

// GetInventoryModel returns the InventoryModel field value if set, zero value otherwise.
func (o *MarketDataRelationships) GetInventoryModel() InventoryReturnLocationDataRelationshipsInventoryModel {
	if o == nil || IsNil(o.InventoryModel) {
		var ret InventoryReturnLocationDataRelationshipsInventoryModel
		return ret
	}
	return *o.InventoryModel
}

// GetInventoryModelOk returns a tuple with the InventoryModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketDataRelationships) GetInventoryModelOk() (*InventoryReturnLocationDataRelationshipsInventoryModel, bool) {
	if o == nil || IsNil(o.InventoryModel) {
		return nil, false
	}
	return o.InventoryModel, true
}

// HasInventoryModel returns a boolean if a field has been set.
func (o *MarketDataRelationships) HasInventoryModel() bool {
	if o != nil && !IsNil(o.InventoryModel) {
		return true
	}

	return false
}

// SetInventoryModel gets a reference to the given InventoryReturnLocationDataRelationshipsInventoryModel and assigns it to the InventoryModel field.
func (o *MarketDataRelationships) SetInventoryModel(v InventoryReturnLocationDataRelationshipsInventoryModel) {
	o.InventoryModel = &v
}

// GetSubscriptionModel returns the SubscriptionModel field value if set, zero value otherwise.
func (o *MarketDataRelationships) GetSubscriptionModel() MarketDataRelationshipsSubscriptionModel {
	if o == nil || IsNil(o.SubscriptionModel) {
		var ret MarketDataRelationshipsSubscriptionModel
		return ret
	}
	return *o.SubscriptionModel
}

// GetSubscriptionModelOk returns a tuple with the SubscriptionModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketDataRelationships) GetSubscriptionModelOk() (*MarketDataRelationshipsSubscriptionModel, bool) {
	if o == nil || IsNil(o.SubscriptionModel) {
		return nil, false
	}
	return o.SubscriptionModel, true
}

// HasSubscriptionModel returns a boolean if a field has been set.
func (o *MarketDataRelationships) HasSubscriptionModel() bool {
	if o != nil && !IsNil(o.SubscriptionModel) {
		return true
	}

	return false
}

// SetSubscriptionModel gets a reference to the given MarketDataRelationshipsSubscriptionModel and assigns it to the SubscriptionModel field.
func (o *MarketDataRelationships) SetSubscriptionModel(v MarketDataRelationshipsSubscriptionModel) {
	o.SubscriptionModel = &v
}

// GetTaxCalculator returns the TaxCalculator field value if set, zero value otherwise.
func (o *MarketDataRelationships) GetTaxCalculator() MarketDataRelationshipsTaxCalculator {
	if o == nil || IsNil(o.TaxCalculator) {
		var ret MarketDataRelationshipsTaxCalculator
		return ret
	}
	return *o.TaxCalculator
}

// GetTaxCalculatorOk returns a tuple with the TaxCalculator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketDataRelationships) GetTaxCalculatorOk() (*MarketDataRelationshipsTaxCalculator, bool) {
	if o == nil || IsNil(o.TaxCalculator) {
		return nil, false
	}
	return o.TaxCalculator, true
}

// HasTaxCalculator returns a boolean if a field has been set.
func (o *MarketDataRelationships) HasTaxCalculator() bool {
	if o != nil && !IsNil(o.TaxCalculator) {
		return true
	}

	return false
}

// SetTaxCalculator gets a reference to the given MarketDataRelationshipsTaxCalculator and assigns it to the TaxCalculator field.
func (o *MarketDataRelationships) SetTaxCalculator(v MarketDataRelationshipsTaxCalculator) {
	o.TaxCalculator = &v
}

// GetCustomerGroup returns the CustomerGroup field value if set, zero value otherwise.
func (o *MarketDataRelationships) GetCustomerGroup() CustomerDataRelationshipsCustomerGroup {
	if o == nil || IsNil(o.CustomerGroup) {
		var ret CustomerDataRelationshipsCustomerGroup
		return ret
	}
	return *o.CustomerGroup
}

// GetCustomerGroupOk returns a tuple with the CustomerGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketDataRelationships) GetCustomerGroupOk() (*CustomerDataRelationshipsCustomerGroup, bool) {
	if o == nil || IsNil(o.CustomerGroup) {
		return nil, false
	}
	return o.CustomerGroup, true
}

// HasCustomerGroup returns a boolean if a field has been set.
func (o *MarketDataRelationships) HasCustomerGroup() bool {
	if o != nil && !IsNil(o.CustomerGroup) {
		return true
	}

	return false
}

// SetCustomerGroup gets a reference to the given CustomerDataRelationshipsCustomerGroup and assigns it to the CustomerGroup field.
func (o *MarketDataRelationships) SetCustomerGroup(v CustomerDataRelationshipsCustomerGroup) {
	o.CustomerGroup = &v
}

// GetGeocoder returns the Geocoder field value if set, zero value otherwise.
func (o *MarketDataRelationships) GetGeocoder() AddressDataRelationshipsGeocoder {
	if o == nil || IsNil(o.Geocoder) {
		var ret AddressDataRelationshipsGeocoder
		return ret
	}
	return *o.Geocoder
}

// GetGeocoderOk returns a tuple with the Geocoder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketDataRelationships) GetGeocoderOk() (*AddressDataRelationshipsGeocoder, bool) {
	if o == nil || IsNil(o.Geocoder) {
		return nil, false
	}
	return o.Geocoder, true
}

// HasGeocoder returns a boolean if a field has been set.
func (o *MarketDataRelationships) HasGeocoder() bool {
	if o != nil && !IsNil(o.Geocoder) {
		return true
	}

	return false
}

// SetGeocoder gets a reference to the given AddressDataRelationshipsGeocoder and assigns it to the Geocoder field.
func (o *MarketDataRelationships) SetGeocoder(v AddressDataRelationshipsGeocoder) {
	o.Geocoder = &v
}

// GetStores returns the Stores field value if set, zero value otherwise.
func (o *MarketDataRelationships) GetStores() MarketDataRelationshipsStores {
	if o == nil || IsNil(o.Stores) {
		var ret MarketDataRelationshipsStores
		return ret
	}
	return *o.Stores
}

// GetStoresOk returns a tuple with the Stores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketDataRelationships) GetStoresOk() (*MarketDataRelationshipsStores, bool) {
	if o == nil || IsNil(o.Stores) {
		return nil, false
	}
	return o.Stores, true
}

// HasStores returns a boolean if a field has been set.
func (o *MarketDataRelationships) HasStores() bool {
	if o != nil && !IsNil(o.Stores) {
		return true
	}

	return false
}

// SetStores gets a reference to the given MarketDataRelationshipsStores and assigns it to the Stores field.
func (o *MarketDataRelationships) SetStores(v MarketDataRelationshipsStores) {
	o.Stores = &v
}

// GetPriceListSchedulers returns the PriceListSchedulers field value if set, zero value otherwise.
func (o *MarketDataRelationships) GetPriceListSchedulers() MarketDataRelationshipsPriceListSchedulers {
	if o == nil || IsNil(o.PriceListSchedulers) {
		var ret MarketDataRelationshipsPriceListSchedulers
		return ret
	}
	return *o.PriceListSchedulers
}

// GetPriceListSchedulersOk returns a tuple with the PriceListSchedulers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketDataRelationships) GetPriceListSchedulersOk() (*MarketDataRelationshipsPriceListSchedulers, bool) {
	if o == nil || IsNil(o.PriceListSchedulers) {
		return nil, false
	}
	return o.PriceListSchedulers, true
}

// HasPriceListSchedulers returns a boolean if a field has been set.
func (o *MarketDataRelationships) HasPriceListSchedulers() bool {
	if o != nil && !IsNil(o.PriceListSchedulers) {
		return true
	}

	return false
}

// SetPriceListSchedulers gets a reference to the given MarketDataRelationshipsPriceListSchedulers and assigns it to the PriceListSchedulers field.
func (o *MarketDataRelationships) SetPriceListSchedulers(v MarketDataRelationshipsPriceListSchedulers) {
	o.PriceListSchedulers = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *MarketDataRelationships) GetAttachments() AuthorizationDataRelationshipsAttachments {
	if o == nil || IsNil(o.Attachments) {
		var ret AuthorizationDataRelationshipsAttachments
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketDataRelationships) GetAttachmentsOk() (*AuthorizationDataRelationshipsAttachments, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *MarketDataRelationships) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given AuthorizationDataRelationshipsAttachments and assigns it to the Attachments field.
func (o *MarketDataRelationships) SetAttachments(v AuthorizationDataRelationshipsAttachments) {
	o.Attachments = &v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *MarketDataRelationships) GetVersions() AddressDataRelationshipsVersions {
	if o == nil || IsNil(o.Versions) {
		var ret AddressDataRelationshipsVersions
		return ret
	}
	return *o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketDataRelationships) GetVersionsOk() (*AddressDataRelationshipsVersions, bool) {
	if o == nil || IsNil(o.Versions) {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *MarketDataRelationships) HasVersions() bool {
	if o != nil && !IsNil(o.Versions) {
		return true
	}

	return false
}

// SetVersions gets a reference to the given AddressDataRelationshipsVersions and assigns it to the Versions field.
func (o *MarketDataRelationships) SetVersions(v AddressDataRelationshipsVersions) {
	o.Versions = &v
}

func (o MarketDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarketDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Merchant) {
		toSerialize["merchant"] = o.Merchant
	}
	if !IsNil(o.PriceList) {
		toSerialize["price_list"] = o.PriceList
	}
	if !IsNil(o.BasePriceList) {
		toSerialize["base_price_list"] = o.BasePriceList
	}
	if !IsNil(o.InventoryModel) {
		toSerialize["inventory_model"] = o.InventoryModel
	}
	if !IsNil(o.SubscriptionModel) {
		toSerialize["subscription_model"] = o.SubscriptionModel
	}
	if !IsNil(o.TaxCalculator) {
		toSerialize["tax_calculator"] = o.TaxCalculator
	}
	if !IsNil(o.CustomerGroup) {
		toSerialize["customer_group"] = o.CustomerGroup
	}
	if !IsNil(o.Geocoder) {
		toSerialize["geocoder"] = o.Geocoder
	}
	if !IsNil(o.Stores) {
		toSerialize["stores"] = o.Stores
	}
	if !IsNil(o.PriceListSchedulers) {
		toSerialize["price_list_schedulers"] = o.PriceListSchedulers
	}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.Versions) {
		toSerialize["versions"] = o.Versions
	}
	return toSerialize, nil
}

type NullableMarketDataRelationships struct {
	value *MarketDataRelationships
	isSet bool
}

func (v NullableMarketDataRelationships) Get() *MarketDataRelationships {
	return v.value
}

func (v *NullableMarketDataRelationships) Set(val *MarketDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketDataRelationships(val *MarketDataRelationships) *NullableMarketDataRelationships {
	return &NullableMarketDataRelationships{value: val, isSet: true}
}

func (v NullableMarketDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
