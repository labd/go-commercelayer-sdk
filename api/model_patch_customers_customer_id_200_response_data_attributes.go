/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PATCHCustomersCustomerId200ResponseDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PATCHCustomersCustomerId200ResponseDataAttributes{}

// PATCHCustomersCustomerId200ResponseDataAttributes struct for PATCHCustomersCustomerId200ResponseDataAttributes
type PATCHCustomersCustomerId200ResponseDataAttributes struct {
	// The customer's email address.
	Email interface{} `json:"email,omitempty"`
	// The customer's password. Initiate a customer password reset flow if you need to change it.
	Password interface{} `json:"password,omitempty"`
	// A reference to uniquely identify the shopper during payment sessions.
	ShopperReference interface{} `json:"shopper_reference,omitempty"`
	// A reference to uniquely identify the customer on any connected external services.
	ProfileId interface{} `json:"profile_id,omitempty"`
	// A string that you can use to add any external identifier to the resource. This can be useful for integrating the resource to an external system, like an ERP, a marketing tool, a CRM, or whatever.
	Reference interface{} `json:"reference,omitempty"`
	// Any identifier of the third party system that defines the reference code.
	ReferenceOrigin interface{} `json:"reference_origin,omitempty"`
	// Set of key-value pairs that you can attach to the resource. This can be useful for storing additional information about the resource in a structured format.
	Metadata interface{} `json:"metadata,omitempty"`
}

// NewPATCHCustomersCustomerId200ResponseDataAttributes instantiates a new PATCHCustomersCustomerId200ResponseDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPATCHCustomersCustomerId200ResponseDataAttributes() *PATCHCustomersCustomerId200ResponseDataAttributes {
	this := PATCHCustomersCustomerId200ResponseDataAttributes{}
	return &this
}

// NewPATCHCustomersCustomerId200ResponseDataAttributesWithDefaults instantiates a new PATCHCustomersCustomerId200ResponseDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPATCHCustomersCustomerId200ResponseDataAttributesWithDefaults() *PATCHCustomersCustomerId200ResponseDataAttributes {
	this := PATCHCustomersCustomerId200ResponseDataAttributes{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) GetEmail() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) GetEmailOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return &o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) HasEmail() bool {
	if o != nil && IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given interface{} and assigns it to the Email field.
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) SetEmail(v interface{}) {
	o.Email = v
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) GetPassword() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) GetPasswordOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return &o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) HasPassword() bool {
	if o != nil && IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given interface{} and assigns it to the Password field.
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) SetPassword(v interface{}) {
	o.Password = v
}

// GetShopperReference returns the ShopperReference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) GetShopperReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ShopperReference
}

// GetShopperReferenceOk returns a tuple with the ShopperReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) GetShopperReferenceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ShopperReference) {
		return nil, false
	}
	return &o.ShopperReference, true
}

// HasShopperReference returns a boolean if a field has been set.
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) HasShopperReference() bool {
	if o != nil && IsNil(o.ShopperReference) {
		return true
	}

	return false
}

// SetShopperReference gets a reference to the given interface{} and assigns it to the ShopperReference field.
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) SetShopperReference(v interface{}) {
	o.ShopperReference = v
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) GetProfileId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) GetProfileIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return &o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) HasProfileId() bool {
	if o != nil && IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given interface{} and assigns it to the ProfileId field.
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) SetProfileId(v interface{}) {
	o.ProfileId = v
}

// GetReference returns the Reference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) GetReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) GetReferenceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return &o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) HasReference() bool {
	if o != nil && IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given interface{} and assigns it to the Reference field.
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) SetReference(v interface{}) {
	o.Reference = v
}

// GetReferenceOrigin returns the ReferenceOrigin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) GetReferenceOrigin() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ReferenceOrigin
}

// GetReferenceOriginOk returns a tuple with the ReferenceOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) GetReferenceOriginOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ReferenceOrigin) {
		return nil, false
	}
	return &o.ReferenceOrigin, true
}

// HasReferenceOrigin returns a boolean if a field has been set.
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) HasReferenceOrigin() bool {
	if o != nil && IsNil(o.ReferenceOrigin) {
		return true
	}

	return false
}

// SetReferenceOrigin gets a reference to the given interface{} and assigns it to the ReferenceOrigin field.
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) SetReferenceOrigin(v interface{}) {
	o.ReferenceOrigin = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) GetMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) GetMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given interface{} and assigns it to the Metadata field.
func (o *PATCHCustomersCustomerId200ResponseDataAttributes) SetMetadata(v interface{}) {
	o.Metadata = v
}

func (o PATCHCustomersCustomerId200ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PATCHCustomersCustomerId200ResponseDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.ShopperReference != nil {
		toSerialize["shopper_reference"] = o.ShopperReference
	}
	if o.ProfileId != nil {
		toSerialize["profile_id"] = o.ProfileId
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.ReferenceOrigin != nil {
		toSerialize["reference_origin"] = o.ReferenceOrigin
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullablePATCHCustomersCustomerId200ResponseDataAttributes struct {
	value *PATCHCustomersCustomerId200ResponseDataAttributes
	isSet bool
}

func (v NullablePATCHCustomersCustomerId200ResponseDataAttributes) Get() *PATCHCustomersCustomerId200ResponseDataAttributes {
	return v.value
}

func (v *NullablePATCHCustomersCustomerId200ResponseDataAttributes) Set(val *PATCHCustomersCustomerId200ResponseDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullablePATCHCustomersCustomerId200ResponseDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullablePATCHCustomersCustomerId200ResponseDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePATCHCustomersCustomerId200ResponseDataAttributes(val *PATCHCustomersCustomerId200ResponseDataAttributes) *NullablePATCHCustomersCustomerId200ResponseDataAttributes {
	return &NullablePATCHCustomersCustomerId200ResponseDataAttributes{value: val, isSet: true}
}

func (v NullablePATCHCustomersCustomerId200ResponseDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePATCHCustomersCustomerId200ResponseDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
