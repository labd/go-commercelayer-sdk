/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the NotificationDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotificationDataRelationships{}

// NotificationDataRelationships struct for NotificationDataRelationships
type NotificationDataRelationships struct {
	Notifiable *NotificationDataRelationshipsNotifiable `json:"notifiable,omitempty"`
}

// NewNotificationDataRelationships instantiates a new NotificationDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationDataRelationships() *NotificationDataRelationships {
	this := NotificationDataRelationships{}
	return &this
}

// NewNotificationDataRelationshipsWithDefaults instantiates a new NotificationDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationDataRelationshipsWithDefaults() *NotificationDataRelationships {
	this := NotificationDataRelationships{}
	return &this
}

// GetNotifiable returns the Notifiable field value if set, zero value otherwise.
func (o *NotificationDataRelationships) GetNotifiable() NotificationDataRelationshipsNotifiable {
	if o == nil || IsNil(o.Notifiable) {
		var ret NotificationDataRelationshipsNotifiable
		return ret
	}
	return *o.Notifiable
}

// GetNotifiableOk returns a tuple with the Notifiable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationDataRelationships) GetNotifiableOk() (*NotificationDataRelationshipsNotifiable, bool) {
	if o == nil || IsNil(o.Notifiable) {
		return nil, false
	}
	return o.Notifiable, true
}

// HasNotifiable returns a boolean if a field has been set.
func (o *NotificationDataRelationships) HasNotifiable() bool {
	if o != nil && !IsNil(o.Notifiable) {
		return true
	}

	return false
}

// SetNotifiable gets a reference to the given NotificationDataRelationshipsNotifiable and assigns it to the Notifiable field.
func (o *NotificationDataRelationships) SetNotifiable(v NotificationDataRelationshipsNotifiable) {
	o.Notifiable = &v
}

func (o NotificationDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Notifiable) {
		toSerialize["notifiable"] = o.Notifiable
	}
	return toSerialize, nil
}

type NullableNotificationDataRelationships struct {
	value *NotificationDataRelationships
	isSet bool
}

func (v NullableNotificationDataRelationships) Get() *NotificationDataRelationships {
	return v.value
}

func (v *NullableNotificationDataRelationships) Set(val *NotificationDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationDataRelationships(val *NotificationDataRelationships) *NullableNotificationDataRelationships {
	return &NullableNotificationDataRelationships{value: val, isSet: true}
}

func (v NullableNotificationDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
