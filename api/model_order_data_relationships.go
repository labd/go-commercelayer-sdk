/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the OrderDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderDataRelationships{}

// OrderDataRelationships struct for OrderDataRelationships
type OrderDataRelationships struct {
	Market                          *AvalaraAccountDataRelationshipsMarkets                 `json:"market,omitempty"`
	Customer                        *CouponRecipientDataRelationshipsCustomer               `json:"customer,omitempty"`
	ShippingAddress                 *BingGeocoderDataRelationshipsAddresses                 `json:"shipping_address,omitempty"`
	BillingAddress                  *BingGeocoderDataRelationshipsAddresses                 `json:"billing_address,omitempty"`
	Store                           *MarketDataRelationshipsStores                          `json:"store,omitempty"`
	AvailablePaymentMethods         *AdyenGatewayDataRelationshipsPaymentMethods            `json:"available_payment_methods,omitempty"`
	AvailableCustomerPaymentSources *CustomerDataRelationshipsCustomerPaymentSources        `json:"available_customer_payment_sources,omitempty"`
	AvailableFreeSkus               *BundleDataRelationshipsSkus                            `json:"available_free_skus,omitempty"`
	AvailableFreeBundles            *LineItemDataRelationshipsBundle                        `json:"available_free_bundles,omitempty"`
	PaymentMethod                   *AdyenGatewayDataRelationshipsPaymentMethods            `json:"payment_method,omitempty"`
	PaymentSource                   *AuthorizationDataRelationshipsPaymentSource            `json:"payment_source,omitempty"`
	LineItems                       *LineItemOptionDataRelationshipsLineItem                `json:"line_items,omitempty"`
	LineItemOptions                 *LineItemDataRelationshipsLineItemOptions               `json:"line_item_options,omitempty"`
	StockReservations               *LineItemDataRelationshipsStockReservations             `json:"stock_reservations,omitempty"`
	StockLineItems                  *LineItemDataRelationshipsStockLineItems                `json:"stock_line_items,omitempty"`
	StockTransfers                  *LineItemDataRelationshipsStockTransfers                `json:"stock_transfers,omitempty"`
	Shipments                       *LineItemDataRelationshipsShipment                      `json:"shipments,omitempty"`
	PaymentOptions                  *OrderDataRelationshipsPaymentOptions                   `json:"payment_options,omitempty"`
	Transactions                    *OrderDataRelationshipsTransactions                     `json:"transactions,omitempty"`
	Authorizations                  *CaptureDataRelationshipsReferenceAuthorization         `json:"authorizations,omitempty"`
	Captures                        *AuthorizationDataRelationshipsCaptures                 `json:"captures,omitempty"`
	Voids                           *AuthorizationDataRelationshipsVoids                    `json:"voids,omitempty"`
	Refunds                         *CaptureDataRelationshipsRefunds                        `json:"refunds,omitempty"`
	Returns                         *CaptureDataRelationshipsReturn                         `json:"returns,omitempty"`
	OrderSubscription               *CustomerDataRelationshipsOrderSubscriptions            `json:"order_subscription,omitempty"`
	OrderSubscriptions              *CustomerDataRelationshipsOrderSubscriptions            `json:"order_subscriptions,omitempty"`
	OrderFactories                  *OrderSubscriptionDataRelationshipsOrderFactories       `json:"order_factories,omitempty"`
	OrderCopies                     *OrderDataRelationshipsOrderCopies                      `json:"order_copies,omitempty"`
	RecurringOrderCopies            *OrderSubscriptionDataRelationshipsRecurringOrderCopies `json:"recurring_order_copies,omitempty"`
	Attachments                     *AuthorizationDataRelationshipsAttachments              `json:"attachments,omitempty"`
	Notifications                   *LineItemDataRelationshipsNotifications                 `json:"notifications,omitempty"`
	Links                           *OrderDataRelationshipsLinks                            `json:"links,omitempty"`
	ResourceErrors                  *OrderDataRelationshipsResourceErrors                   `json:"resource_errors,omitempty"`
	Events                          *AddressDataRelationshipsEvents                         `json:"events,omitempty"`
	Tags                            *AddressDataRelationshipsTags                           `json:"tags,omitempty"`
	Versions                        *AddressDataRelationshipsVersions                       `json:"versions,omitempty"`
}

// NewOrderDataRelationships instantiates a new OrderDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderDataRelationships() *OrderDataRelationships {
	this := OrderDataRelationships{}
	return &this
}

// NewOrderDataRelationshipsWithDefaults instantiates a new OrderDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderDataRelationshipsWithDefaults() *OrderDataRelationships {
	this := OrderDataRelationships{}
	return &this
}

// GetMarket returns the Market field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetMarket() AvalaraAccountDataRelationshipsMarkets {
	if o == nil || IsNil(o.Market) {
		var ret AvalaraAccountDataRelationshipsMarkets
		return ret
	}
	return *o.Market
}

// GetMarketOk returns a tuple with the Market field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetMarketOk() (*AvalaraAccountDataRelationshipsMarkets, bool) {
	if o == nil || IsNil(o.Market) {
		return nil, false
	}
	return o.Market, true
}

// HasMarket returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasMarket() bool {
	if o != nil && !IsNil(o.Market) {
		return true
	}

	return false
}

// SetMarket gets a reference to the given AvalaraAccountDataRelationshipsMarkets and assigns it to the Market field.
func (o *OrderDataRelationships) SetMarket(v AvalaraAccountDataRelationshipsMarkets) {
	o.Market = &v
}

// GetCustomer returns the Customer field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetCustomer() CouponRecipientDataRelationshipsCustomer {
	if o == nil || IsNil(o.Customer) {
		var ret CouponRecipientDataRelationshipsCustomer
		return ret
	}
	return *o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetCustomerOk() (*CouponRecipientDataRelationshipsCustomer, bool) {
	if o == nil || IsNil(o.Customer) {
		return nil, false
	}
	return o.Customer, true
}

// HasCustomer returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasCustomer() bool {
	if o != nil && !IsNil(o.Customer) {
		return true
	}

	return false
}

// SetCustomer gets a reference to the given CouponRecipientDataRelationshipsCustomer and assigns it to the Customer field.
func (o *OrderDataRelationships) SetCustomer(v CouponRecipientDataRelationshipsCustomer) {
	o.Customer = &v
}

// GetShippingAddress returns the ShippingAddress field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetShippingAddress() BingGeocoderDataRelationshipsAddresses {
	if o == nil || IsNil(o.ShippingAddress) {
		var ret BingGeocoderDataRelationshipsAddresses
		return ret
	}
	return *o.ShippingAddress
}

// GetShippingAddressOk returns a tuple with the ShippingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetShippingAddressOk() (*BingGeocoderDataRelationshipsAddresses, bool) {
	if o == nil || IsNil(o.ShippingAddress) {
		return nil, false
	}
	return o.ShippingAddress, true
}

// HasShippingAddress returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasShippingAddress() bool {
	if o != nil && !IsNil(o.ShippingAddress) {
		return true
	}

	return false
}

// SetShippingAddress gets a reference to the given BingGeocoderDataRelationshipsAddresses and assigns it to the ShippingAddress field.
func (o *OrderDataRelationships) SetShippingAddress(v BingGeocoderDataRelationshipsAddresses) {
	o.ShippingAddress = &v
}

// GetBillingAddress returns the BillingAddress field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetBillingAddress() BingGeocoderDataRelationshipsAddresses {
	if o == nil || IsNil(o.BillingAddress) {
		var ret BingGeocoderDataRelationshipsAddresses
		return ret
	}
	return *o.BillingAddress
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetBillingAddressOk() (*BingGeocoderDataRelationshipsAddresses, bool) {
	if o == nil || IsNil(o.BillingAddress) {
		return nil, false
	}
	return o.BillingAddress, true
}

// HasBillingAddress returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasBillingAddress() bool {
	if o != nil && !IsNil(o.BillingAddress) {
		return true
	}

	return false
}

// SetBillingAddress gets a reference to the given BingGeocoderDataRelationshipsAddresses and assigns it to the BillingAddress field.
func (o *OrderDataRelationships) SetBillingAddress(v BingGeocoderDataRelationshipsAddresses) {
	o.BillingAddress = &v
}

// GetStore returns the Store field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetStore() MarketDataRelationshipsStores {
	if o == nil || IsNil(o.Store) {
		var ret MarketDataRelationshipsStores
		return ret
	}
	return *o.Store
}

// GetStoreOk returns a tuple with the Store field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetStoreOk() (*MarketDataRelationshipsStores, bool) {
	if o == nil || IsNil(o.Store) {
		return nil, false
	}
	return o.Store, true
}

// HasStore returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasStore() bool {
	if o != nil && !IsNil(o.Store) {
		return true
	}

	return false
}

// SetStore gets a reference to the given MarketDataRelationshipsStores and assigns it to the Store field.
func (o *OrderDataRelationships) SetStore(v MarketDataRelationshipsStores) {
	o.Store = &v
}

// GetAvailablePaymentMethods returns the AvailablePaymentMethods field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetAvailablePaymentMethods() AdyenGatewayDataRelationshipsPaymentMethods {
	if o == nil || IsNil(o.AvailablePaymentMethods) {
		var ret AdyenGatewayDataRelationshipsPaymentMethods
		return ret
	}
	return *o.AvailablePaymentMethods
}

// GetAvailablePaymentMethodsOk returns a tuple with the AvailablePaymentMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetAvailablePaymentMethodsOk() (*AdyenGatewayDataRelationshipsPaymentMethods, bool) {
	if o == nil || IsNil(o.AvailablePaymentMethods) {
		return nil, false
	}
	return o.AvailablePaymentMethods, true
}

// HasAvailablePaymentMethods returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasAvailablePaymentMethods() bool {
	if o != nil && !IsNil(o.AvailablePaymentMethods) {
		return true
	}

	return false
}

// SetAvailablePaymentMethods gets a reference to the given AdyenGatewayDataRelationshipsPaymentMethods and assigns it to the AvailablePaymentMethods field.
func (o *OrderDataRelationships) SetAvailablePaymentMethods(v AdyenGatewayDataRelationshipsPaymentMethods) {
	o.AvailablePaymentMethods = &v
}

// GetAvailableCustomerPaymentSources returns the AvailableCustomerPaymentSources field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetAvailableCustomerPaymentSources() CustomerDataRelationshipsCustomerPaymentSources {
	if o == nil || IsNil(o.AvailableCustomerPaymentSources) {
		var ret CustomerDataRelationshipsCustomerPaymentSources
		return ret
	}
	return *o.AvailableCustomerPaymentSources
}

// GetAvailableCustomerPaymentSourcesOk returns a tuple with the AvailableCustomerPaymentSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetAvailableCustomerPaymentSourcesOk() (*CustomerDataRelationshipsCustomerPaymentSources, bool) {
	if o == nil || IsNil(o.AvailableCustomerPaymentSources) {
		return nil, false
	}
	return o.AvailableCustomerPaymentSources, true
}

// HasAvailableCustomerPaymentSources returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasAvailableCustomerPaymentSources() bool {
	if o != nil && !IsNil(o.AvailableCustomerPaymentSources) {
		return true
	}

	return false
}

// SetAvailableCustomerPaymentSources gets a reference to the given CustomerDataRelationshipsCustomerPaymentSources and assigns it to the AvailableCustomerPaymentSources field.
func (o *OrderDataRelationships) SetAvailableCustomerPaymentSources(v CustomerDataRelationshipsCustomerPaymentSources) {
	o.AvailableCustomerPaymentSources = &v
}

// GetAvailableFreeSkus returns the AvailableFreeSkus field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetAvailableFreeSkus() BundleDataRelationshipsSkus {
	if o == nil || IsNil(o.AvailableFreeSkus) {
		var ret BundleDataRelationshipsSkus
		return ret
	}
	return *o.AvailableFreeSkus
}

// GetAvailableFreeSkusOk returns a tuple with the AvailableFreeSkus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetAvailableFreeSkusOk() (*BundleDataRelationshipsSkus, bool) {
	if o == nil || IsNil(o.AvailableFreeSkus) {
		return nil, false
	}
	return o.AvailableFreeSkus, true
}

// HasAvailableFreeSkus returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasAvailableFreeSkus() bool {
	if o != nil && !IsNil(o.AvailableFreeSkus) {
		return true
	}

	return false
}

// SetAvailableFreeSkus gets a reference to the given BundleDataRelationshipsSkus and assigns it to the AvailableFreeSkus field.
func (o *OrderDataRelationships) SetAvailableFreeSkus(v BundleDataRelationshipsSkus) {
	o.AvailableFreeSkus = &v
}

// GetAvailableFreeBundles returns the AvailableFreeBundles field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetAvailableFreeBundles() LineItemDataRelationshipsBundle {
	if o == nil || IsNil(o.AvailableFreeBundles) {
		var ret LineItemDataRelationshipsBundle
		return ret
	}
	return *o.AvailableFreeBundles
}

// GetAvailableFreeBundlesOk returns a tuple with the AvailableFreeBundles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetAvailableFreeBundlesOk() (*LineItemDataRelationshipsBundle, bool) {
	if o == nil || IsNil(o.AvailableFreeBundles) {
		return nil, false
	}
	return o.AvailableFreeBundles, true
}

// HasAvailableFreeBundles returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasAvailableFreeBundles() bool {
	if o != nil && !IsNil(o.AvailableFreeBundles) {
		return true
	}

	return false
}

// SetAvailableFreeBundles gets a reference to the given LineItemDataRelationshipsBundle and assigns it to the AvailableFreeBundles field.
func (o *OrderDataRelationships) SetAvailableFreeBundles(v LineItemDataRelationshipsBundle) {
	o.AvailableFreeBundles = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetPaymentMethod() AdyenGatewayDataRelationshipsPaymentMethods {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret AdyenGatewayDataRelationshipsPaymentMethods
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetPaymentMethodOk() (*AdyenGatewayDataRelationshipsPaymentMethods, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given AdyenGatewayDataRelationshipsPaymentMethods and assigns it to the PaymentMethod field.
func (o *OrderDataRelationships) SetPaymentMethod(v AdyenGatewayDataRelationshipsPaymentMethods) {
	o.PaymentMethod = &v
}

// GetPaymentSource returns the PaymentSource field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetPaymentSource() AuthorizationDataRelationshipsPaymentSource {
	if o == nil || IsNil(o.PaymentSource) {
		var ret AuthorizationDataRelationshipsPaymentSource
		return ret
	}
	return *o.PaymentSource
}

// GetPaymentSourceOk returns a tuple with the PaymentSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetPaymentSourceOk() (*AuthorizationDataRelationshipsPaymentSource, bool) {
	if o == nil || IsNil(o.PaymentSource) {
		return nil, false
	}
	return o.PaymentSource, true
}

// HasPaymentSource returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasPaymentSource() bool {
	if o != nil && !IsNil(o.PaymentSource) {
		return true
	}

	return false
}

// SetPaymentSource gets a reference to the given AuthorizationDataRelationshipsPaymentSource and assigns it to the PaymentSource field.
func (o *OrderDataRelationships) SetPaymentSource(v AuthorizationDataRelationshipsPaymentSource) {
	o.PaymentSource = &v
}

// GetLineItems returns the LineItems field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetLineItems() LineItemOptionDataRelationshipsLineItem {
	if o == nil || IsNil(o.LineItems) {
		var ret LineItemOptionDataRelationshipsLineItem
		return ret
	}
	return *o.LineItems
}

// GetLineItemsOk returns a tuple with the LineItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetLineItemsOk() (*LineItemOptionDataRelationshipsLineItem, bool) {
	if o == nil || IsNil(o.LineItems) {
		return nil, false
	}
	return o.LineItems, true
}

// HasLineItems returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasLineItems() bool {
	if o != nil && !IsNil(o.LineItems) {
		return true
	}

	return false
}

// SetLineItems gets a reference to the given LineItemOptionDataRelationshipsLineItem and assigns it to the LineItems field.
func (o *OrderDataRelationships) SetLineItems(v LineItemOptionDataRelationshipsLineItem) {
	o.LineItems = &v
}

// GetLineItemOptions returns the LineItemOptions field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetLineItemOptions() LineItemDataRelationshipsLineItemOptions {
	if o == nil || IsNil(o.LineItemOptions) {
		var ret LineItemDataRelationshipsLineItemOptions
		return ret
	}
	return *o.LineItemOptions
}

// GetLineItemOptionsOk returns a tuple with the LineItemOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetLineItemOptionsOk() (*LineItemDataRelationshipsLineItemOptions, bool) {
	if o == nil || IsNil(o.LineItemOptions) {
		return nil, false
	}
	return o.LineItemOptions, true
}

// HasLineItemOptions returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasLineItemOptions() bool {
	if o != nil && !IsNil(o.LineItemOptions) {
		return true
	}

	return false
}

// SetLineItemOptions gets a reference to the given LineItemDataRelationshipsLineItemOptions and assigns it to the LineItemOptions field.
func (o *OrderDataRelationships) SetLineItemOptions(v LineItemDataRelationshipsLineItemOptions) {
	o.LineItemOptions = &v
}

// GetStockReservations returns the StockReservations field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetStockReservations() LineItemDataRelationshipsStockReservations {
	if o == nil || IsNil(o.StockReservations) {
		var ret LineItemDataRelationshipsStockReservations
		return ret
	}
	return *o.StockReservations
}

// GetStockReservationsOk returns a tuple with the StockReservations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetStockReservationsOk() (*LineItemDataRelationshipsStockReservations, bool) {
	if o == nil || IsNil(o.StockReservations) {
		return nil, false
	}
	return o.StockReservations, true
}

// HasStockReservations returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasStockReservations() bool {
	if o != nil && !IsNil(o.StockReservations) {
		return true
	}

	return false
}

// SetStockReservations gets a reference to the given LineItemDataRelationshipsStockReservations and assigns it to the StockReservations field.
func (o *OrderDataRelationships) SetStockReservations(v LineItemDataRelationshipsStockReservations) {
	o.StockReservations = &v
}

// GetStockLineItems returns the StockLineItems field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetStockLineItems() LineItemDataRelationshipsStockLineItems {
	if o == nil || IsNil(o.StockLineItems) {
		var ret LineItemDataRelationshipsStockLineItems
		return ret
	}
	return *o.StockLineItems
}

// GetStockLineItemsOk returns a tuple with the StockLineItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetStockLineItemsOk() (*LineItemDataRelationshipsStockLineItems, bool) {
	if o == nil || IsNil(o.StockLineItems) {
		return nil, false
	}
	return o.StockLineItems, true
}

// HasStockLineItems returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasStockLineItems() bool {
	if o != nil && !IsNil(o.StockLineItems) {
		return true
	}

	return false
}

// SetStockLineItems gets a reference to the given LineItemDataRelationshipsStockLineItems and assigns it to the StockLineItems field.
func (o *OrderDataRelationships) SetStockLineItems(v LineItemDataRelationshipsStockLineItems) {
	o.StockLineItems = &v
}

// GetStockTransfers returns the StockTransfers field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetStockTransfers() LineItemDataRelationshipsStockTransfers {
	if o == nil || IsNil(o.StockTransfers) {
		var ret LineItemDataRelationshipsStockTransfers
		return ret
	}
	return *o.StockTransfers
}

// GetStockTransfersOk returns a tuple with the StockTransfers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetStockTransfersOk() (*LineItemDataRelationshipsStockTransfers, bool) {
	if o == nil || IsNil(o.StockTransfers) {
		return nil, false
	}
	return o.StockTransfers, true
}

// HasStockTransfers returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasStockTransfers() bool {
	if o != nil && !IsNil(o.StockTransfers) {
		return true
	}

	return false
}

// SetStockTransfers gets a reference to the given LineItemDataRelationshipsStockTransfers and assigns it to the StockTransfers field.
func (o *OrderDataRelationships) SetStockTransfers(v LineItemDataRelationshipsStockTransfers) {
	o.StockTransfers = &v
}

// GetShipments returns the Shipments field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetShipments() LineItemDataRelationshipsShipment {
	if o == nil || IsNil(o.Shipments) {
		var ret LineItemDataRelationshipsShipment
		return ret
	}
	return *o.Shipments
}

// GetShipmentsOk returns a tuple with the Shipments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetShipmentsOk() (*LineItemDataRelationshipsShipment, bool) {
	if o == nil || IsNil(o.Shipments) {
		return nil, false
	}
	return o.Shipments, true
}

// HasShipments returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasShipments() bool {
	if o != nil && !IsNil(o.Shipments) {
		return true
	}

	return false
}

// SetShipments gets a reference to the given LineItemDataRelationshipsShipment and assigns it to the Shipments field.
func (o *OrderDataRelationships) SetShipments(v LineItemDataRelationshipsShipment) {
	o.Shipments = &v
}

// GetPaymentOptions returns the PaymentOptions field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetPaymentOptions() OrderDataRelationshipsPaymentOptions {
	if o == nil || IsNil(o.PaymentOptions) {
		var ret OrderDataRelationshipsPaymentOptions
		return ret
	}
	return *o.PaymentOptions
}

// GetPaymentOptionsOk returns a tuple with the PaymentOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetPaymentOptionsOk() (*OrderDataRelationshipsPaymentOptions, bool) {
	if o == nil || IsNil(o.PaymentOptions) {
		return nil, false
	}
	return o.PaymentOptions, true
}

// HasPaymentOptions returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasPaymentOptions() bool {
	if o != nil && !IsNil(o.PaymentOptions) {
		return true
	}

	return false
}

// SetPaymentOptions gets a reference to the given OrderDataRelationshipsPaymentOptions and assigns it to the PaymentOptions field.
func (o *OrderDataRelationships) SetPaymentOptions(v OrderDataRelationshipsPaymentOptions) {
	o.PaymentOptions = &v
}

// GetTransactions returns the Transactions field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetTransactions() OrderDataRelationshipsTransactions {
	if o == nil || IsNil(o.Transactions) {
		var ret OrderDataRelationshipsTransactions
		return ret
	}
	return *o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetTransactionsOk() (*OrderDataRelationshipsTransactions, bool) {
	if o == nil || IsNil(o.Transactions) {
		return nil, false
	}
	return o.Transactions, true
}

// HasTransactions returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasTransactions() bool {
	if o != nil && !IsNil(o.Transactions) {
		return true
	}

	return false
}

// SetTransactions gets a reference to the given OrderDataRelationshipsTransactions and assigns it to the Transactions field.
func (o *OrderDataRelationships) SetTransactions(v OrderDataRelationshipsTransactions) {
	o.Transactions = &v
}

// GetAuthorizations returns the Authorizations field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetAuthorizations() CaptureDataRelationshipsReferenceAuthorization {
	if o == nil || IsNil(o.Authorizations) {
		var ret CaptureDataRelationshipsReferenceAuthorization
		return ret
	}
	return *o.Authorizations
}

// GetAuthorizationsOk returns a tuple with the Authorizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetAuthorizationsOk() (*CaptureDataRelationshipsReferenceAuthorization, bool) {
	if o == nil || IsNil(o.Authorizations) {
		return nil, false
	}
	return o.Authorizations, true
}

// HasAuthorizations returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasAuthorizations() bool {
	if o != nil && !IsNil(o.Authorizations) {
		return true
	}

	return false
}

// SetAuthorizations gets a reference to the given CaptureDataRelationshipsReferenceAuthorization and assigns it to the Authorizations field.
func (o *OrderDataRelationships) SetAuthorizations(v CaptureDataRelationshipsReferenceAuthorization) {
	o.Authorizations = &v
}

// GetCaptures returns the Captures field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetCaptures() AuthorizationDataRelationshipsCaptures {
	if o == nil || IsNil(o.Captures) {
		var ret AuthorizationDataRelationshipsCaptures
		return ret
	}
	return *o.Captures
}

// GetCapturesOk returns a tuple with the Captures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetCapturesOk() (*AuthorizationDataRelationshipsCaptures, bool) {
	if o == nil || IsNil(o.Captures) {
		return nil, false
	}
	return o.Captures, true
}

// HasCaptures returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasCaptures() bool {
	if o != nil && !IsNil(o.Captures) {
		return true
	}

	return false
}

// SetCaptures gets a reference to the given AuthorizationDataRelationshipsCaptures and assigns it to the Captures field.
func (o *OrderDataRelationships) SetCaptures(v AuthorizationDataRelationshipsCaptures) {
	o.Captures = &v
}

// GetVoids returns the Voids field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetVoids() AuthorizationDataRelationshipsVoids {
	if o == nil || IsNil(o.Voids) {
		var ret AuthorizationDataRelationshipsVoids
		return ret
	}
	return *o.Voids
}

// GetVoidsOk returns a tuple with the Voids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetVoidsOk() (*AuthorizationDataRelationshipsVoids, bool) {
	if o == nil || IsNil(o.Voids) {
		return nil, false
	}
	return o.Voids, true
}

// HasVoids returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasVoids() bool {
	if o != nil && !IsNil(o.Voids) {
		return true
	}

	return false
}

// SetVoids gets a reference to the given AuthorizationDataRelationshipsVoids and assigns it to the Voids field.
func (o *OrderDataRelationships) SetVoids(v AuthorizationDataRelationshipsVoids) {
	o.Voids = &v
}

// GetRefunds returns the Refunds field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetRefunds() CaptureDataRelationshipsRefunds {
	if o == nil || IsNil(o.Refunds) {
		var ret CaptureDataRelationshipsRefunds
		return ret
	}
	return *o.Refunds
}

// GetRefundsOk returns a tuple with the Refunds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetRefundsOk() (*CaptureDataRelationshipsRefunds, bool) {
	if o == nil || IsNil(o.Refunds) {
		return nil, false
	}
	return o.Refunds, true
}

// HasRefunds returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasRefunds() bool {
	if o != nil && !IsNil(o.Refunds) {
		return true
	}

	return false
}

// SetRefunds gets a reference to the given CaptureDataRelationshipsRefunds and assigns it to the Refunds field.
func (o *OrderDataRelationships) SetRefunds(v CaptureDataRelationshipsRefunds) {
	o.Refunds = &v
}

// GetReturns returns the Returns field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetReturns() CaptureDataRelationshipsReturn {
	if o == nil || IsNil(o.Returns) {
		var ret CaptureDataRelationshipsReturn
		return ret
	}
	return *o.Returns
}

// GetReturnsOk returns a tuple with the Returns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetReturnsOk() (*CaptureDataRelationshipsReturn, bool) {
	if o == nil || IsNil(o.Returns) {
		return nil, false
	}
	return o.Returns, true
}

// HasReturns returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasReturns() bool {
	if o != nil && !IsNil(o.Returns) {
		return true
	}

	return false
}

// SetReturns gets a reference to the given CaptureDataRelationshipsReturn and assigns it to the Returns field.
func (o *OrderDataRelationships) SetReturns(v CaptureDataRelationshipsReturn) {
	o.Returns = &v
}

// GetOrderSubscription returns the OrderSubscription field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetOrderSubscription() CustomerDataRelationshipsOrderSubscriptions {
	if o == nil || IsNil(o.OrderSubscription) {
		var ret CustomerDataRelationshipsOrderSubscriptions
		return ret
	}
	return *o.OrderSubscription
}

// GetOrderSubscriptionOk returns a tuple with the OrderSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetOrderSubscriptionOk() (*CustomerDataRelationshipsOrderSubscriptions, bool) {
	if o == nil || IsNil(o.OrderSubscription) {
		return nil, false
	}
	return o.OrderSubscription, true
}

// HasOrderSubscription returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasOrderSubscription() bool {
	if o != nil && !IsNil(o.OrderSubscription) {
		return true
	}

	return false
}

// SetOrderSubscription gets a reference to the given CustomerDataRelationshipsOrderSubscriptions and assigns it to the OrderSubscription field.
func (o *OrderDataRelationships) SetOrderSubscription(v CustomerDataRelationshipsOrderSubscriptions) {
	o.OrderSubscription = &v
}

// GetOrderSubscriptions returns the OrderSubscriptions field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetOrderSubscriptions() CustomerDataRelationshipsOrderSubscriptions {
	if o == nil || IsNil(o.OrderSubscriptions) {
		var ret CustomerDataRelationshipsOrderSubscriptions
		return ret
	}
	return *o.OrderSubscriptions
}

// GetOrderSubscriptionsOk returns a tuple with the OrderSubscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetOrderSubscriptionsOk() (*CustomerDataRelationshipsOrderSubscriptions, bool) {
	if o == nil || IsNil(o.OrderSubscriptions) {
		return nil, false
	}
	return o.OrderSubscriptions, true
}

// HasOrderSubscriptions returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasOrderSubscriptions() bool {
	if o != nil && !IsNil(o.OrderSubscriptions) {
		return true
	}

	return false
}

// SetOrderSubscriptions gets a reference to the given CustomerDataRelationshipsOrderSubscriptions and assigns it to the OrderSubscriptions field.
func (o *OrderDataRelationships) SetOrderSubscriptions(v CustomerDataRelationshipsOrderSubscriptions) {
	o.OrderSubscriptions = &v
}

// GetOrderFactories returns the OrderFactories field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetOrderFactories() OrderSubscriptionDataRelationshipsOrderFactories {
	if o == nil || IsNil(o.OrderFactories) {
		var ret OrderSubscriptionDataRelationshipsOrderFactories
		return ret
	}
	return *o.OrderFactories
}

// GetOrderFactoriesOk returns a tuple with the OrderFactories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetOrderFactoriesOk() (*OrderSubscriptionDataRelationshipsOrderFactories, bool) {
	if o == nil || IsNil(o.OrderFactories) {
		return nil, false
	}
	return o.OrderFactories, true
}

// HasOrderFactories returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasOrderFactories() bool {
	if o != nil && !IsNil(o.OrderFactories) {
		return true
	}

	return false
}

// SetOrderFactories gets a reference to the given OrderSubscriptionDataRelationshipsOrderFactories and assigns it to the OrderFactories field.
func (o *OrderDataRelationships) SetOrderFactories(v OrderSubscriptionDataRelationshipsOrderFactories) {
	o.OrderFactories = &v
}

// GetOrderCopies returns the OrderCopies field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetOrderCopies() OrderDataRelationshipsOrderCopies {
	if o == nil || IsNil(o.OrderCopies) {
		var ret OrderDataRelationshipsOrderCopies
		return ret
	}
	return *o.OrderCopies
}

// GetOrderCopiesOk returns a tuple with the OrderCopies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetOrderCopiesOk() (*OrderDataRelationshipsOrderCopies, bool) {
	if o == nil || IsNil(o.OrderCopies) {
		return nil, false
	}
	return o.OrderCopies, true
}

// HasOrderCopies returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasOrderCopies() bool {
	if o != nil && !IsNil(o.OrderCopies) {
		return true
	}

	return false
}

// SetOrderCopies gets a reference to the given OrderDataRelationshipsOrderCopies and assigns it to the OrderCopies field.
func (o *OrderDataRelationships) SetOrderCopies(v OrderDataRelationshipsOrderCopies) {
	o.OrderCopies = &v
}

// GetRecurringOrderCopies returns the RecurringOrderCopies field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetRecurringOrderCopies() OrderSubscriptionDataRelationshipsRecurringOrderCopies {
	if o == nil || IsNil(o.RecurringOrderCopies) {
		var ret OrderSubscriptionDataRelationshipsRecurringOrderCopies
		return ret
	}
	return *o.RecurringOrderCopies
}

// GetRecurringOrderCopiesOk returns a tuple with the RecurringOrderCopies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetRecurringOrderCopiesOk() (*OrderSubscriptionDataRelationshipsRecurringOrderCopies, bool) {
	if o == nil || IsNil(o.RecurringOrderCopies) {
		return nil, false
	}
	return o.RecurringOrderCopies, true
}

// HasRecurringOrderCopies returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasRecurringOrderCopies() bool {
	if o != nil && !IsNil(o.RecurringOrderCopies) {
		return true
	}

	return false
}

// SetRecurringOrderCopies gets a reference to the given OrderSubscriptionDataRelationshipsRecurringOrderCopies and assigns it to the RecurringOrderCopies field.
func (o *OrderDataRelationships) SetRecurringOrderCopies(v OrderSubscriptionDataRelationshipsRecurringOrderCopies) {
	o.RecurringOrderCopies = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetAttachments() AuthorizationDataRelationshipsAttachments {
	if o == nil || IsNil(o.Attachments) {
		var ret AuthorizationDataRelationshipsAttachments
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetAttachmentsOk() (*AuthorizationDataRelationshipsAttachments, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given AuthorizationDataRelationshipsAttachments and assigns it to the Attachments field.
func (o *OrderDataRelationships) SetAttachments(v AuthorizationDataRelationshipsAttachments) {
	o.Attachments = &v
}

// GetNotifications returns the Notifications field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetNotifications() LineItemDataRelationshipsNotifications {
	if o == nil || IsNil(o.Notifications) {
		var ret LineItemDataRelationshipsNotifications
		return ret
	}
	return *o.Notifications
}

// GetNotificationsOk returns a tuple with the Notifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetNotificationsOk() (*LineItemDataRelationshipsNotifications, bool) {
	if o == nil || IsNil(o.Notifications) {
		return nil, false
	}
	return o.Notifications, true
}

// HasNotifications returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasNotifications() bool {
	if o != nil && !IsNil(o.Notifications) {
		return true
	}

	return false
}

// SetNotifications gets a reference to the given LineItemDataRelationshipsNotifications and assigns it to the Notifications field.
func (o *OrderDataRelationships) SetNotifications(v LineItemDataRelationshipsNotifications) {
	o.Notifications = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetLinks() OrderDataRelationshipsLinks {
	if o == nil || IsNil(o.Links) {
		var ret OrderDataRelationshipsLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetLinksOk() (*OrderDataRelationshipsLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given OrderDataRelationshipsLinks and assigns it to the Links field.
func (o *OrderDataRelationships) SetLinks(v OrderDataRelationshipsLinks) {
	o.Links = &v
}

// GetResourceErrors returns the ResourceErrors field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetResourceErrors() OrderDataRelationshipsResourceErrors {
	if o == nil || IsNil(o.ResourceErrors) {
		var ret OrderDataRelationshipsResourceErrors
		return ret
	}
	return *o.ResourceErrors
}

// GetResourceErrorsOk returns a tuple with the ResourceErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetResourceErrorsOk() (*OrderDataRelationshipsResourceErrors, bool) {
	if o == nil || IsNil(o.ResourceErrors) {
		return nil, false
	}
	return o.ResourceErrors, true
}

// HasResourceErrors returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasResourceErrors() bool {
	if o != nil && !IsNil(o.ResourceErrors) {
		return true
	}

	return false
}

// SetResourceErrors gets a reference to the given OrderDataRelationshipsResourceErrors and assigns it to the ResourceErrors field.
func (o *OrderDataRelationships) SetResourceErrors(v OrderDataRelationshipsResourceErrors) {
	o.ResourceErrors = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetEvents() AddressDataRelationshipsEvents {
	if o == nil || IsNil(o.Events) {
		var ret AddressDataRelationshipsEvents
		return ret
	}
	return *o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetEventsOk() (*AddressDataRelationshipsEvents, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given AddressDataRelationshipsEvents and assigns it to the Events field.
func (o *OrderDataRelationships) SetEvents(v AddressDataRelationshipsEvents) {
	o.Events = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetTags() AddressDataRelationshipsTags {
	if o == nil || IsNil(o.Tags) {
		var ret AddressDataRelationshipsTags
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetTagsOk() (*AddressDataRelationshipsTags, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given AddressDataRelationshipsTags and assigns it to the Tags field.
func (o *OrderDataRelationships) SetTags(v AddressDataRelationshipsTags) {
	o.Tags = &v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *OrderDataRelationships) GetVersions() AddressDataRelationshipsVersions {
	if o == nil || IsNil(o.Versions) {
		var ret AddressDataRelationshipsVersions
		return ret
	}
	return *o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderDataRelationships) GetVersionsOk() (*AddressDataRelationshipsVersions, bool) {
	if o == nil || IsNil(o.Versions) {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *OrderDataRelationships) HasVersions() bool {
	if o != nil && !IsNil(o.Versions) {
		return true
	}

	return false
}

// SetVersions gets a reference to the given AddressDataRelationshipsVersions and assigns it to the Versions field.
func (o *OrderDataRelationships) SetVersions(v AddressDataRelationshipsVersions) {
	o.Versions = &v
}

func (o OrderDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Market) {
		toSerialize["market"] = o.Market
	}
	if !IsNil(o.Customer) {
		toSerialize["customer"] = o.Customer
	}
	if !IsNil(o.ShippingAddress) {
		toSerialize["shipping_address"] = o.ShippingAddress
	}
	if !IsNil(o.BillingAddress) {
		toSerialize["billing_address"] = o.BillingAddress
	}
	if !IsNil(o.Store) {
		toSerialize["store"] = o.Store
	}
	if !IsNil(o.AvailablePaymentMethods) {
		toSerialize["available_payment_methods"] = o.AvailablePaymentMethods
	}
	if !IsNil(o.AvailableCustomerPaymentSources) {
		toSerialize["available_customer_payment_sources"] = o.AvailableCustomerPaymentSources
	}
	if !IsNil(o.AvailableFreeSkus) {
		toSerialize["available_free_skus"] = o.AvailableFreeSkus
	}
	if !IsNil(o.AvailableFreeBundles) {
		toSerialize["available_free_bundles"] = o.AvailableFreeBundles
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["payment_method"] = o.PaymentMethod
	}
	if !IsNil(o.PaymentSource) {
		toSerialize["payment_source"] = o.PaymentSource
	}
	if !IsNil(o.LineItems) {
		toSerialize["line_items"] = o.LineItems
	}
	if !IsNil(o.LineItemOptions) {
		toSerialize["line_item_options"] = o.LineItemOptions
	}
	if !IsNil(o.StockReservations) {
		toSerialize["stock_reservations"] = o.StockReservations
	}
	if !IsNil(o.StockLineItems) {
		toSerialize["stock_line_items"] = o.StockLineItems
	}
	if !IsNil(o.StockTransfers) {
		toSerialize["stock_transfers"] = o.StockTransfers
	}
	if !IsNil(o.Shipments) {
		toSerialize["shipments"] = o.Shipments
	}
	if !IsNil(o.PaymentOptions) {
		toSerialize["payment_options"] = o.PaymentOptions
	}
	if !IsNil(o.Transactions) {
		toSerialize["transactions"] = o.Transactions
	}
	if !IsNil(o.Authorizations) {
		toSerialize["authorizations"] = o.Authorizations
	}
	if !IsNil(o.Captures) {
		toSerialize["captures"] = o.Captures
	}
	if !IsNil(o.Voids) {
		toSerialize["voids"] = o.Voids
	}
	if !IsNil(o.Refunds) {
		toSerialize["refunds"] = o.Refunds
	}
	if !IsNil(o.Returns) {
		toSerialize["returns"] = o.Returns
	}
	if !IsNil(o.OrderSubscription) {
		toSerialize["order_subscription"] = o.OrderSubscription
	}
	if !IsNil(o.OrderSubscriptions) {
		toSerialize["order_subscriptions"] = o.OrderSubscriptions
	}
	if !IsNil(o.OrderFactories) {
		toSerialize["order_factories"] = o.OrderFactories
	}
	if !IsNil(o.OrderCopies) {
		toSerialize["order_copies"] = o.OrderCopies
	}
	if !IsNil(o.RecurringOrderCopies) {
		toSerialize["recurring_order_copies"] = o.RecurringOrderCopies
	}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.Notifications) {
		toSerialize["notifications"] = o.Notifications
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.ResourceErrors) {
		toSerialize["resource_errors"] = o.ResourceErrors
	}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Versions) {
		toSerialize["versions"] = o.Versions
	}
	return toSerialize, nil
}

type NullableOrderDataRelationships struct {
	value *OrderDataRelationships
	isSet bool
}

func (v NullableOrderDataRelationships) Get() *OrderDataRelationships {
	return v.value
}

func (v *NullableOrderDataRelationships) Set(val *OrderDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderDataRelationships(val *OrderDataRelationships) *NullableOrderDataRelationships {
	return &NullableOrderDataRelationships{value: val, isSet: true}
}

func (v NullableOrderDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
