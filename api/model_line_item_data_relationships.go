/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the LineItemDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LineItemDataRelationships{}

// LineItemDataRelationships struct for LineItemDataRelationships
type LineItemDataRelationships struct {
	Order             *AdyenPaymentDataRelationshipsOrder          `json:"order,omitempty"`
	Item              *LineItemDataRelationshipsItem               `json:"item,omitempty"`
	Sku               *BundleDataRelationshipsSkus                 `json:"sku,omitempty"`
	Bundle            *LineItemDataRelationshipsBundle             `json:"bundle,omitempty"`
	Adjustment        *LineItemDataRelationshipsAdjustment         `json:"adjustment,omitempty"`
	GiftCard          *LineItemDataRelationshipsGiftCard           `json:"gift_card,omitempty"`
	Shipment          *LineItemDataRelationshipsShipment           `json:"shipment,omitempty"`
	PaymentMethod     *AdyenGatewayDataRelationshipsPaymentMethods `json:"payment_method,omitempty"`
	LineItemOptions   *LineItemDataRelationshipsLineItemOptions    `json:"line_item_options,omitempty"`
	ReturnLineItems   *LineItemDataRelationshipsReturnLineItems    `json:"return_line_items,omitempty"`
	StockReservations *LineItemDataRelationshipsStockReservations  `json:"stock_reservations,omitempty"`
	StockLineItems    *LineItemDataRelationshipsStockLineItems     `json:"stock_line_items,omitempty"`
	StockTransfers    *LineItemDataRelationshipsStockTransfers     `json:"stock_transfers,omitempty"`
	Notifications     *LineItemDataRelationshipsNotifications      `json:"notifications,omitempty"`
	Events            *AddressDataRelationshipsEvents              `json:"events,omitempty"`
	Tags              *AddressDataRelationshipsTags                `json:"tags,omitempty"`
}

// NewLineItemDataRelationships instantiates a new LineItemDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLineItemDataRelationships() *LineItemDataRelationships {
	this := LineItemDataRelationships{}
	return &this
}

// NewLineItemDataRelationshipsWithDefaults instantiates a new LineItemDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLineItemDataRelationshipsWithDefaults() *LineItemDataRelationships {
	this := LineItemDataRelationships{}
	return &this
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *LineItemDataRelationships) GetOrder() AdyenPaymentDataRelationshipsOrder {
	if o == nil || IsNil(o.Order) {
		var ret AdyenPaymentDataRelationshipsOrder
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemDataRelationships) GetOrderOk() (*AdyenPaymentDataRelationshipsOrder, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *LineItemDataRelationships) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given AdyenPaymentDataRelationshipsOrder and assigns it to the Order field.
func (o *LineItemDataRelationships) SetOrder(v AdyenPaymentDataRelationshipsOrder) {
	o.Order = &v
}

// GetItem returns the Item field value if set, zero value otherwise.
func (o *LineItemDataRelationships) GetItem() LineItemDataRelationshipsItem {
	if o == nil || IsNil(o.Item) {
		var ret LineItemDataRelationshipsItem
		return ret
	}
	return *o.Item
}

// GetItemOk returns a tuple with the Item field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemDataRelationships) GetItemOk() (*LineItemDataRelationshipsItem, bool) {
	if o == nil || IsNil(o.Item) {
		return nil, false
	}
	return o.Item, true
}

// HasItem returns a boolean if a field has been set.
func (o *LineItemDataRelationships) HasItem() bool {
	if o != nil && !IsNil(o.Item) {
		return true
	}

	return false
}

// SetItem gets a reference to the given LineItemDataRelationshipsItem and assigns it to the Item field.
func (o *LineItemDataRelationships) SetItem(v LineItemDataRelationshipsItem) {
	o.Item = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *LineItemDataRelationships) GetSku() BundleDataRelationshipsSkus {
	if o == nil || IsNil(o.Sku) {
		var ret BundleDataRelationshipsSkus
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemDataRelationships) GetSkuOk() (*BundleDataRelationshipsSkus, bool) {
	if o == nil || IsNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *LineItemDataRelationships) HasSku() bool {
	if o != nil && !IsNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given BundleDataRelationshipsSkus and assigns it to the Sku field.
func (o *LineItemDataRelationships) SetSku(v BundleDataRelationshipsSkus) {
	o.Sku = &v
}

// GetBundle returns the Bundle field value if set, zero value otherwise.
func (o *LineItemDataRelationships) GetBundle() LineItemDataRelationshipsBundle {
	if o == nil || IsNil(o.Bundle) {
		var ret LineItemDataRelationshipsBundle
		return ret
	}
	return *o.Bundle
}

// GetBundleOk returns a tuple with the Bundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemDataRelationships) GetBundleOk() (*LineItemDataRelationshipsBundle, bool) {
	if o == nil || IsNil(o.Bundle) {
		return nil, false
	}
	return o.Bundle, true
}

// HasBundle returns a boolean if a field has been set.
func (o *LineItemDataRelationships) HasBundle() bool {
	if o != nil && !IsNil(o.Bundle) {
		return true
	}

	return false
}

// SetBundle gets a reference to the given LineItemDataRelationshipsBundle and assigns it to the Bundle field.
func (o *LineItemDataRelationships) SetBundle(v LineItemDataRelationshipsBundle) {
	o.Bundle = &v
}

// GetAdjustment returns the Adjustment field value if set, zero value otherwise.
func (o *LineItemDataRelationships) GetAdjustment() LineItemDataRelationshipsAdjustment {
	if o == nil || IsNil(o.Adjustment) {
		var ret LineItemDataRelationshipsAdjustment
		return ret
	}
	return *o.Adjustment
}

// GetAdjustmentOk returns a tuple with the Adjustment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemDataRelationships) GetAdjustmentOk() (*LineItemDataRelationshipsAdjustment, bool) {
	if o == nil || IsNil(o.Adjustment) {
		return nil, false
	}
	return o.Adjustment, true
}

// HasAdjustment returns a boolean if a field has been set.
func (o *LineItemDataRelationships) HasAdjustment() bool {
	if o != nil && !IsNil(o.Adjustment) {
		return true
	}

	return false
}

// SetAdjustment gets a reference to the given LineItemDataRelationshipsAdjustment and assigns it to the Adjustment field.
func (o *LineItemDataRelationships) SetAdjustment(v LineItemDataRelationshipsAdjustment) {
	o.Adjustment = &v
}

// GetGiftCard returns the GiftCard field value if set, zero value otherwise.
func (o *LineItemDataRelationships) GetGiftCard() LineItemDataRelationshipsGiftCard {
	if o == nil || IsNil(o.GiftCard) {
		var ret LineItemDataRelationshipsGiftCard
		return ret
	}
	return *o.GiftCard
}

// GetGiftCardOk returns a tuple with the GiftCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemDataRelationships) GetGiftCardOk() (*LineItemDataRelationshipsGiftCard, bool) {
	if o == nil || IsNil(o.GiftCard) {
		return nil, false
	}
	return o.GiftCard, true
}

// HasGiftCard returns a boolean if a field has been set.
func (o *LineItemDataRelationships) HasGiftCard() bool {
	if o != nil && !IsNil(o.GiftCard) {
		return true
	}

	return false
}

// SetGiftCard gets a reference to the given LineItemDataRelationshipsGiftCard and assigns it to the GiftCard field.
func (o *LineItemDataRelationships) SetGiftCard(v LineItemDataRelationshipsGiftCard) {
	o.GiftCard = &v
}

// GetShipment returns the Shipment field value if set, zero value otherwise.
func (o *LineItemDataRelationships) GetShipment() LineItemDataRelationshipsShipment {
	if o == nil || IsNil(o.Shipment) {
		var ret LineItemDataRelationshipsShipment
		return ret
	}
	return *o.Shipment
}

// GetShipmentOk returns a tuple with the Shipment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemDataRelationships) GetShipmentOk() (*LineItemDataRelationshipsShipment, bool) {
	if o == nil || IsNil(o.Shipment) {
		return nil, false
	}
	return o.Shipment, true
}

// HasShipment returns a boolean if a field has been set.
func (o *LineItemDataRelationships) HasShipment() bool {
	if o != nil && !IsNil(o.Shipment) {
		return true
	}

	return false
}

// SetShipment gets a reference to the given LineItemDataRelationshipsShipment and assigns it to the Shipment field.
func (o *LineItemDataRelationships) SetShipment(v LineItemDataRelationshipsShipment) {
	o.Shipment = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *LineItemDataRelationships) GetPaymentMethod() AdyenGatewayDataRelationshipsPaymentMethods {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret AdyenGatewayDataRelationshipsPaymentMethods
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemDataRelationships) GetPaymentMethodOk() (*AdyenGatewayDataRelationshipsPaymentMethods, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *LineItemDataRelationships) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given AdyenGatewayDataRelationshipsPaymentMethods and assigns it to the PaymentMethod field.
func (o *LineItemDataRelationships) SetPaymentMethod(v AdyenGatewayDataRelationshipsPaymentMethods) {
	o.PaymentMethod = &v
}

// GetLineItemOptions returns the LineItemOptions field value if set, zero value otherwise.
func (o *LineItemDataRelationships) GetLineItemOptions() LineItemDataRelationshipsLineItemOptions {
	if o == nil || IsNil(o.LineItemOptions) {
		var ret LineItemDataRelationshipsLineItemOptions
		return ret
	}
	return *o.LineItemOptions
}

// GetLineItemOptionsOk returns a tuple with the LineItemOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemDataRelationships) GetLineItemOptionsOk() (*LineItemDataRelationshipsLineItemOptions, bool) {
	if o == nil || IsNil(o.LineItemOptions) {
		return nil, false
	}
	return o.LineItemOptions, true
}

// HasLineItemOptions returns a boolean if a field has been set.
func (o *LineItemDataRelationships) HasLineItemOptions() bool {
	if o != nil && !IsNil(o.LineItemOptions) {
		return true
	}

	return false
}

// SetLineItemOptions gets a reference to the given LineItemDataRelationshipsLineItemOptions and assigns it to the LineItemOptions field.
func (o *LineItemDataRelationships) SetLineItemOptions(v LineItemDataRelationshipsLineItemOptions) {
	o.LineItemOptions = &v
}

// GetReturnLineItems returns the ReturnLineItems field value if set, zero value otherwise.
func (o *LineItemDataRelationships) GetReturnLineItems() LineItemDataRelationshipsReturnLineItems {
	if o == nil || IsNil(o.ReturnLineItems) {
		var ret LineItemDataRelationshipsReturnLineItems
		return ret
	}
	return *o.ReturnLineItems
}

// GetReturnLineItemsOk returns a tuple with the ReturnLineItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemDataRelationships) GetReturnLineItemsOk() (*LineItemDataRelationshipsReturnLineItems, bool) {
	if o == nil || IsNil(o.ReturnLineItems) {
		return nil, false
	}
	return o.ReturnLineItems, true
}

// HasReturnLineItems returns a boolean if a field has been set.
func (o *LineItemDataRelationships) HasReturnLineItems() bool {
	if o != nil && !IsNil(o.ReturnLineItems) {
		return true
	}

	return false
}

// SetReturnLineItems gets a reference to the given LineItemDataRelationshipsReturnLineItems and assigns it to the ReturnLineItems field.
func (o *LineItemDataRelationships) SetReturnLineItems(v LineItemDataRelationshipsReturnLineItems) {
	o.ReturnLineItems = &v
}

// GetStockReservations returns the StockReservations field value if set, zero value otherwise.
func (o *LineItemDataRelationships) GetStockReservations() LineItemDataRelationshipsStockReservations {
	if o == nil || IsNil(o.StockReservations) {
		var ret LineItemDataRelationshipsStockReservations
		return ret
	}
	return *o.StockReservations
}

// GetStockReservationsOk returns a tuple with the StockReservations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemDataRelationships) GetStockReservationsOk() (*LineItemDataRelationshipsStockReservations, bool) {
	if o == nil || IsNil(o.StockReservations) {
		return nil, false
	}
	return o.StockReservations, true
}

// HasStockReservations returns a boolean if a field has been set.
func (o *LineItemDataRelationships) HasStockReservations() bool {
	if o != nil && !IsNil(o.StockReservations) {
		return true
	}

	return false
}

// SetStockReservations gets a reference to the given LineItemDataRelationshipsStockReservations and assigns it to the StockReservations field.
func (o *LineItemDataRelationships) SetStockReservations(v LineItemDataRelationshipsStockReservations) {
	o.StockReservations = &v
}

// GetStockLineItems returns the StockLineItems field value if set, zero value otherwise.
func (o *LineItemDataRelationships) GetStockLineItems() LineItemDataRelationshipsStockLineItems {
	if o == nil || IsNil(o.StockLineItems) {
		var ret LineItemDataRelationshipsStockLineItems
		return ret
	}
	return *o.StockLineItems
}

// GetStockLineItemsOk returns a tuple with the StockLineItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemDataRelationships) GetStockLineItemsOk() (*LineItemDataRelationshipsStockLineItems, bool) {
	if o == nil || IsNil(o.StockLineItems) {
		return nil, false
	}
	return o.StockLineItems, true
}

// HasStockLineItems returns a boolean if a field has been set.
func (o *LineItemDataRelationships) HasStockLineItems() bool {
	if o != nil && !IsNil(o.StockLineItems) {
		return true
	}

	return false
}

// SetStockLineItems gets a reference to the given LineItemDataRelationshipsStockLineItems and assigns it to the StockLineItems field.
func (o *LineItemDataRelationships) SetStockLineItems(v LineItemDataRelationshipsStockLineItems) {
	o.StockLineItems = &v
}

// GetStockTransfers returns the StockTransfers field value if set, zero value otherwise.
func (o *LineItemDataRelationships) GetStockTransfers() LineItemDataRelationshipsStockTransfers {
	if o == nil || IsNil(o.StockTransfers) {
		var ret LineItemDataRelationshipsStockTransfers
		return ret
	}
	return *o.StockTransfers
}

// GetStockTransfersOk returns a tuple with the StockTransfers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemDataRelationships) GetStockTransfersOk() (*LineItemDataRelationshipsStockTransfers, bool) {
	if o == nil || IsNil(o.StockTransfers) {
		return nil, false
	}
	return o.StockTransfers, true
}

// HasStockTransfers returns a boolean if a field has been set.
func (o *LineItemDataRelationships) HasStockTransfers() bool {
	if o != nil && !IsNil(o.StockTransfers) {
		return true
	}

	return false
}

// SetStockTransfers gets a reference to the given LineItemDataRelationshipsStockTransfers and assigns it to the StockTransfers field.
func (o *LineItemDataRelationships) SetStockTransfers(v LineItemDataRelationshipsStockTransfers) {
	o.StockTransfers = &v
}

// GetNotifications returns the Notifications field value if set, zero value otherwise.
func (o *LineItemDataRelationships) GetNotifications() LineItemDataRelationshipsNotifications {
	if o == nil || IsNil(o.Notifications) {
		var ret LineItemDataRelationshipsNotifications
		return ret
	}
	return *o.Notifications
}

// GetNotificationsOk returns a tuple with the Notifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemDataRelationships) GetNotificationsOk() (*LineItemDataRelationshipsNotifications, bool) {
	if o == nil || IsNil(o.Notifications) {
		return nil, false
	}
	return o.Notifications, true
}

// HasNotifications returns a boolean if a field has been set.
func (o *LineItemDataRelationships) HasNotifications() bool {
	if o != nil && !IsNil(o.Notifications) {
		return true
	}

	return false
}

// SetNotifications gets a reference to the given LineItemDataRelationshipsNotifications and assigns it to the Notifications field.
func (o *LineItemDataRelationships) SetNotifications(v LineItemDataRelationshipsNotifications) {
	o.Notifications = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *LineItemDataRelationships) GetEvents() AddressDataRelationshipsEvents {
	if o == nil || IsNil(o.Events) {
		var ret AddressDataRelationshipsEvents
		return ret
	}
	return *o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemDataRelationships) GetEventsOk() (*AddressDataRelationshipsEvents, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *LineItemDataRelationships) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given AddressDataRelationshipsEvents and assigns it to the Events field.
func (o *LineItemDataRelationships) SetEvents(v AddressDataRelationshipsEvents) {
	o.Events = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *LineItemDataRelationships) GetTags() AddressDataRelationshipsTags {
	if o == nil || IsNil(o.Tags) {
		var ret AddressDataRelationshipsTags
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LineItemDataRelationships) GetTagsOk() (*AddressDataRelationshipsTags, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *LineItemDataRelationships) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given AddressDataRelationshipsTags and assigns it to the Tags field.
func (o *LineItemDataRelationships) SetTags(v AddressDataRelationshipsTags) {
	o.Tags = &v
}

func (o LineItemDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LineItemDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.Item) {
		toSerialize["item"] = o.Item
	}
	if !IsNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	if !IsNil(o.Bundle) {
		toSerialize["bundle"] = o.Bundle
	}
	if !IsNil(o.Adjustment) {
		toSerialize["adjustment"] = o.Adjustment
	}
	if !IsNil(o.GiftCard) {
		toSerialize["gift_card"] = o.GiftCard
	}
	if !IsNil(o.Shipment) {
		toSerialize["shipment"] = o.Shipment
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["payment_method"] = o.PaymentMethod
	}
	if !IsNil(o.LineItemOptions) {
		toSerialize["line_item_options"] = o.LineItemOptions
	}
	if !IsNil(o.ReturnLineItems) {
		toSerialize["return_line_items"] = o.ReturnLineItems
	}
	if !IsNil(o.StockReservations) {
		toSerialize["stock_reservations"] = o.StockReservations
	}
	if !IsNil(o.StockLineItems) {
		toSerialize["stock_line_items"] = o.StockLineItems
	}
	if !IsNil(o.StockTransfers) {
		toSerialize["stock_transfers"] = o.StockTransfers
	}
	if !IsNil(o.Notifications) {
		toSerialize["notifications"] = o.Notifications
	}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableLineItemDataRelationships struct {
	value *LineItemDataRelationships
	isSet bool
}

func (v NullableLineItemDataRelationships) Get() *LineItemDataRelationships {
	return v.value
}

func (v *NullableLineItemDataRelationships) Set(val *LineItemDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableLineItemDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableLineItemDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLineItemDataRelationships(val *LineItemDataRelationships) *NullableLineItemDataRelationships {
	return &NullableLineItemDataRelationships{value: val, isSet: true}
}

func (v NullableLineItemDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLineItemDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
