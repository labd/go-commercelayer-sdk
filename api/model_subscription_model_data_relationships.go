/*
Commerce Layer API

Headless Commerce for Global Brands.

API version: 7.6.1
Contact: support@commercelayer.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the SubscriptionModelDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionModelDataRelationships{}

// SubscriptionModelDataRelationships struct for SubscriptionModelDataRelationships
type SubscriptionModelDataRelationships struct {
	Markets            *AvalaraAccountDataRelationshipsMarkets      `json:"markets,omitempty"`
	OrderSubscriptions *CustomerDataRelationshipsOrderSubscriptions `json:"order_subscriptions,omitempty"`
	Attachments        *AuthorizationDataRelationshipsAttachments   `json:"attachments,omitempty"`
}

// NewSubscriptionModelDataRelationships instantiates a new SubscriptionModelDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionModelDataRelationships() *SubscriptionModelDataRelationships {
	this := SubscriptionModelDataRelationships{}
	return &this
}

// NewSubscriptionModelDataRelationshipsWithDefaults instantiates a new SubscriptionModelDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionModelDataRelationshipsWithDefaults() *SubscriptionModelDataRelationships {
	this := SubscriptionModelDataRelationships{}
	return &this
}

// GetMarkets returns the Markets field value if set, zero value otherwise.
func (o *SubscriptionModelDataRelationships) GetMarkets() AvalaraAccountDataRelationshipsMarkets {
	if o == nil || IsNil(o.Markets) {
		var ret AvalaraAccountDataRelationshipsMarkets
		return ret
	}
	return *o.Markets
}

// GetMarketsOk returns a tuple with the Markets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionModelDataRelationships) GetMarketsOk() (*AvalaraAccountDataRelationshipsMarkets, bool) {
	if o == nil || IsNil(o.Markets) {
		return nil, false
	}
	return o.Markets, true
}

// HasMarkets returns a boolean if a field has been set.
func (o *SubscriptionModelDataRelationships) HasMarkets() bool {
	if o != nil && !IsNil(o.Markets) {
		return true
	}

	return false
}

// SetMarkets gets a reference to the given AvalaraAccountDataRelationshipsMarkets and assigns it to the Markets field.
func (o *SubscriptionModelDataRelationships) SetMarkets(v AvalaraAccountDataRelationshipsMarkets) {
	o.Markets = &v
}

// GetOrderSubscriptions returns the OrderSubscriptions field value if set, zero value otherwise.
func (o *SubscriptionModelDataRelationships) GetOrderSubscriptions() CustomerDataRelationshipsOrderSubscriptions {
	if o == nil || IsNil(o.OrderSubscriptions) {
		var ret CustomerDataRelationshipsOrderSubscriptions
		return ret
	}
	return *o.OrderSubscriptions
}

// GetOrderSubscriptionsOk returns a tuple with the OrderSubscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionModelDataRelationships) GetOrderSubscriptionsOk() (*CustomerDataRelationshipsOrderSubscriptions, bool) {
	if o == nil || IsNil(o.OrderSubscriptions) {
		return nil, false
	}
	return o.OrderSubscriptions, true
}

// HasOrderSubscriptions returns a boolean if a field has been set.
func (o *SubscriptionModelDataRelationships) HasOrderSubscriptions() bool {
	if o != nil && !IsNil(o.OrderSubscriptions) {
		return true
	}

	return false
}

// SetOrderSubscriptions gets a reference to the given CustomerDataRelationshipsOrderSubscriptions and assigns it to the OrderSubscriptions field.
func (o *SubscriptionModelDataRelationships) SetOrderSubscriptions(v CustomerDataRelationshipsOrderSubscriptions) {
	o.OrderSubscriptions = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *SubscriptionModelDataRelationships) GetAttachments() AuthorizationDataRelationshipsAttachments {
	if o == nil || IsNil(o.Attachments) {
		var ret AuthorizationDataRelationshipsAttachments
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionModelDataRelationships) GetAttachmentsOk() (*AuthorizationDataRelationshipsAttachments, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *SubscriptionModelDataRelationships) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given AuthorizationDataRelationshipsAttachments and assigns it to the Attachments field.
func (o *SubscriptionModelDataRelationships) SetAttachments(v AuthorizationDataRelationshipsAttachments) {
	o.Attachments = &v
}

func (o SubscriptionModelDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionModelDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Markets) {
		toSerialize["markets"] = o.Markets
	}
	if !IsNil(o.OrderSubscriptions) {
		toSerialize["order_subscriptions"] = o.OrderSubscriptions
	}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	return toSerialize, nil
}

type NullableSubscriptionModelDataRelationships struct {
	value *SubscriptionModelDataRelationships
	isSet bool
}

func (v NullableSubscriptionModelDataRelationships) Get() *SubscriptionModelDataRelationships {
	return v.value
}

func (v *NullableSubscriptionModelDataRelationships) Set(val *SubscriptionModelDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionModelDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionModelDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionModelDataRelationships(val *SubscriptionModelDataRelationships) *NullableSubscriptionModelDataRelationships {
	return &NullableSubscriptionModelDataRelationships{value: val, isSet: true}
}

func (v NullableSubscriptionModelDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionModelDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
